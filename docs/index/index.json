<<<<<<< HEAD
{"interfaceLanguages":{"swift":[{"children":[{"title":"Graphics","type":"groupMarker"},{"children":[{"title":"Resolution","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resolution","title":"var resolution: CGSize","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/width","title":"var width: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/height","title":"var height: CGFloat","type":"property"},{"title":"Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texture","title":"let texture: MTLTexture","type":"property"},{"title":"Metadata","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/bits","title":"let bits: TMBits","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorspace","title":"let colorSpace: TMColorSpace","type":"property"},{"title":"Pixels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/firstpixelcolor","title":"var firstPixelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/averagepixelcolor","title":"var averagePixelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelcolors","title":"var pixelColors: [[PixelColor]]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/ispixelsequal(to:)","title":"func isPixelsEqual(to: Graphic) async throws -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixels(_:options:)","title":"static func pixels([[PixelColor]], options: Graphic.ContentOptions) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixel(x:y:options:)","title":"func pixel(x: Int, y: Int, options: Graphic.EffectOptions) async throws -> PixelColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixel(u:v:options:)","title":"func pixel(u: CGFloat, v: CGFloat, options: Graphic.EffectOptions) async throws -> PixelColor","type":"method"},{"title":"Channels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels","title":"var channels: [CGFloat]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels8","title":"var channels8: [UInt8]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels32","title":"var channels32: [Float]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(_:resolution:)-5dtx6","title":"static func channels([UInt8], resolution: CGSize) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(_:resolution:)-6011k","title":"static func channels([Float], resolution: CGSize) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(_:resolution:)-6011k","title":"static func channels([Float], resolution: CGSize) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(pointer:resolution:)-1mynx","title":"static func channels(pointer: UnsafePointer<UInt8>, resolution: CGSize) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(pointer:resolution:)-5svpm","title":"static func channels(pointer: UnsafePointer<Float>, resolution: CGSize) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(pointer:resolution:)-5svpm","title":"static func channels(pointer: UnsafePointer<Float>, resolution: CGSize) throws -> Graphic","type":"method"},{"title":"Image","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/image","title":"var image: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/imagewithtransparency","title":"var imageWithTransparency: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/cgimage","title":"var cgImage: CGImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/ciimage","title":"var ciImage: CIImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(named:)","title":"static func image(named: String) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(named:in:)","title":"static func image(named: String, in: Bundle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(url:)","title":"static func image(url: URL) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(_:)-6435w","title":"static func image(TMImage) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(_:)-7tsh0","title":"static func image(CGImage) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(_:)-1mubl","title":"static func image(CIImage) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/pngdata","title":"var pngData: Data","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/xdrimage","title":"var xdrImage: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/writeimage(to:xdr:)","title":"func writeImage(to: URL, xdr: Bool) async throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/israwimage(url:)","title":"static func isRAWImage(url: URL) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rawimage(url:)","title":"static func rawImage(url: URL) async throws -> Graphic","type":"method"},{"title":"Video","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails(url:)","title":"static func videoDetails(url: URL) async throws -> Graphic.VideoDetails","type":"method"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/fps","title":"let fps: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/framecount","title":"let frameCount: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/resolution","title":"let resolution: CGSize","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/videodetails","title":"Graphic.VideoDetails","type":"struct"},{"path":"\/documentation\/asyncgraphics\/graphic\/playvideo(url:loop:volume:)","title":"static func playVideo(url: URL, loop: Bool, volume: Double) async throws -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideo(url:progress:)","title":"static func importVideo(url: URL, progress: ((Graphic.ImportVideoFrameProgress) -> ())?) async throws -> [Graphic]","type":"method"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframeprogress\/fraction","title":"let fraction: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframeprogress\/index","title":"let index: Int","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframeprogress","title":"Graphic.ImportVideoFrameProgress","type":"struct"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideostream(url:)","title":"static func importVideoStream(url: URL) -> AsyncThrowingStream<Graphic, Error>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframe(at:url:info:)","title":"static func importVideoFrame(at: Int, url: URL, info: VideoInfo?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotourl(with:fps:kbps:format:codec:)","title":"static func exportVideoToURL(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> URL","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotodata(with:fps:kbps:format:codec:)","title":"static func exportVideoToData(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> Data","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/processvideo(url:)","title":"static func processVideo(url: URL) async throws -> AsyncThrowingStream<Graphic, Error>","type":"method"},{"title":"Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texture(_:)","title":"static func texture(MTLTexture) throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/unsupportedtype","title":"case unsupportedType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror","title":"Graphic.TextureError","type":"enum"},{"title":"Buffer","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelbuffer","title":"var pixelBuffer: CVPixelBuffer","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/samplebuffer","title":"var sampleBuffer: CMSampleBuffer","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelbuffer(_:)","title":"static func pixelBuffer(CVPixelBuffer) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/samplebuffer(_:)","title":"static func sampleBuffer(CMSampleBuffer) throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/unsupportedtype","title":"case unsupportedType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror","title":"Graphic.BufferError","type":"enum"},{"title":"View","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/view(content:)","title":"static func view<Content>(content: () -> Content) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/view(resolution:alignment:content:)","title":"static func view<Content>(resolution: CGSize, alignment: Alignment, content: () -> Content) async throws -> Graphic","type":"method"},{"title":"Resolution","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(to:placement:method:)","title":"func resized(to: CGSize, placement: Placement, method: Graphic.ResizeMethod) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizedstretched(to:method:)","title":"func resizedStretched(to: CGSize, method: Graphic.ResizeMethod) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(in:options:)","title":"func resized(in: CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(to:placement:options:)","title":"func resized(to: CGSize, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(by:)","title":"func resized(by: CGFloat) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/bilinear","title":"case bilinear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/lanczos","title":"case lanczos","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod","title":"Graphic.ResizeMethod","type":"enum"},{"title":"Graph","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/graph(resolution:renderer:graph:)","title":"func graph(resolution: CGSize, renderer: AGGraphRenderer, graph: () -> AGGraph) async throws -> Graphic","type":"method"},{"title":"Camera","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera\/init(_:with:quality:external:centerstage:)","title":"convenience init(AVCaptureDevice.Position, with: AVCaptureDevice.DeviceType, quality: AVCaptureSession.Preset, external: Bool, centerStage: Bool) throws","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera\/init(device:quality:)","title":"init(device: AVCaptureDevice, quality: AVCaptureSession.Preset) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera\/focus(at:mode:)","title":"func focus(at: CGPoint, mode: AVCaptureDevice.FocusMode)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera\/captureoutput(_:didoutput:from:)","title":"func captureOutput(AVCaptureOutput, didOutput: CMSampleBuffer, from: AVCaptureConnection)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/camera\/avcapturevideodataoutputsamplebufferdelegate-implementations","title":"AVCaptureVideoDataOutputSampleBufferDelegate Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/camera","title":"Graphic.Camera","type":"class"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(with:)","title":"static func camera(with: Graphic.Camera) -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(at:lens:quality:)","title":"static func camera(at: Graphic.CameraPosition, lens: AVCaptureDevice.DeviceType, quality: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(device:quality:)","title":"static func camera(device: AVCaptureDevice, quality: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(_:device:preset:)","title":"static func camera(Graphic.CameraPosition, device: AVCaptureDevice.DeviceType, preset: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/back","title":"case back","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/external","title":"case external","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/front","title":"case front","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/flip()","title":"func flip()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/flipped()","title":"func flipped() -> Graphic.CameraPosition","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition","title":"Graphic.CameraPosition","type":"enum"},{"title":"Screen","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/screen(at:)","title":"static func screen(at: Int) throws -> AsyncStream<Graphic>","type":"method"},{"title":"Maps","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maps(type:latitude:longitude:span:resolution:mapoptions:options:)","title":"static func maps(type: Graphic.MapType, latitude: Angle, longitude: Angle, span: Angle, resolution: CGSize, mapOptions: Graphic.MapOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybrid","title":"case hybrid","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybridflyover","title":"case hybridFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/mutedstandard","title":"case mutedStandard","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satellite","title":"case satellite","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satelliteflyover","title":"case satelliteFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/standard","title":"case standard","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype","title":"Graphic.MapType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/darkmode","title":"static let darkMode: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showbuildings","title":"static let showBuildings: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showpointsofinterest","title":"static let showPointsOfInterest: Graphic.MapOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions","title":"Graphic.MapOptions","type":"struct"},{"title":"Color","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/color(_:resolution:options:)","title":"static func color(PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Text","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/text(_:font:center:horizontalalignment:verticalalignment:color:backgroundcolor:resolution:options:)","title":"static func text(String, font: Graphic.TextFont, center: CGPoint?, horizontalAlignment: Graphic.TextHorizontalAlignment, verticalAlignment: Graphic.TextVerticalAlignment, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/textfont","title":"Graphic.TextFont","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/left","title":"case left","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/right","title":"case right","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment","title":"Graphic.TextHorizontalAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/top","title":"case top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment","title":"Graphic.TextVerticalAlignment","type":"enum"},{"title":"Rectangle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(size:center:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(size: CGSize?, center: CGPoint?, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(frame:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(frame: CGRect, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(size:center:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(size: CGSize?, center: CGPoint?, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(frame:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(frame: CGRect, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Circle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/circle(radius:center:color:backgroundcolor:resolution:options:)","title":"static func circle(radius: CGFloat?, center: CGPoint?, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedcircle(radius:center:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedCircle(radius: CGFloat?, center: CGPoint?, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Polygon","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polygon(count:radius:center:rotation:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func polygon(count: Int, radius: CGFloat?, center: CGPoint?, rotation: Angle, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Arc","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arc(angle:length:radius:center:color:backgroundcolor:resolution:options:)","title":"static func arc(angle: Angle, length: Angle, radius: CGFloat?, center: CGPoint?, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedarc(angle:length:radius:center:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedArc(angle: Angle, length: Angle, radius: CGFloat?, center: CGPoint?, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Star","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/star(count:innerradius:outerradius:center:rotation:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func star(count: Int, innerRadius: CGFloat?, outerRadius: CGFloat?, center: CGPoint?, rotation: Angle, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Line","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/line(leadingpoint:trailingpoint:linewidth:cap:color:backgroundcolor:resolution:options:)","title":"static func line(leadingPoint: CGPoint, trailingPoint: CGPoint, lineWidth: CGFloat, cap: Graphic.LineCap, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/diamond","title":"case diamond","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/round","title":"case round","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/square","title":"case square","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/linecap","title":"Graphic.LineCap","type":"enum"},{"title":"Gradient","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradient(direction:stops:center:scale:offset:extend:gamma:resolution:options:)","title":"static func gradient(direction: Graphic.GradientDirection, stops: [Graphic.GradientStop], center: CGPoint?, scale: CGFloat, offset: CGFloat, extend: Graphic.GradientExtend, gamma: CGFloat, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/radial","title":"case radial","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection","title":"Graphic.GradientDirection","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/init(at:color:)","title":"init(at: CGFloat, color: PixelColor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/color","title":"var color: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/location","title":"var location: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop","title":"Graphic.GradientStop","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend","title":"Graphic.GradientExtend","type":"enum"},{"title":"Noise","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/noise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func noise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorednoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func coloredNoise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomnoise(seed:resolution:options:)","title":"static func randomNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomcolorednoise(seed:resolution:options:)","title":"static func randomColoredNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Particles","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticles(particlescale:particlecolor:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvParticles(particleScale: CGFloat, particleColor: PixelColor, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticles(with:particlescale:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvColorParticles(with: Graphic, particleScale: CGFloat, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVColorParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/four","title":"case four","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/one","title":"case one","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/two","title":"case two","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount","title":"Graphic.UVParticleSampleCount","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelalpha","title":"static let channelAlpha: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/clipchannelalpha","title":"static let clipChannelAlpha: Graphic.UVParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions","title":"Graphic.UVParticleOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVColorParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions","title":"Graphic.UVColorParticleOptions","type":"struct"},{"title":"Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blend(with:blendingmode:)","title":"static func blend(with: [Graphic], blendingMode: AGArrayBlendMode) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blend(with:blendingmode:placement:alignment:options:)","title":"func blend(with: Graphic, blendingMode: AGBlendMode, placement: Placement, alignment: Graphic.Alignment, options: Graphic.EffectOptions) async throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blended(with:blendingmode:placement:alignment:options:)","title":"func blended(with: Graphic, blendingMode: AGBlendMode, placement: Placement, alignment: Graphic.Alignment, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blended(blendingmode:placement:alignment:options:graphic:)","title":"func blended(blendingMode: AGBlendMode, placement: Placement, alignment: Graphic.Alignment, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(with:)","title":"static func add(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/average(with:)","title":"static func average(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mask(placement:options:foreground:background:mask:)","title":"static func mask(placement: Placement, options: Graphic.EffectOptions, foreground: () async throws -> Graphic, background: () async throws -> Graphic, mask: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mask(foreground:background:mask:placement:options:)","title":"static func mask(foreground: Graphic, background: Graphic, mask: Graphic, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/offset(_:options:)","title":"func offset(CGPoint, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/translated(_:options:)","title":"func translated(CGPoint, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/offset(x:y:options:)","title":"func offset(x: CGFloat, y: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/translated(x:y:options:)","title":"func translated(x: CGFloat, y: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotated(_:options:)","title":"func rotated(Angle, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/scaled(_:options:)","title":"func scaled(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(width:height:options:)","title":"func sized(width: CGFloat?, height: CGFloat?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(_:options:)","title":"func sized(CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformed(translation:rotation:scale:size:options:)","title":"func transformed(translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaoffset(with:translation:lumagamma:placement:options:)","title":"func lumaOffset(with: Graphic, translation: CGPoint, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaoffset(with:x:y:lumagamma:placement:options:)","title":"func lumaOffset(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaoffset(_:lumagamma:placement:options:graphic:)","title":"func lumaOffset(CGPoint, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatranslated(with:translation:lumagamma:placement:options:)","title":"func lumaTranslated(with: Graphic, translation: CGPoint, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatranslated(with:x:y:lumagamma:placement:options:)","title":"func lumaTranslated(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaoffset(x:y:lumagamma:placement:options:graphic:)","title":"func lumaOffset(x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarotated(with:rotation:lumagamma:placement:options:)","title":"func lumaRotated(with: Graphic, rotation: Angle, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarotated(rotation:lumagamma:placement:options:graphic:)","title":"func lumaRotated(rotation: Angle, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:scale:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, scale: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(scale:lumagamma:placement:options:graphic:)","title":"func lumaScaled(scale: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:x:y:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(x:y:lumagamma:placement:options:graphic:)","title":"func lumaScaled(x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"title":"Transform with Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformblended(with:blendingmode:placement:alignment:translation:rotation:scale:size:options:)","title":"func transformBlended(with: Graphic, blendingMode: AGBlendMode, placement: Placement, alignment: Graphic.Alignment, translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformblended(blendingmode:placement:alignment:translation:rotation:scale:size:options:graphic:)","title":"func transformBlended(blendingMode: AGBlendMode, placement: Placement, alignment: Graphic.Alignment, translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"title":"Mirror","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredhorizontally()","title":"func mirroredHorizontally() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredvertically()","title":"func mirroredVertically() async throws -> Graphic","type":"method"},{"title":"Rotate","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedleft()","title":"func rotatedLeft() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedright()","title":"func rotatedRight() async throws -> Graphic","type":"method"},{"title":"Stack","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstacked(with:alignment:spacing:)","title":"static func hStacked(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackedfixed(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func hStackedFixed(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func hStack(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstacked(with:alignment:spacing:)","title":"static func vStacked(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackedfixed(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func vStackedFixed(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func vStack(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstacked(with:alignment:)","title":"static func zStacked(with: [Graphic], alignment: Graphic.ZStackAlignment) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/zblendstacked(with:alignment:)","title":"static func zBlendStacked(with: [Graphic.BlendedGraphic], alignment: Graphic.ZStackAlignment) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/top","title":"case top","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment","title":"Graphic.HStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/trailing","title":"case trailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment","title":"Graphic.VStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/toptrailing","title":"case topTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/trailing","title":"case trailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment","title":"Graphic.ZStackAlignment","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendedgraphic\/init(graphic:blendmode:)","title":"init(graphic: Graphic, blendMode: AGBlendMode)","type":"init"}],"path":"\/documentation\/asyncgraphics\/graphic\/blendedgraphic","title":"Graphic.BlendedGraphic","type":"struct"},{"title":"Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/brightness(_:)","title":"func brightness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/darkness(_:)","title":"func darkness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contrast(_:)","title":"func contrast(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/gamma(_:)","title":"func gamma(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/inverted()","title":"func inverted() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/smoothed()","title":"func smoothed() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/opacity(_:)","title":"func opacity(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exposureoffset(_:)","title":"func exposureOffset(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(_:)","title":"func add(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/subtract(_:)","title":"func subtract(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiply(_:)","title":"func multiply(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/divide(_:)","title":"func divide(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/levels(brightness:darkness:contrast:gamma:invert:smooth:opacity:offset:)","title":"func levels(brightness: CGFloat, darkness: CGFloat, contrast: CGFloat, gamma: CGFloat, invert: Bool, smooth: Bool, opacity: CGFloat, offset: CGFloat) async throws -> Graphic","type":"method"},{"title":"Luma Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumabrightness(with:brightness:lumagamma:placement:)","title":"func lumaBrightness(with: Graphic, brightness: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumabrightness(brightness:lumagamma:placement:graphic:)","title":"func lumaBrightness(brightness: CGFloat, lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadarkness(with:darkness:lumagamma:placement:)","title":"func lumaDarkness(with: Graphic, darkness: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadarkness(darkness:lumagamma:placement:graphic:)","title":"func lumaDarkness(darkness: CGFloat, lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumacontrast(with:contrast:lumagamma:placement:)","title":"func lumaContrast(with: Graphic, contrast: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumacontrast(contrast:lumagamma:placement:graphic:)","title":"func lumaContrast(contrast: CGFloat, lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumagamma(with:gamma:lumagamma:placement:)","title":"func lumaGamma(with: Graphic, gamma: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumagamma(gamma:lumagamma:placement:graphic:)","title":"func lumaGamma(gamma: CGFloat, lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumainverted(with:lumagamma:placement:)","title":"func lumaInverted(with: Graphic, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumainverted(lumagamma:placement:graphic:)","title":"func lumaInverted(lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasmoothed(with:lumagamma:placement:)","title":"func lumaSmoothed(with: Graphic, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasmoothed(lumagamma:placement:graphic:)","title":"func lumaSmoothed(lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaopacity(with:opacity:lumagamma:placement:)","title":"func lumaOpacity(with: Graphic, opacity: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaopacity(opacity:lumagamma:placement:graphic:)","title":"func lumaOpacity(opacity: CGFloat, lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaexposureoffset(with:offset:lumagamma:placement:)","title":"func lumaExposureOffset(with: Graphic, offset: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaexposureoffset(offset:lumagamma:placement:graphic:)","title":"func lumaExposureOffset(offset: CGFloat, lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaadd(with:value:lumagamma:placement:)","title":"func lumaAdd(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaadd(value:lumagamma:placement:graphic:)","title":"func lumaAdd(value: CGFloat, lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasubtract(with:value:lumagamma:placement:)","title":"func lumaSubtract(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasubtract(value:lumagamma:placement:graphic:)","title":"func lumaSubtract(value: CGFloat, lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamultiply(with:value:lumagamma:placement:)","title":"func lumaMultiply(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamultiply(value:lumagamma:placement:graphic:)","title":"func lumaMultiply(value: CGFloat, lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadivide(with:value:lumagamma:placement:)","title":"func lumaDivide(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadivide(value:lumagamma:placement:graphic:)","title":"func lumaDivide(value: CGFloat, lumaGamma: CGFloat, placement: Placement, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"title":"Colors","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/monochrome()","title":"func monochrome() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/saturated(_:)","title":"func saturated(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/hue(_:)","title":"func hue(Angle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/tinted(_:)","title":"func tinted(PixelColor) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colormap(from:to:options:)","title":"func colorMap(from: PixelColor, to: PixelColor, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Colors","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamonochrome(with:lumagamma:)","title":"func lumaMonochrome(with: Graphic, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamonochrome(lumagamma:graphic:)","title":"func lumaMonochrome(lumaGamma: CGFloat, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasaturated(with:saturation:lumagamma:)","title":"func lumaSaturated(with: Graphic, saturation: CGFloat, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasaturated(saturation:lumagamma:graphic:)","title":"func lumaSaturated(saturation: CGFloat, lumaGamma: CGFloat, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumahue(with:hue:lumagamma:)","title":"func lumaHue(with: Graphic, hue: Angle, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumahue(hue:lumagamma:graphic:)","title":"func lumaHue(hue: Angle, lumaGamma: CGFloat, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatinted(with:color:lumagamma:)","title":"func lumaTinted(with: Graphic, color: PixelColor, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatinted(color:lumagamma:graphic:)","title":"func lumaTinted(color: PixelColor, lumaGamma: CGFloat, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"title":"Color Convert","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvert(_:channel:)","title":"func colorConvert(Graphic.ColorConversion, channel: Graphic.ColorConvertChannel) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hsvtorgb","title":"case hsvToRGB","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rgbtohsv","title":"case rgbToHSV","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion","title":"Graphic.ColorConversion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/all","title":"case all","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/first","title":"case first","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/second","title":"case second","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/third","title":"case third","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel","title":"Graphic.ColorConvertChannel","type":"enum"},{"title":"Threshold","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/threshold(_:options:)","title":"func threshold(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Quantize","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/quantize(_:options:)","title":"func quantize(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Lookup","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookup(with:axis:samplecoordinate:options:)","title":"func lookup(with: Graphic, axis: Graphic.LookupAxis, sampleCoordinate: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookup(axis:samplecoordinate:options:graphic:)","title":"func lookup(axis: Graphic.LookupAxis, sampleCoordinate: CGFloat, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis","title":"Graphic.LookupAxis","type":"enum"},{"title":"Channels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/channelmix(red:green:blue:alpha:)","title":"func channelMix(red: Graphic.ColorChannel, green: Graphic.ColorChannel, blue: Graphic.ColorChannel, alpha: Graphic.ColorChannel) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/alphatoluminance()","title":"func alphaToLuminance() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/alphatoluminancewithalpha()","title":"func alphaToLuminanceWithAlpha() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/luminancetoalpha()","title":"func luminanceToAlpha() async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/alpha","title":"case alpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/green","title":"case green","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/mono","title":"case mono","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/red","title":"case red","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/white","title":"case white","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/color","title":"var color: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel","title":"Graphic.ColorChannel","type":"enum"},{"title":"Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurred(radius:)","title":"func blurred(radius: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredbox(radius:samplecount:options:)","title":"func blurredBox(radius: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredcircle(radius:samplecount:brightnessrange:saturationrange:light:options:)","title":"func blurredCircle(radius: CGFloat, sampleCount: Int, brightnessRange: ClosedRange<CGFloat>, saturationRange: ClosedRange<CGFloat>, light: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredzoom(radius:center:samplecount:options:)","title":"func blurredZoom(radius: CGFloat, center: CGPoint?, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredangle(radius:angle:samplecount:options:)","title":"func blurredAngle(radius: CGFloat, angle: Angle, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredrandom(radius:options:)","title":"func blurredRandom(radius: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredbox(with:radius:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredBox(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredbox(radius:lumagamma:samplecount:placement:options:graphic:)","title":"func lumaBlurredBox(radius: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredzoom(with:radius:center:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredZoom(with: Graphic, radius: CGFloat, center: CGPoint?, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredzoom(radius:center:lumagamma:samplecount:placement:options:graphic:)","title":"func lumaBlurredZoom(radius: CGFloat, center: CGPoint?, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredangle(with:radius:angle:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredangle(radius:angle:lumagamma:samplecount:placement:options:graphic:)","title":"func lumaBlurredAngle(radius: CGFloat, angle: Angle, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredrandom(with:radius:lumagamma:placement:options:)","title":"func lumaBlurredRandom(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredrandom(radius:lumagamma:placement:options:graphic:)","title":"func lumaBlurredRandom(radius: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"title":"Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredcircle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredCircle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredangle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredAngle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredzoom(radius:center:light:samplecount:options:)","title":"func rainbowBlurredZoom(radius: CGFloat, center: CGPoint?, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredcircle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredCircle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredcircle(radius:angle:light:lumagamma:samplecount:placement:options:graphic:)","title":"func lumaRainbowBlurredCircle(radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredangle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredangle(radius:angle:light:lumagamma:samplecount:placement:options:graphic:)","title":"func lumaRainbowBlurredAngle(radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredzoom(with:radius:center:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredZoom(with: Graphic, radius: CGFloat, center: CGPoint?, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredzoom(radius:center:light:lumagamma:samplecount:placement:options:graphic:)","title":"func lumaRainbowBlurredZoom(radius: CGFloat, center: CGPoint?, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"title":"Pixelate","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelate(_:options:)","title":"func pixelate(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Displace","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/displaced(with:offset:origin:placement:options:)","title":"func displaced(with: Graphic, offset: CGFloat, origin: PixelColor, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/displaced(offset:origin:placement:options:graphic:)","title":"func displaced(offset: CGFloat, origin: PixelColor, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"title":"Slope","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/slope(amplitude:origin:options:)","title":"func slope(amplitude: CGFloat, origin: PixelColor, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Edge","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edge(amplitude:distance:istransparent:options:)","title":"func edge(amplitude: CGFloat, distance: CGFloat, isTransparent: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorededge(amplitude:distance:istransparent:options:)","title":"func coloredEdge(amplitude: CGFloat, distance: CGFloat, isTransparent: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Sharpen","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/sharpen(_:distance:options:)","title":"func sharpen(CGFloat, distance: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Kaleidoscope","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/kaleidoscope(count:mirror:center:rotation:scale:options:)","title":"func kaleidoscope(count: Int, mirror: Bool, center: CGPoint?, rotation: Angle, scale: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Clamp","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamp(_:low:high:includealpha:options:)","title":"func clamp(Graphic.ClampType, low: CGFloat, high: CGFloat, includeAlpha: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/relative","title":"case relative","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype","title":"Graphic.ClampType","type":"enum"},{"title":"Cross","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cross(with:fraction:placement:options:)","title":"func cross(with: Graphic, fraction: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/cross(fraction:placement:options:graphic:)","title":"func cross(fraction: CGFloat, placement: Placement, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"title":"Crop","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/crop(to:options:)","title":"func crop(to: CGRect, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/column(_:options:)","title":"func column(Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/column(u:options:)","title":"func column(u: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/row(_:options:)","title":"func row(Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/row(v:options:)","title":"func row(v: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Padding","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/padding(on:_:options:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/all","title":"static let all: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/bottom","title":"static let bottom: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/horizontal","title":"static let horizontal: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/leading","title":"static let leading: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/top","title":"static let top: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/trailing","title":"static let trailing: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/vertical","title":"static let vertical: Graphic.EdgeInsets","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets","title":"Graphic.EdgeInsets","type":"struct"},{"title":"Corner Pin","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cornerpinned(topleft:topright:bottomleft:bottomright:perspective:subdivisions:backgroundcolor:)","title":"func cornerPinned(topLeft: CGPoint?, topRight: CGPoint?, bottomLeft: CGPoint?, bottomRight: CGPoint?, perspective: Bool, subdivisions: Int, backgroundColor: PixelColor) async throws -> Graphic","type":"method"},{"title":"Chroma Key","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakey(color:parameters:options:)","title":"func chromaKey(color: PixelColor, parameters: Graphic.ChromaKeyParameters, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/alphacrop","title":"var alphaCrop: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/edgedesaturation","title":"var edgeDesaturation: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/range","title":"var range: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/softness","title":"var softness: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters","title":"Graphic.ChromaKeyParameters","type":"struct"},{"title":"Person Segmentation","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/personsegmentation()","title":"func personSegmentation() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/personsegmentationmask()","title":"func personSegmentationMask() async throws -> Graphic","type":"method"},{"title":"Remap","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/remap(with:options:)","title":"func remap(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/remap(options:graphic:)","title":"func remap(options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"title":"Polar","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polar(radius:width:leadingangle:trailingangle:resolution:options:)","title":"func polar(radius: CGFloat?, width: CGFloat?, leadingAngle: Angle, trailingAngle: Angle, resolution: CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Morph","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedminimum(size:)","title":"func morphedMinimum(size: CGSize) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedmaximum(size:)","title":"func morphedMaximum(size: CGSize) async throws -> Graphic","type":"method"},{"title":"Metal","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:resolution:options:)","title":"static func metal(code: String, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:options:)","title":"func metal(code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:options:graphic:)","title":"func metal(code: String, options: Graphic.EffectOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.method","title":"func metal(with: Graphic, code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.type.method","title":"static func metal(with: [Graphic], code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror","title":"Graphic.SolidMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror","title":"Graphic.DirectMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror","title":"Graphic.DualMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror","title":"Graphic.ArrayMetalError","type":"enum"},{"title":"UV","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uv(resolution:options:)","title":"static func uv(resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Reduce","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduce(by:)","title":"func reduce(by: Graphic.ReduceMethod) async throws -> PixelColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduce(by:axis:)","title":"func reduce(by: Graphic.ReduceMethod, axis: Graphic.ReduceAxis) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/average","title":"case average","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/maximum","title":"case maximum","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/minimum","title":"case minimum","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/sum","title":"case sum","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod","title":"Graphic.ReduceMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/vertical","title":"case vertical","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis","title":"Graphic.ReduceAxis","type":"enum"},{"title":"LUTs","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(url:layout:)","title":"static func readLUT(url: URL, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(data:format:layout:)","title":"static func readLUT(data: Data, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(named:format:layout:)","title":"static func readLUT(named: String, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(named:in:format:layout:)","title":"static func readLUT(named: String, in: Bundle, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/writelut(layout:)","title":"func writeLUT(layout: Graphic.LUTLayout) async throws -> Data","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(with:layout:)","title":"func applyLUT(with: Graphic, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(url:)","title":"func applyLUT(url: URL) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(named:format:)","title":"func applyLUT(named: String, format: Graphic.LUTFormat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(named:in:format:)","title":"func applyLUT(named: String, in: Bundle, format: Graphic.LUTFormat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut()","title":"func sizeOfLUT() throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(url:)","title":"static func sizeOfLUT(url: URL) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(data:format:)","title":"static func sizeOfLUT(data: Data, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(named:format:)","title":"static func sizeOfLUT(named: String, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(named:in:format:)","title":"static func sizeOfLUT(named: String, in: Bundle, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/layoutoflut()","title":"func layoutOfLUT() throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(size:)","title":"static func idealLayoutOfLUT(size: Int) -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(url:)","title":"static func idealLayoutOfLUT(url: URL) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(data:format:)","title":"static func idealLayoutOfLUT(data: Data, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(named:format:)","title":"static func idealLayoutOfLUT(named: String, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(named:in:format:)","title":"static func idealLayoutOfLUT(named: String, in: Bundle, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sampleoflut(at:layout:)","title":"func sampleOfLUT(at: Int, layout: Graphic.LUTLayout) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/identitylut(size:layout:options:)","title":"static func identityLUT(size: Int, layout: Graphic.LUTLayout, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/linear","title":"case linear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/square","title":"case square","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout","title":"Graphic.LUTLayout","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/cube","title":"case cube","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat","title":"Graphic.LUTFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/badcolorcount","title":"case badColorCount","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/corruptformat","title":"case corruptFormat","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/datatostringfailed","title":"case dataToStringFailed","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/filenotfound","title":"case fileNotFound","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/indexoutofbounds","title":"case indexOutOfBounds","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnonsquareaspectratio","title":"case resolutionIsNonSquareAspectRatio","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnotlinear","title":"case resolutionIsNotLinear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnotpoweroftwo","title":"case resolutionIsNotPowerOfTwo","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionunknown","title":"case resolutionUnknown","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizecorrupt","title":"case sizeCorrupt","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizenotapoweroftwo","title":"case sizeNotAPowerOfTwo","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizenotfound","title":"case sizeNotFound","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/toolargesize","title":"case tooLargeSize","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/toosmallsize","title":"case tooSmallSize","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/unknownformat","title":"case unknownFormat","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror","title":"Graphic.LUTError","type":"enum"},{"title":"Bits","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/bits(_:)","title":"func bits(TMBits) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/standardbit()","title":"func standardBit() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/highbit()","title":"func highBit() async throws -> Graphic","type":"method"},{"title":"Color Space","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/applycolorspace(_:)","title":"func applyColorSpace(TMColorSpace) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/assigncolorspace(_:)","title":"func assignColorSpace(TMColorSpace) -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/convertcolorspace(from:to:)","title":"func convertColorSpace(from: TMColorSpace, to: TMColorSpace) async throws -> Graphic","type":"method"},{"title":"Coordinate Space","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespace(_:rotation:fraction:options:)","title":"func coordinateSpace(Graphic.CoordinateSpaceConversion, rotation: CGVector, fraction: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/circletosquare","title":"case circleToSquare","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/cubetoequi","title":"case cubeToEqui","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/dometoequi","title":"case domeToEqui","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/equitodome","title":"case equiToDome","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/squaretocircle","title":"case squareToCircle","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion","title":"Graphic.CoordinateSpaceConversion","type":"enum"},{"title":"Inspect","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/inspect(with:scale:offset:borderwidth:borderopacity:borderfaderange:placement:containerresolution:contentresolution:checkertransparency:checkersize:checkeropacity:options:)","title":"static func inspect(with: Graphic, scale: CGFloat, offset: CGPoint, borderWidth: CGFloat, borderOpacity: CGFloat, borderFadeRange: ClosedRange<CGFloat>, placement: Placement, containerResolution: CGSize, contentResolution: CGSize, checkerTransparency: Bool, checkerSize: CGFloat, checkerOpacity: CGFloat, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/inspect(scale:offset:borderwidth:borderopacity:borderfaderange:placement:containerresolution:contentresolution:checkertransparency:checkersize:checkeropacity:options:graphic:)","title":"static func inspect(scale: CGFloat, offset: CGPoint, borderWidth: CGFloat, borderOpacity: CGFloat, borderFadeRange: ClosedRange<CGFloat>, placement: Placement, containerResolution: CGSize, contentResolution: CGSize, checkerTransparency: Bool, checkerSize: CGFloat, checkerOpacity: CGFloat, options: Graphic.ContentOptions, graphic: () async throws -> Graphic) async throws -> Graphic","type":"method"},{"title":"Options","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/bit16","title":"static let bit16: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/bit32","title":"static let bit32: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/displayp3","title":"static let displayP3: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/highbit","title":"static let highBit: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/interpolatenearest","title":"static let interpolateNearest: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/purealpha","title":"static let pureAlpha: Graphic.ContentOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions","title":"Graphic.ContentOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/edgeloop","title":"static let edgeLoop: Graphic.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/edgemirror","title":"static let edgeMirror: Graphic.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/edgestretch","title":"static let edgeStretch: Graphic.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/interpolatenearest","title":"static let interpolateNearest: Graphic.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/purealpha","title":"static let pureAlpha: Graphic.EffectOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions","title":"Graphic.EffectOptions","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/*(_:_:)","title":"static func * (Graphic, Graphic) async throws -> Graphic","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic\/+(_:_:)","title":"static func + (Graphic, Graphic) async throws -> Graphic","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic\/-(_:_:)","title":"static func - (Graphic, Graphic) async throws -> Graphic","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic\/\/(_:_:)","title":"static func \/ (Graphic, Graphic) async throws -> Graphic","type":"op"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/toptrailing","title":"case topTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/trailing","title":"case trailing","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/alignment","title":"Graphic.Alignment","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic\/==(_:_:)","title":"static func == (Graphic, Graphic) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic","title":"Graphic","type":"struct"},{"children":[{"title":"Data","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture","title":"let texture: MTLTexture","type":"property"},{"title":"Metadata","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/bits","title":"let bits: TMBits","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/colorspace","title":"let colorSpace: TMColorSpace","type":"property"},{"title":"Resolution","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/width","title":"var width: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/depth","title":"var depth: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/resolution","title":"var resolution: SIMD3<Int>","type":"property"},{"title":"Options","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/bit16","title":"static let bit16: Graphic3D.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/bit32","title":"static let bit32: Graphic3D.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/highbit","title":"static let highBit: Graphic3D.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/purealpha","title":"static let pureAlpha: Graphic3D.ContentOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions","title":"Graphic3D.ContentOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/edgemirror","title":"static let edgeMirror: Graphic3D.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/edgestretch","title":"static let edgeStretch: Graphic3D.EffectOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions","title":"Graphic3D.EffectOptions","type":"struct"},{"title":"Voxels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/firstvoxelcolor","title":"var firstVoxelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/averagevoxelcolor","title":"var averageVoxelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/voxelcolors","title":"var voxelColors: [[[PixelColor]]]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/channels","title":"var channels: [CGFloat]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/isvoxelsequal(to:)","title":"func isVoxelsEqual(to: Graphic3D) async throws -> Bool","type":"method"},{"title":"Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture(_:)","title":"static func texture(MTLTexture) throws -> Graphic3D","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/unsupportedtype","title":"case unsupportedType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror","title":"Graphic3D.Texture3DError","type":"enum"},{"title":"Color","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/color(_:resolution:options:)","title":"static func color(PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Box","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/box(size:origin:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func box(size: SIMD3<Double>, origin: SIMD3<Double>, cornerRadius: Double, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/box(size:center:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func box(size: SIMD3<Double>, center: SIMD3<Double>?, cornerRadius: Double, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacebox(size:origin:cornerradius:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceBox(size: SIMD3<Double>, origin: SIMD3<Double>, cornerRadius: Double, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacebox(size:center:cornerradius:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceBox(size: SIMD3<Double>, center: SIMD3<Double>?, cornerRadius: Double, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Sphere","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sphere(radius:center:color:backgroundcolor:resolution:options:)","title":"static func sphere(radius: Double?, center: SIMD3<Double>?, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacesphere(radius:center:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceSphere(radius: Double, center: SIMD3<Double>?, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Noise","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/noise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func noise(offset: SIMD3<Double>, depth: Double, scale: Double, octaves: Int, seed: Int, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/colorednoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func coloredNoise(offset: SIMD3<Double>, depth: Double, scale: Double, octaves: Int, seed: Int, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/randomnoise(seed:resolution:options:)","title":"static func randomNoise(seed: Int, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/randomcolorednoise(seed:resolution:options:)","title":"static func randomColoredNoise(seed: Int, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blended(with:blendingmode:placement:)","title":"func blended(with: Graphic3D, blendingMode: AGBlendMode, placement: Placement) async throws -> Graphic3D","type":"method"},{"title":"Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/translated(_:options:)","title":"func translated(SIMD3<Double>, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/translated(x:y:z:options:)","title":"func translated(x: Double, y: Double, z: Double, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/rotated(_:options:)","title":"func rotated(SIMD3<Double>, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/rotated(x:y:z:options:)","title":"func rotated(x: Angle, y: Angle, z: Angle, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/scaled(_:options:)-87l2t","title":"func scaled(SIMD3<Double>, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/scaled(_:options:)-7kcho","title":"func scaled(Double, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/scaled(x:y:z:options:)","title":"func scaled(x: Double, y: Double, z: Double, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Stack","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"func hStack(with: Graphic3D, alignment: Graphic3D.HStackAlignment, spacing: Double, padding: Double, backgroundColor: PixelColor, resolution: SIMD3<Int>?) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"func vStack(with: Graphic3D, alignment: Graphic3D.VStackAlignment, spacing: Double, padding: Double, backgroundColor: PixelColor, resolution: SIMD3<Int>?) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"func dStack(with: Graphic3D, alignment: Graphic3D.DStackAlignment, spacing: Double, padding: Double, backgroundColor: PixelColor, resolution: SIMD3<Int>?) async throws -> Graphic3D","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/bottomfar","title":"case bottomFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/bottomnear","title":"case bottomNear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/topfar","title":"case topFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/topnear","title":"case topNear","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment","title":"Graphic3D.HStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/leadingfar","title":"case leadingFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/leadingnear","title":"case leadingNear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/trailing","title":"case trailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/trailingfar","title":"case trailingFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/trailingnear","title":"case trailingNear","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment","title":"Graphic3D.VStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/toptrailing","title":"case topTrailing","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment","title":"Graphic3D.DStackAlignment","type":"enum"},{"title":"Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/brightness(_:)","title":"func brightness(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/darkness(_:)","title":"func darkness(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contrast(_:)","title":"func contrast(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gamma(_:)","title":"func gamma(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/inverted()","title":"func inverted() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/smoothed()","title":"func smoothed() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/opacity(_:)","title":"func opacity(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/exposureoffset(_:)","title":"func exposureOffset(CGFloat) async throws -> Graphic3D","type":"method"},{"title":"Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurredbox(radius:samplecount:options:)","title":"func blurredBox(radius: CGFloat, sampleCount: Int, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurredzoom(radius:center:samplecount:options:)","title":"func blurredZoom(radius: CGFloat, center: SIMD3<Double>?, sampleCount: Int, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurreddirection(radius:direction:samplecount:options:)","title":"func blurredDirection(radius: CGFloat, direction: SIMD3<Double>, sampleCount: Int, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurredrandom(radius:options:)","title":"func blurredRandom(radius: CGFloat, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Displace","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/displaced(with:offset:origin:placement:options:)","title":"func displaced(with: Graphic3D, offset: Double, origin: PixelColor, placement: Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Cross","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/cross(with:fraction:placement:)","title":"func cross(with: Graphic3D, fraction: CGFloat, placement: Placement) async throws -> Graphic3D","type":"method"},{"title":"Sample","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/add(axis:)","title":"func add(axis: Graphic3D.Axis) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/average(axis:)","title":"func average(axis: Graphic3D.Axis) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sample(fraction:)","title":"func sample(fraction: Double) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sample(index:)","title":"func sample(index: Int) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/samples()","title":"func samples() async throws -> [Graphic]","type":"method"},{"title":"Bits","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/bits(_:)","title":"func bits(TMBits) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/standardbit()","title":"func standardBit() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/highbit()","title":"func highBit() async throws -> Graphic3D","type":"method"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/*(_:_:)","title":"static func * (Graphic3D, Graphic3D) async throws -> Graphic3D","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/+(_:_:)","title":"static func + (Graphic3D, Graphic3D) async throws -> Graphic3D","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/-(_:_:)","title":"static func - (Graphic3D, Graphic3D) async throws -> Graphic3D","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/\/(_:_:)","title":"static func \/ (Graphic3D, Graphic3D) async throws -> Graphic3D","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/id","title":"let id: UUID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blended(blendingmode:placement:graphic:)","title":"func blended(blendingMode: AGBlendMode, placement: Placement, graphic: () async throws -> Graphic3D) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/colorededge(amplitude:distance:istransparent:options:)","title":"func coloredEdge(amplitude: Double, distance: Double, isTransparent: Bool, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/cross(fraction:placement:graphic:)","title":"func cross(fraction: CGFloat, placement: Placement, graphic: () async throws -> Graphic3D) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/displaced(offset:origin:placement:options:graphic:)","title":"func displaced(offset: Double, origin: PixelColor, placement: Placement, options: Graphic3D.EffectOptions, graphic: () async throws -> Graphic3D) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/edge(amplitude:distance:istransparent:options:)","title":"func edge(amplitude: Double, distance: Double, isTransparent: Bool, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/trace(axis:alphathreshold:)","title":"func trace(axis: Graphic3D.Axis, alphaThreshold: CGFloat) async throws -> Graphic","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/metal(code:resolution:options:)","title":"static func metal(code: String, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/transparantnoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func transparantNoise(offset: SIMD3<Double>, depth: Double, scale: Double, octaves: Int, seed: Int, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/uvw(resolution:options:)","title":"static func uvw(resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/x","title":"case x","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/y","title":"case y","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/z","title":"case z","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/axis","title":"Graphic3D.Axis","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror","title":"Graphic3D.SolidMetal3DError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/==(_:_:)","title":"static func == (Graphic3D, Graphic3D) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d","title":"Graphic3D","type":"struct"},{"title":"Articles","type":"groupMarker"},{"children":[{"title":"Blend Mode","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/add","title":"case add","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/addwithalpha","title":"case addWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/average","title":"case average","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/cosine","title":"case cosine","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/darken","title":"case darken","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/darkenwithoutalpha","title":"case darkenWithoutAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/difference","title":"case difference","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/divide","title":"case divide","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/exclusiveor","title":"case exclusiveOr","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/inside","title":"case inside","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/lighten","title":"case lighten","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/maximum","title":"case maximum","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/minimum","title":"case minimum","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/multiply","title":"case multiply","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/multiplywithoutalpha","title":"case multiplyWithoutAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/outside","title":"case outside","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/over","title":"case over","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/power","title":"case power","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/screen","title":"case screen","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/subtract","title":"case subtract","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/subtractwithalpha","title":"case subtractWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/under","title":"case under","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agblendmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agblendmode","title":"AGBlendMode","type":"enum"}],"path":"\/documentation\/asyncgraphics\/blending","title":"Blending","type":"symbol"},{"children":[{"title":"Stacks","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/init(alignment:with:)","title":"init(alignment: Graphic.ZStackAlignment, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-3fl80","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-7mj2r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-2bc10","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-8o6af","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agzstack\/==(_:_:)","title":"static func == (AGZStack, AGZStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agzstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agzstack","title":"AGZStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.VStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-1nji8","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-n0ph","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-3y07o","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-45lbw","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agvstack\/==(_:_:)","title":"static func == (AGVStack, AGVStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvstack","title":"AGVStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.HStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-4k5r9","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-6q9un","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-1wnkx","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-9do05","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/aghstack\/==(_:_:)","title":"static func == (AGHStack, AGHStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/aghstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aghstack","title":"AGHStack","type":"struct"}],"path":"\/documentation\/asyncgraphics\/layout","title":"Layout","type":"symbol"},{"children":[{"title":"Camera","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(_:device:preset:)","title":"static func camera(Graphic.CameraPosition, device: AVCaptureDevice.DeviceType, preset: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"}],"path":"\/documentation\/asyncgraphics\/camera","title":"Camera","type":"symbol"},{"children":[{"title":"Video","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframe(at:url:info:)","title":"static func importVideoFrame(at: Int, url: URL, info: VideoInfo?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideo(url:progress:)","title":"static func importVideo(url: URL, progress: ((Graphic.ImportVideoFrameProgress) -> ())?) async throws -> [Graphic]","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideostream(url:)","title":"static func importVideoStream(url: URL) -> AsyncThrowingStream<Graphic, Error>","type":"method"}],"path":"\/documentation\/asyncgraphics\/videoediting","title":"Video Editing","type":"symbol"},{"children":[{"title":"Video","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/init(with:)","title":"init(with: GraphicVideoPlayer)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resizable()","title":"func resizable() -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8hcdj","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8xa34","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-5k5vi","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-9u74n","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvideo\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvideo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvideo","title":"AGVideo","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framecount","title":"var frameCount: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framerate","title":"let frameRate: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/resolution","title":"let resolution: CGSize","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct","title":"GraphicVideoPlayer.Info","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/loop","title":"var loop: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/volume","title":"var volume: Double","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct","title":"GraphicVideoPlayer.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(named:fileextension:in:options:)","title":"convenience init(named: String, fileExtension: String, in: Bundle, options: GraphicVideoPlayer.Options) async throws","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(url:options:)","title":"init(url: URL, options: GraphicVideoPlayer.Options) async throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/frameindex","title":"var frameIndex: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.property","title":"var info: GraphicVideoPlayer.Info","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.property","title":"var options: GraphicVideoPlayer.Options","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/playing","title":"var playing: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seconds","title":"var seconds: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/time","title":"var time: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/play()","title":"func play()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-5hpoo","title":"func seek(to: Double)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-86zyw","title":"func seek(to: Int)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-8d3sm","title":"func seek(to: CMTime)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/startseek()","title":"func startSeek()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stop()","title":"func stop()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stopseek()","title":"func stopSeek()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/==(_:_:)","title":"static func == (GraphicVideoPlayer, GraphicVideoPlayer) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer","title":"GraphicVideoPlayer","type":"class"},{"path":"\/documentation\/asyncgraphics\/graphic\/playvideo(with:)","title":"static func playVideo(with: GraphicVideoPlayer) -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/playvideo(url:loop:volume:)","title":"static func playVideo(url: URL, loop: Bool, volume: Double) async throws -> AsyncStream<Graphic>","type":"method"}],"path":"\/documentation\/asyncgraphics\/videoplayback","title":"Video Playback","type":"symbol"},{"title":"References","type":"groupMarker"},{"children":[{"title":"Live Camera Feed","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(_:device:preset:)","title":"static func camera(Graphic.CameraPosition, device: AVCaptureDevice.DeviceType, preset: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"},{"title":"Live Screen Feed","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/screen(at:)","title":"static func screen(at: Int) throws -> AsyncStream<Graphic>","type":"method"},{"title":"Import an Image","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(named:in:)","title":"static func image(named: String, in: Bundle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(url:)","title":"static func image(url: URL) async throws -> Graphic","type":"method"},{"title":"Import a Video","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframe(at:url:info:)","title":"static func importVideoFrame(at: Int, url: URL, info: VideoInfo?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideo(url:progress:)","title":"static func importVideo(url: URL, progress: ((Graphic.ImportVideoFrameProgress) -> ())?) async throws -> [Graphic]","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideostream(url:)","title":"static func importVideoStream(url: URL) -> AsyncThrowingStream<Graphic, Error>","type":"method"},{"title":"Import a Buffer","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelbuffer(_:)","title":"static func pixelBuffer(CVPixelBuffer) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/samplebuffer(_:)","title":"static func sampleBuffer(CMSampleBuffer) throws -> Graphic","type":"method"},{"title":"Import a Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texture(_:)","title":"static func texture(MTLTexture) throws -> Graphic","type":"method"},{"title":"Export an Image","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/image","title":"var image: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/imagewithtransparency","title":"var imageWithTransparency: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/pngdata","title":"var pngData: Data","type":"property"},{"title":"Apple Maps","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maps(type:latitude:longitude:span:resolution:mapoptions:options:)","title":"static func maps(type: Graphic.MapType, latitude: Angle, longitude: Angle, span: Angle, resolution: CGSize, mapOptions: Graphic.MapOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybrid","title":"case hybrid","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybridflyover","title":"case hybridFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/mutedstandard","title":"case mutedStandard","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satellite","title":"case satellite","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satelliteflyover","title":"case satelliteFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/standard","title":"case standard","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype","title":"Graphic.MapType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/darkmode","title":"static let darkMode: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showbuildings","title":"static let showBuildings: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showpointsofinterest","title":"static let showPointsOfInterest: Graphic.MapOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions","title":"Graphic.MapOptions","type":"struct"}],"path":"\/documentation\/asyncgraphics\/resources","title":"Resources","type":"symbol"},{"children":[{"title":"Color","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/color(_:resolution:options:)","title":"static func color(PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Text","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/text(_:font:center:horizontalalignment:verticalalignment:color:backgroundcolor:resolution:options:)","title":"static func text(String, font: Graphic.TextFont, center: CGPoint?, horizontalAlignment: Graphic.TextHorizontalAlignment, verticalAlignment: Graphic.TextVerticalAlignment, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/textfont","title":"Graphic.TextFont","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/left","title":"case left","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/right","title":"case right","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment","title":"Graphic.TextHorizontalAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/top","title":"case top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment","title":"Graphic.TextVerticalAlignment","type":"enum"},{"title":"Rectangle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(size:center:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(size: CGSize?, center: CGPoint?, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(frame:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(frame: CGRect, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(size:center:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(size: CGSize?, center: CGPoint?, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(frame:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(frame: CGRect, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Circle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/circle(radius:center:color:backgroundcolor:resolution:options:)","title":"static func circle(radius: CGFloat?, center: CGPoint?, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedcircle(radius:center:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedCircle(radius: CGFloat?, center: CGPoint?, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Polygon","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polygon(count:radius:center:rotation:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func polygon(count: Int, radius: CGFloat?, center: CGPoint?, rotation: Angle, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Gradient","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradient(direction:stops:center:scale:offset:extend:gamma:resolution:options:)","title":"static func gradient(direction: Graphic.GradientDirection, stops: [Graphic.GradientStop], center: CGPoint?, scale: CGFloat, offset: CGFloat, extend: Graphic.GradientExtend, gamma: CGFloat, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/radial","title":"case radial","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection","title":"Graphic.GradientDirection","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/init(at:color:)","title":"init(at: CGFloat, color: PixelColor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/color","title":"var color: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/location","title":"var location: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop","title":"Graphic.GradientStop","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend","title":"Graphic.GradientExtend","type":"enum"},{"title":"Noise","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/noise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func noise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorednoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func coloredNoise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomnoise(seed:resolution:options:)","title":"static func randomNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomcolorednoise(seed:resolution:options:)","title":"static func randomColoredNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Particles","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticles(particlescale:particlecolor:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvParticles(particleScale: CGFloat, particleColor: PixelColor, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticles(with:particlescale:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvColorParticles(with: Graphic, particleScale: CGFloat, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVColorParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/four","title":"case four","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/one","title":"case one","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/two","title":"case two","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount","title":"Graphic.UVParticleSampleCount","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelalpha","title":"static let channelAlpha: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/clipchannelalpha","title":"static let clipChannelAlpha: Graphic.UVParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions","title":"Graphic.UVParticleOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVColorParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions","title":"Graphic.UVColorParticleOptions","type":"struct"}],"path":"\/documentation\/asyncgraphics\/visuals","title":"Visuals","type":"symbol"},{"children":[{"title":"Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blend(with:blendingmode:)","title":"static func blend(with: [Graphic], blendingMode: AGArrayBlendMode) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(with:)","title":"static func add(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/average(with:)","title":"static func average(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mask(foreground:background:mask:placement:options:)","title":"static func mask(foreground: Graphic, background: Graphic, mask: Graphic, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/translated(_:options:)","title":"func translated(CGPoint, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/translated(x:y:options:)","title":"func translated(x: CGFloat, y: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotated(_:options:)","title":"func rotated(Angle, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/scaled(_:options:)","title":"func scaled(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(width:height:options:)","title":"func sized(width: CGFloat?, height: CGFloat?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(_:options:)","title":"func sized(CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformed(translation:rotation:scale:size:options:)","title":"func transformed(translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatranslated(with:translation:lumagamma:placement:options:)","title":"func lumaTranslated(with: Graphic, translation: CGPoint, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatranslated(with:x:y:lumagamma:placement:options:)","title":"func lumaTranslated(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarotated(with:rotation:lumagamma:placement:options:)","title":"func lumaRotated(with: Graphic, rotation: Angle, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:scale:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, scale: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:x:y:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Mirror","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredhorizontally()","title":"func mirroredHorizontally() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredvertically()","title":"func mirroredVertically() async throws -> Graphic","type":"method"},{"title":"Rotate","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedleft()","title":"func rotatedLeft() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedright()","title":"func rotatedRight() async throws -> Graphic","type":"method"},{"title":"Stack","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func hStack(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func vStack(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/top","title":"case top","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment","title":"Graphic.HStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/trailing","title":"case trailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment","title":"Graphic.VStackAlignment","type":"enum"},{"title":"Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/brightness(_:)","title":"func brightness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/darkness(_:)","title":"func darkness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contrast(_:)","title":"func contrast(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/gamma(_:)","title":"func gamma(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/inverted()","title":"func inverted() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/smoothed()","title":"func smoothed() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/opacity(_:)","title":"func opacity(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exposureoffset(_:)","title":"func exposureOffset(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(_:)","title":"func add(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/subtract(_:)","title":"func subtract(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiply(_:)","title":"func multiply(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/divide(_:)","title":"func divide(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/levels(brightness:darkness:contrast:gamma:invert:smooth:opacity:offset:)","title":"func levels(brightness: CGFloat, darkness: CGFloat, contrast: CGFloat, gamma: CGFloat, invert: Bool, smooth: Bool, opacity: CGFloat, offset: CGFloat) async throws -> Graphic","type":"method"},{"title":"Luma Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumabrightness(with:brightness:lumagamma:placement:)","title":"func lumaBrightness(with: Graphic, brightness: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadarkness(with:darkness:lumagamma:placement:)","title":"func lumaDarkness(with: Graphic, darkness: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumacontrast(with:contrast:lumagamma:placement:)","title":"func lumaContrast(with: Graphic, contrast: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumagamma(with:gamma:lumagamma:placement:)","title":"func lumaGamma(with: Graphic, gamma: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumainverted(with:lumagamma:placement:)","title":"func lumaInverted(with: Graphic, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasmoothed(with:lumagamma:placement:)","title":"func lumaSmoothed(with: Graphic, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaopacity(with:opacity:lumagamma:placement:)","title":"func lumaOpacity(with: Graphic, opacity: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaexposureoffset(with:offset:lumagamma:placement:)","title":"func lumaExposureOffset(with: Graphic, offset: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaadd(with:value:lumagamma:placement:)","title":"func lumaAdd(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasubtract(with:value:lumagamma:placement:)","title":"func lumaSubtract(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamultiply(with:value:lumagamma:placement:)","title":"func lumaMultiply(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadivide(with:value:lumagamma:placement:)","title":"func lumaDivide(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"title":"Colors","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/monochrome()","title":"func monochrome() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/saturated(_:)","title":"func saturated(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/hue(_:)","title":"func hue(Angle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/tinted(_:)","title":"func tinted(PixelColor) async throws -> Graphic","type":"method"},{"title":"Luma Colors","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamonochrome(with:lumagamma:)","title":"func lumaMonochrome(with: Graphic, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamonochrome(with:lumagamma:)","title":"func lumaMonochrome(with: Graphic, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasaturated(with:saturation:lumagamma:)","title":"func lumaSaturated(with: Graphic, saturation: CGFloat, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumahue(with:hue:lumagamma:)","title":"func lumaHue(with: Graphic, hue: Angle, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatinted(with:color:lumagamma:)","title":"func lumaTinted(with: Graphic, color: PixelColor, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"title":"Color Convert","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvert(_:channel:)","title":"func colorConvert(Graphic.ColorConversion, channel: Graphic.ColorConvertChannel) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hsvtorgb","title":"case hsvToRGB","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rgbtohsv","title":"case rgbToHSV","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion","title":"Graphic.ColorConversion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/all","title":"case all","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/first","title":"case first","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/second","title":"case second","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/third","title":"case third","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel","title":"Graphic.ColorConvertChannel","type":"enum"},{"title":"Threshold","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/threshold(_:options:)","title":"func threshold(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Quantize","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/quantize(_:options:)","title":"func quantize(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Channels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/channelmix(red:green:blue:alpha:)","title":"func channelMix(red: Graphic.ColorChannel, green: Graphic.ColorChannel, blue: Graphic.ColorChannel, alpha: Graphic.ColorChannel) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/alphatoluminance()","title":"func alphaToLuminance() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/luminancetoalpha()","title":"func luminanceToAlpha() async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/alpha","title":"case alpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/green","title":"case green","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/mono","title":"case mono","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/red","title":"case red","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/white","title":"case white","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/color","title":"var color: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel","title":"Graphic.ColorChannel","type":"enum"},{"title":"Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurred(radius:)","title":"func blurred(radius: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredbox(radius:samplecount:options:)","title":"func blurredBox(radius: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredzoom(radius:center:samplecount:options:)","title":"func blurredZoom(radius: CGFloat, center: CGPoint?, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredangle(radius:angle:samplecount:options:)","title":"func blurredAngle(radius: CGFloat, angle: Angle, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredrandom(radius:options:)","title":"func blurredRandom(radius: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredbox(with:radius:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredBox(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredzoom(with:radius:center:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredZoom(with: Graphic, radius: CGFloat, center: CGPoint?, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredangle(with:radius:angle:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredrandom(with:radius:lumagamma:placement:options:)","title":"func lumaBlurredRandom(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredcircle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredCircle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredangle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredAngle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredzoom(radius:center:light:samplecount:options:)","title":"func rainbowBlurredZoom(radius: CGFloat, center: CGPoint?, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredcircle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredCircle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredangle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredzoom(with:radius:center:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredZoom(with: Graphic, radius: CGFloat, center: CGPoint?, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Displace","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/displaced(with:offset:origin:placement:options:)","title":"func displaced(with: Graphic, offset: CGFloat, origin: PixelColor, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Slope","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/slope(amplitude:origin:options:)","title":"func slope(amplitude: CGFloat, origin: PixelColor, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Clamp","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamp(_:low:high:includealpha:options:)","title":"func clamp(Graphic.ClampType, low: CGFloat, high: CGFloat, includeAlpha: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/relative","title":"case relative","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype","title":"Graphic.ClampType","type":"enum"},{"title":"Cross","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cross(with:fraction:placement:options:)","title":"func cross(with: Graphic, fraction: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Corner Pin","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cornerpinned(topleft:topright:bottomleft:bottomright:perspective:subdivisions:backgroundcolor:)","title":"func cornerPinned(topLeft: CGPoint?, topRight: CGPoint?, bottomLeft: CGPoint?, bottomRight: CGPoint?, perspective: Bool, subdivisions: Int, backgroundColor: PixelColor) async throws -> Graphic","type":"method"},{"title":"Chroma Key","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakey(color:parameters:options:)","title":"func chromaKey(color: PixelColor, parameters: Graphic.ChromaKeyParameters, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/alphacrop","title":"var alphaCrop: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/edgedesaturation","title":"var edgeDesaturation: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/range","title":"var range: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/softness","title":"var softness: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters","title":"Graphic.ChromaKeyParameters","type":"struct"},{"title":"Polar","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polar(radius:width:leadingangle:trailingangle:resolution:options:)","title":"func polar(radius: CGFloat?, width: CGFloat?, leadingAngle: Angle, trailingAngle: Angle, resolution: CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Morph","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedminimum(size:)","title":"func morphedMinimum(size: CGSize) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedmaximum(size:)","title":"func morphedMaximum(size: CGSize) async throws -> Graphic","type":"method"}],"path":"\/documentation\/asyncgraphics\/effects","title":"Effects","type":"symbol"},{"children":[{"title":"Solid (0 Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:resolution:options:)","title":"static func metal(code: String, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Direct (1 Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:options:)","title":"func metal(code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Dual (2 Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.method","title":"func metal(with: Graphic, code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Array (N Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.type.method","title":"static func metal(with: [Graphic], code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror","title":"Graphic.SolidMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror","title":"Graphic.DirectMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror","title":"Graphic.DualMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror","title":"Graphic.ArrayMetalError","type":"enum"}],"path":"\/documentation\/asyncgraphics\/metal","title":"Metal","type":"symbol"},{"children":[{"title":"Import","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(url:layout:)","title":"static func readLUT(url: URL, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(data:format:layout:)","title":"static func readLUT(data: Data, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(named:format:layout:)","title":"static func readLUT(named: String, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(named:in:format:layout:)","title":"static func readLUT(named: String, in: Bundle, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"title":"Export","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/writelut(layout:)","title":"func writeLUT(layout: Graphic.LUTLayout) async throws -> Data","type":"method"},{"title":"Apply","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(with:layout:)","title":"func applyLUT(with: Graphic, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(url:)","title":"func applyLUT(url: URL) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(named:format:)","title":"func applyLUT(named: String, format: Graphic.LUTFormat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(named:in:format:)","title":"func applyLUT(named: String, in: Bundle, format: Graphic.LUTFormat) async throws -> Graphic","type":"method"},{"title":"Identity","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/identitylut(size:layout:options:)","title":"static func identityLUT(size: Int, layout: Graphic.LUTLayout, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Size","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut()","title":"func sizeOfLUT() throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(url:)","title":"static func sizeOfLUT(url: URL) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(data:format:)","title":"static func sizeOfLUT(data: Data, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(named:format:)","title":"static func sizeOfLUT(named: String, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(named:in:format:)","title":"static func sizeOfLUT(named: String, in: Bundle, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"title":"Layout","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/layoutoflut()","title":"func layoutOfLUT() throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(size:)","title":"static func idealLayoutOfLUT(size: Int) -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(url:)","title":"static func idealLayoutOfLUT(url: URL) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(data:format:)","title":"static func idealLayoutOfLUT(data: Data, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(named:format:)","title":"static func idealLayoutOfLUT(named: String, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(named:in:format:)","title":"static func idealLayoutOfLUT(named: String, in: Bundle, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"title":"Sample","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/sampleoflut(at:layout:)","title":"func sampleOfLUT(at: Int, layout: Graphic.LUTLayout) async throws -> Graphic","type":"method"},{"title":"Structs","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/linear","title":"case linear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/square","title":"case square","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout","title":"Graphic.LUTLayout","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/cube","title":"case cube","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat","title":"Graphic.LUTFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/badcolorcount","title":"case badColorCount","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/corruptformat","title":"case corruptFormat","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/datatostringfailed","title":"case dataToStringFailed","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/filenotfound","title":"case fileNotFound","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/indexoutofbounds","title":"case indexOutOfBounds","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnonsquareaspectratio","title":"case resolutionIsNonSquareAspectRatio","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnotlinear","title":"case resolutionIsNotLinear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnotpoweroftwo","title":"case resolutionIsNotPowerOfTwo","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionunknown","title":"case resolutionUnknown","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizecorrupt","title":"case sizeCorrupt","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizenotapoweroftwo","title":"case sizeNotAPowerOfTwo","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizenotfound","title":"case sizeNotFound","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/toolargesize","title":"case tooLargeSize","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/toosmallsize","title":"case tooSmallSize","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/unknownformat","title":"case unknownFormat","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror","title":"Graphic.LUTError","type":"enum"}],"path":"\/documentation\/asyncgraphics\/luts","title":"LUTs","type":"symbol"},{"title":"Views","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agview\/init(_:)","title":"init(() -> AGGraph)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(activationpoint:)-4gjdu","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(activationpoint:)-4p1yz","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(named:_:)-4c0ps","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(named:_:)-6z4k0","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(named:_:)-7sru5","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityactivationpoint(_:)-5r0xn","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityactivationpoint(_:)-7kp12","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-2xmuo","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-4iyhh","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-4nhlg","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-6esjy","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-6r5vf","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-6t3dn","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-7m9ya","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-8l0nd","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhint(_:)-3b8gz","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhint(_:)-4x29n","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhint(_:)-5oti6","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityinputlabels(_:)-4hlz6","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityinputlabels(_:)-8qpwz","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityinputlabels(_:)-9a5l8","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabel(_:)-1u9zn","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabel(_:)-8bmvz","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabel(_:)-ythy","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-5ejtw","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-7jnui","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-8iccq","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-96o2i","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1b59h","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3wmvm","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4rqxk","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9jv6f","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-6xzoy","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-8gwpx","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-926l","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-9erdw","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-68uhz","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-7u2vy","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-8ax0u","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-yzab","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityvalue(_:)-6l4p9","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityvalue(_:)-8xb09","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityvalue(_:)-umdp","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:)-4g2c6","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:)-9jixb","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:)-9q2p4","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:message:)-4osgg","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:message:)-5c18z","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:message:)-6u29i","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:)-3mzmw","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:)-64fjq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:)-6sd9n","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:message:)-41g0c","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:message:)-8amex","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:message:)-9t3v7","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alignmentguide(_:computevalue:)-431pj","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alignmentguide(_:computevalue:)-7xgbk","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/aspectratio(_:contentmode:)-8jbsr","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/aspectratio(_:contentmode:)-96ahx","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(_:in:fillstyle:)-1j7zn","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(_:in:fillstyle:)-92ftn","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(in:fillstyle:)-3vlc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(in:fillstyle:)-6zey5","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-41gds","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-4znof","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-506ph","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-94h3y","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/buttonstyle(_:)-4yif1","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/buttonstyle(_:)-4z3t8","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2qdi0","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7qpin","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-cxxt","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1lszd","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1xo2t","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-rwj4","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-616rs","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7pyzo","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-855zl","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3225z","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3b2d","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3etfu","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentmargins(_:_:for:)-61ank","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentmargins(_:_:for:)-9ku11","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogsuppressiontoggle(_:issuppressed:)-2xddk","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogsuppressiontoggle(_:issuppressed:)-4nz3w","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogsuppressiontoggle(_:issuppressed:)-5j2em","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogconfirmationlabel(_:)-1ymcq","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogconfirmationlabel(_:)-2azjq","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogconfirmationlabel(_:)-7h8ex","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogmessage(_:)-1qp3u","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogmessage(_:)-1y8fm","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogmessage(_:)-7lf26","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1k3mo","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-24o8f","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-11oq","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1kkkr","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4fdg3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-92h7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5pkvh","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9xgem","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporterfilenamelabel(_:)-79og2","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporterfilenamelabel(_:)-7kgux","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporterfilenamelabel(_:)-9hye","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedobject(_:)-12fmj","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedobject(_:)-5yvll","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedsceneobject(_:)-10n5d","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedsceneobject(_:)-3whdk","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedscenevalue(_:_:)-646nz","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedscenevalue(_:_:)-9gvxb","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedvalue(_:_:)-7sfx","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedvalue(_:_:)-uwag","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/geometry(frame:in:)","title":"func geometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/geometry(origin:in:)","title":"func geometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/geometry(size:)","title":"func geometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/help(_:)-27jl7","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/help(_:)-2gxgs","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/help(_:)-5ouog","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:)-2zmlt","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:)-81p39","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-6yb3m","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-79asd","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-8z9fx","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-9cl0n","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listitemtint(_:)-66d4u","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listitemtint(_:)-6n5qk","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mapcamerakeyframeanimator(trigger:keyframes:)","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mapcontrolvisibility(_:)","title":"func mapControlVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mapcontrols(_:)","title":"func mapControls(() -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mapscope(_:)","title":"func mapScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mapstyle(_:)","title":"func mapStyle(MapStyle) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:)-2nimb","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:)-2xllt","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:)-4jlrb","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:displaymode:)-2361c","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:displaymode:)-3yhm7","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:displaymode:)-5wqks","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-3qeou","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-3r0y9","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-8vcnv","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-9kb2f","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsubtitle(_:)-143ze","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsubtitle(_:)-3drb1","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsubtitle(_:)-7xppw","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-54tzu","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-5gyg1","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-6p0o6","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-744ic","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-7njnq","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onchange(of:initial:_:)-1brzd","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onchange(of:initial:_:)-3qld9","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:delegate:)-61gsu","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:delegate:)-toy2","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-5iauz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-5wzd2","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-64ndf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-9af91","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onmapcamerachange(frequency:_:)-7uwrz","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onmapcamerachange(frequency:_:)-wbjk","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:perform:)-7hpfo","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:perform:)-7jd38","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:validator:perform:)-7lii3","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:validator:perform:)-8q1tt","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/padding(_:)-28edm","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/padding(_:)-3lce","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/readgeometry(frame:in:)","title":"func readGeometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/readgeometry(origin:in:)","title":"func readGeometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/readgeometry(size:)","title":"func readGeometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/renameaction(_:)-50sqq","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/renameaction(_:)-6dg7m","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareainset(edge:alignment:spacing:content:)-1606n","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareainset(edge:alignment:spacing:content:)-b3x9","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareapadding(_:)-1yq5","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareapadding(_:)-8o4me","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaleeffect(_:anchor:)-1fi0n","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaleeffect(_:anchor:)-9fkd8","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3pzy1","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4rd1o","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6qrdw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:placement:prompt:token:)-1o5me","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:placement:prompt:token:)-1rvzo","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:placement:prompt:token:)-6cyhm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:ispresented:placement:prompt:)-2rr4o","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:ispresented:placement:prompt:)-6thtl","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:ispresented:placement:prompt:)-9pzzb","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:)-41niy","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:)-5q9fi","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:)-8eent","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:suggestions:)-8fylz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:suggestions:)-94rvz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:suggestions:)-9to2w","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:ispresented:placement:prompt:token:)-16bkm","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6x9by","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8qhd2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:placement:prompt:token:)-4as8d","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:placement:prompt:token:)-6jyl4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:placement:prompt:token:)-8t0bd","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-16r9z","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-58au8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-83x9v","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4zywn","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7vpd5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9pvvx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(content:)-2n0af","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(content:)-877un","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/typeselectequivalent(_:)-4eymc","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/typeselectequivalent(_:)-4kpy1","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/typeselectequivalent(_:)-8fll2","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/typesettinglanguage(_:isenabled:)-2zmnp","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/typesettinglanguage(_:isenabled:)-73qqa","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/agview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agview","title":"AGView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicview\/init(graphic:interpolation:extendeddynamicrange:)","title":"init(graphic: Graphic, interpolation: GraphicView.Interpolation, extendedDynamicRange: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicview\/body","title":"var body: some View","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicview\/interpolation\/bilinear","title":"case bilinear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicview\/interpolation\/lanczos","title":"case lanczos","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicview\/interpolation\/linear","title":"case linear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicview\/interpolation\/nearestneighbor","title":"case nearestNeighbor","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicview\/interpolation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicview\/interpolation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicview\/interpolation","title":"GraphicView.Interpolation","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(activationpoint:)-66ogw","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(activationpoint:)-67qi5","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(named:_:)-32pyy","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(named:_:)-8q0f2","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(named:_:)-9f5or","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityactivationpoint(_:)-1bdx0","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityactivationpoint(_:)-7a1dx","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-1rafj","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-21dpy","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-24fs3","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-45ss1","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-4sw66","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-4z4w5","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-6va5b","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-7ts9s","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhint(_:)-66bok","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhint(_:)-84gk3","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhint(_:)-f8vb","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityinputlabels(_:)-1yqde","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityinputlabels(_:)-3uru8","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityinputlabels(_:)-921aw","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabel(_:)-1044m","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabel(_:)-6colx","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabel(_:)-8wx7j","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-18de7","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-7n1u3","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-8hnd2","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-8zhog","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-24j3n","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7yabl","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9jvtx","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-yt1s","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-2l0se","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-2ntar","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-5pfox","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-9nvm4","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-1kir1","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-3v7j5","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-7n7wv","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-8ou8g","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityvalue(_:)-6by7u","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityvalue(_:)-cy1l","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityvalue(_:)-pwf1","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:)-553tn","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:)-7on9w","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:)-9e5ak","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:message:)-14uen","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:message:)-1e6rk","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:message:)-6hhte","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:)-42xwe","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:)-4wt1x","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:)-8a7u6","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:message:)-2qom0","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:message:)-6eum","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:message:)-9aqfk","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alignmentguide(_:computevalue:)-4m6co","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alignmentguide(_:computevalue:)-78xxs","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/aspectratio(_:contentmode:)-11zoo","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/aspectratio(_:contentmode:)-62pbv","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:in:fillstyle:)-4rids","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:in:fillstyle:)-6874i","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(in:fillstyle:)-7fz4e","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(in:fillstyle:)-9kmnc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-4dstu","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-6mxyv","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-7li77","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-7t6uh","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/buttonstyle(_:)-5q4fu","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/buttonstyle(_:)-5w8b3","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-19qli","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4vp79","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5dg36","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-60hpo","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6200u","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-97u7e","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-17wsd","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6k8gm","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-95pv6","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-60i2h","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-727vm","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7q1a1","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentmargins(_:_:for:)-5yrvx","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentmargins(_:_:for:)-7a4it","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogsuppressiontoggle(_:issuppressed:)-1maw9","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogsuppressiontoggle(_:issuppressed:)-7rv8l","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogsuppressiontoggle(_:issuppressed:)-8ua2j","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogconfirmationlabel(_:)-1ht8w","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogconfirmationlabel(_:)-5h3vu","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogconfirmationlabel(_:)-9vn2p","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogmessage(_:)-6ulqq","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogmessage(_:)-7ym9q","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogmessage(_:)-h83g","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-40vzx","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5rg2v","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-48515","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-68dbf","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3xwf8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-586ca","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3syy0","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3xwn9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporterfilenamelabel(_:)-1tutk","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporterfilenamelabel(_:)-2puq6","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporterfilenamelabel(_:)-9yaxz","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedobject(_:)-8dsod","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedobject(_:)-8rocl","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedsceneobject(_:)-5fqa1","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedsceneobject(_:)-rt3i","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedscenevalue(_:_:)-6dm8i","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedscenevalue(_:_:)-uy75","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedvalue(_:_:)-50msu","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedvalue(_:_:)-603ej","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/geometry(frame:in:)","title":"func geometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/geometry(origin:in:)","title":"func geometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/geometry(size:)","title":"func geometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/help(_:)-35est","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/help(_:)-7uumd","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/help(_:)-8txeq","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:)-2dhsv","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:)-78a69","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-1lb7n","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-2uhao","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-3qu4q","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-4flg4","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listitemtint(_:)-4gi3y","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listitemtint(_:)-8chfr","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mapcamerakeyframeanimator(trigger:keyframes:)","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mapcontrolvisibility(_:)","title":"func mapControlVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mapcontrols(_:)","title":"func mapControls(() -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mapscope(_:)","title":"func mapScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mapstyle(_:)","title":"func mapStyle(MapStyle) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:)-1u4im","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:)-3fvox","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:)-4arj9","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:displaymode:)-315ph","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:displaymode:)-492ec","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:displaymode:)-dp6f","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-2422i","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-6ib5l","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-6r3zi","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-7gf7k","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsubtitle(_:)-5g1lq","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsubtitle(_:)-8brgp","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsubtitle(_:)-r510","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-1osui","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-7kj38","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-867pd","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-93vlf","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-9a58","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onchange(of:initial:_:)-4e2k3","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onchange(of:initial:_:)-7j9o8","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:delegate:)-5rj32","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:delegate:)-668yq","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-3fpdn","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-60j56","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-7mjja","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-7y5ug","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onmapcamerachange(frequency:_:)-4pyeg","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onmapcamerachange(frequency:_:)-6o5g7","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:perform:)-7pamr","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:perform:)-905fv","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:validator:perform:)-6opnw","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:validator:perform:)-6wy3g","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/padding(_:)-19s7e","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/padding(_:)-2ssz9","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/readgeometry(frame:in:)","title":"func readGeometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/readgeometry(origin:in:)","title":"func readGeometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/readgeometry(size:)","title":"func readGeometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/renameaction(_:)-170c0","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/renameaction(_:)-9cvhp","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareainset(edge:alignment:spacing:content:)-7uiq1","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareainset(edge:alignment:spacing:content:)-8b9jg","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareapadding(_:)-4pcu3","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareapadding(_:)-6f6nh","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaleeffect(_:anchor:)-1yb99","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaleeffect(_:anchor:)-whox","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1qb9q","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7mb0a","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-925w","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:placement:prompt:token:)-41cpc","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:placement:prompt:token:)-osom","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:placement:prompt:token:)-yywm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:ispresented:placement:prompt:)-2le17","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:ispresented:placement:prompt:)-48lgo","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:ispresented:placement:prompt:)-6hiv8","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:)-2b0oo","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:)-6je7j","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:)-6trv3","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:suggestions:)-1mljh","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:suggestions:)-2eh70","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:suggestions:)-87u3b","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-14uuh","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6fnbe","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9eqmw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:placement:prompt:token:)-3pbns","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:placement:prompt:token:)-5avjs","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:placement:prompt:token:)-5r6s2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-20she","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2pa2q","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5pazf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-30tfu","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-633e1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9986a","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(content:)-4misg","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(content:)-98kuf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/typeselectequivalent(_:)-3nc3d","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/typeselectequivalent(_:)-713u5","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/typeselectequivalent(_:)-7zjf1","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/typesettinglanguage(_:isenabled:)-3p4w3","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/typesettinglanguage(_:isenabled:)-7q08w","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicview","title":"GraphicView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/init(resolution:graphic:)","title":"init(resolution: CGSize?, graphic: () async throws -> Graphic)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(activationpoint:)-7kq5n","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(activationpoint:)-7n0ga","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaction(named:_:)-6gq6w","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaction(named:_:)-8od6v","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaction(named:_:)-9nw7t","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityactivationpoint(_:)-2avbw","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityactivationpoint(_:)-8c3vu","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-1dupc","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-1y838","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-2dtfw","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-3to2n","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-3um89","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-3y7if","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-5f4ud","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-92if4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityhint(_:)-42dtf","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityhint(_:)-6qm2n","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityhint(_:)-9qd1h","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityinputlabels(_:)-1schv","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityinputlabels(_:)-4mpqq","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityinputlabels(_:)-70bmr","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitylabel(_:)-3cizn","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitylabel(_:)-5hgtw","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitylabel(_:)-6ojjs","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:)-1xge5","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:)-43gqr","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:)-92vot","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:)-maw","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3lf7l","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3q0dy","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4yeqz","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-jv6w","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entrylabel:)-3kf2n","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entrylabel:)-8q5fp","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entrylabel:)-etj9","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entrylabel:)-zbte","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:textranges:)-36bsx","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:textranges:)-39tn9","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:textranges:)-518mb","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:textranges:)-tyec","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityvalue(_:)-1hsjg","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityvalue(_:)-4vijp","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityvalue(_:)-5t4ki","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:)-1pcv6","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:)-6qewz","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:)-8el2h","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:message:)-24cd8","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:message:)-2ac3q","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:message:)-452kn","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:)-10pz","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:)-6t0bl","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:)-894xf","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:message:)-1x374","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:message:)-4bxiz","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:message:)-8hulf","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alignmentguide(_:computevalue:)-2jdl","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alignmentguide(_:computevalue:)-9lw98","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/aspectratio(_:contentmode:)-7yblw","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/aspectratio(_:contentmode:)-996pv","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(_:in:fillstyle:)-6yxy8","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(_:in:fillstyle:)-816b","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(in:fillstyle:)-2ekkv","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(in:fillstyle:)-8klpc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/badge(_:)-4pv6v","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/badge(_:)-9a2bu","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/badge(_:)-9lqy","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/badge(_:)-mb8m","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/buttonstyle(_:)-5y60r","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/buttonstyle(_:)-u0hs","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3khdk","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7z96m","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9vxtp","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3ilvf","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5r1fs","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7qsnj","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-460bw","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6ep9e","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-aer8","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6rze1","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7kp4","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9gtd5","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contentmargins(_:_:for:)-4l39r","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contentmargins(_:_:for:)-91the","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogsuppressiontoggle(_:issuppressed:)-1ab0x","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogsuppressiontoggle(_:issuppressed:)-1jqnf","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogsuppressiontoggle(_:issuppressed:)-8w0m5","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogconfirmationlabel(_:)-16yko","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogconfirmationlabel(_:)-7y6j8","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogconfirmationlabel(_:)-fzn2","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogmessage(_:)-1zohl","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogmessage(_:)-3jk8p","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogmessage(_:)-7zqar","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1g47p","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4xtgu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-3ncn8","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-528ho","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-65ixf","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-eum4","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-598jl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5zkuj","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporterfilenamelabel(_:)-4btmg","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporterfilenamelabel(_:)-73b5w","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporterfilenamelabel(_:)-9bsaj","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedobject(_:)-36fuu","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedobject(_:)-5etg8","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedsceneobject(_:)-1odnh","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedsceneobject(_:)-68bes","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedscenevalue(_:_:)-1x0z3","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedscenevalue(_:_:)-4l9qo","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedvalue(_:_:)-3hsj3","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedvalue(_:_:)-3scec","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/geometry(frame:in:)","title":"func geometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/geometry(origin:in:)","title":"func geometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/geometry(size:)","title":"func geometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/help(_:)-5v56y","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/help(_:)-6vii7","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/help(_:)-7yi29","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyboardshortcut(_:)-6x0u2","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyboardshortcut(_:)-7mipx","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linelimit(_:)-2fma4","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linelimit(_:)-2llu3","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linelimit(_:)-4h37v","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linelimit(_:)-o7t8","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listitemtint(_:)-234px","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listitemtint(_:)-5b50s","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mapcamerakeyframeanimator(trigger:keyframes:)","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mapcontrolvisibility(_:)","title":"func mapControlVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mapcontrols(_:)","title":"func mapControls(() -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mapscope(_:)","title":"func mapScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mapstyle(_:)","title":"func mapStyle(MapStyle) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:)-4wir8","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:)-5188b","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:)-732n2","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:displaymode:)-5lj9u","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:displaymode:)-5ux3o","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:displaymode:)-9me0q","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdocument(_:preview:)-4hykh","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdocument(_:preview:)-4xqq8","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdocument(_:preview:)-5krnj","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdocument(_:preview:)-btip","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsubtitle(_:)-2jgyz","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsubtitle(_:)-6fcz2","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsubtitle(_:)-6m6qq","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationtitle(_:)-1e7kw","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationtitle(_:)-1mx05","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationtitle(_:)-4dv06","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationtitle(_:)-59db7","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationtitle(_:)-94t1b","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onchange(of:initial:_:)-27th7","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onchange(of:initial:_:)-54uzp","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:delegate:)-6k4lq","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:delegate:)-79wne","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:istargeted:perform:)-42alh","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:istargeted:perform:)-83q5l","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:istargeted:perform:)-9t2ca","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:istargeted:perform:)-pvwb","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onmapcamerachange(frequency:_:)-285zp","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onmapcamerachange(frequency:_:)-98340","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onpastecommand(of:perform:)-4ueri","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onpastecommand(of:perform:)-5gexg","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onpastecommand(of:validator:perform:)-6z7fc","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onpastecommand(of:validator:perform:)-83iuh","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/padding(_:)-18bk6","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/padding(_:)-92845","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/readgeometry(frame:in:)","title":"func readGeometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/readgeometry(origin:in:)","title":"func readGeometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/readgeometry(size:)","title":"func readGeometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/renameaction(_:)-1ci6b","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/renameaction(_:)-3bi7n","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/safeareainset(edge:alignment:spacing:content:)-4n75u","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/safeareainset(edge:alignment:spacing:content:)-8ffbb","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/safeareapadding(_:)-1eooz","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/safeareapadding(_:)-42178","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scaleeffect(_:anchor:)-6d2gr","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scaleeffect(_:anchor:)-d5df","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6k31l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-74ue5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-nsik","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:placement:prompt:token:)-7jm4u","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:placement:prompt:token:)-7jqrc","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:placement:prompt:token:)-88hud","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:ispresented:placement:prompt:)-1ho8k","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:ispresented:placement:prompt:)-1whrz","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:ispresented:placement:prompt:)-6f6uu","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:)-19bso","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:)-61u33","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:)-97zuh","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:suggestions:)-1tilc","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:suggestions:)-51905","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:suggestions:)-8h9cr","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-64sj6","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8o2g2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-lc36","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:placement:prompt:token:)-1zbij","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:placement:prompt:token:)-9pp2z","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:placement:prompt:token:)-nxs6","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-16h1d","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-47ylf","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-oadv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2ejg1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8iyqw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8k8q9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbar(content:)-86b3p","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbar(content:)-zdmu","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/typeselectequivalent(_:)-78oho","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/typeselectequivalent(_:)-gozk","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/typeselectequivalent(_:)-nitg","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/typesettinglanguage(_:isenabled:)-1y1m4","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/typesettinglanguage(_:isenabled:)-4o7y6","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/asyncgraphicview","title":"AsyncGraphicView","type":"struct"},{"title":"Graphs","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/aggraph\/components-4wezt","title":"var components: AGComponents","type":"property"}],"title":"AGGraph Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/aggraph\/components-7l9kn","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraph\/aspectratio(_:contentmode:)-1ma72","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/aspectratio(_:contentmode:)-wwiq","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/background(_:)-3b2w8","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/background(_:)-8aygj","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/aggraph\/resolution(at:for:)-505ak","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"title":"AGGraph Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/aggraph\/resolution(at:for:)-29o3u","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggraph","title":"AGGraph","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/init(_:)","title":"init(Graphic)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/aspectratio(_:contentmode:)-36rks","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/aspectratio(_:contentmode:)-4f58l","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/background(_:)-2erpo","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/background(_:)-mwpa","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggraphic\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/==(_:_:)","title":"static func == (AGGraphic, AGGraphic) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/aggraphic\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggraphic\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aggraphic","title":"AGGraphic","type":"struct"},{"title":"Video","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framecount","title":"var frameCount: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framerate","title":"let frameRate: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/resolution","title":"let resolution: CGSize","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct","title":"GraphicVideoPlayer.Info","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/loop","title":"var loop: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/volume","title":"var volume: Double","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct","title":"GraphicVideoPlayer.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(named:fileextension:in:options:)","title":"convenience init(named: String, fileExtension: String, in: Bundle, options: GraphicVideoPlayer.Options) async throws","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(url:options:)","title":"init(url: URL, options: GraphicVideoPlayer.Options) async throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/frameindex","title":"var frameIndex: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.property","title":"var info: GraphicVideoPlayer.Info","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.property","title":"var options: GraphicVideoPlayer.Options","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/playing","title":"var playing: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seconds","title":"var seconds: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/time","title":"var time: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/play()","title":"func play()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-5hpoo","title":"func seek(to: Double)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-86zyw","title":"func seek(to: Int)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-8d3sm","title":"func seek(to: CMTime)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/startseek()","title":"func startSeek()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stop()","title":"func stop()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stopseek()","title":"func stopSeek()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/==(_:_:)","title":"static func == (GraphicVideoPlayer, GraphicVideoPlayer) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer","title":"GraphicVideoPlayer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/init(fps:kbps:format:codec:resolution:)","title":"init(fps: Double, kbps: Int, format: GraphicVideoRecorder.VideoFormat, codec: GraphicVideoRecorder.VideoCodec, resolution: CGSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/recording","title":"var recording: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/append(graphic:)","title":"func append(graphic: Graphic) async throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/start()","title":"func start() throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/stop()-2clbb","title":"func stop() async throws -> URL","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/stop()-8ms6j","title":"func stop() async throws -> Data","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/h264","title":"case h264","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/prores","title":"case proRes","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/type","title":"var type: AVVideoCodecType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec","title":"GraphicVideoRecorder.VideoCodec","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/mov","title":"case mov","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/mp4","title":"case mp4","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/type","title":"var type: AVFileType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat","title":"GraphicVideoRecorder.VideoFormat","type":"enum"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder","title":"GraphicVideoRecorder","type":"class"},{"path":"\/documentation\/asyncgraphics\/graphicrecorder","title":"GraphicRecorder","type":"typealias"},{"title":"Layout","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/aspectratio(_:contentmode:)-3mf5r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/aspectratio(_:contentmode:)-7wngc","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/background(_:)-21oqw","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/background(_:)-4rvum","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agframe\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agframe\/==(_:_:)","title":"static func == (AGFrame, AGFrame) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agframe\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agframe","title":"AGFrame","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/init(alignment:with:)","title":"init(alignment: Graphic.ZStackAlignment, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-3fl80","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-7mj2r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-2bc10","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-8o6af","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agzstack\/==(_:_:)","title":"static func == (AGZStack, AGZStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agzstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agzstack","title":"AGZStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.VStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-1nji8","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-n0ph","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-3y07o","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-45lbw","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agvstack\/==(_:_:)","title":"static func == (AGVStack, AGVStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvstack","title":"AGVStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.HStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-4k5r9","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-6q9un","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-1wnkx","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-9do05","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/aghstack\/==(_:_:)","title":"static func == (AGHStack, AGHStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/aghstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aghstack","title":"AGHStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/init(minlength:)","title":"init(minLength: CGFloat)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/aspectratio(_:contentmode:)-7iz8s","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/aspectratio(_:contentmode:)-9o9qy","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/background(_:)-4ry8u","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/background(_:)-vbq4","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agspacer\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agspacer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agspacer","title":"AGSpacer","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/aspectratio(_:contentmode:)-4s594","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/aspectratio(_:contentmode:)-8ftnb","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/background(_:)-31qvd","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/background(_:)-59f2s","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agpadding\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agpadding\/==(_:_:)","title":"static func == (AGPadding, AGPadding) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agpadding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agpadding\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agpadding","title":"AGPadding","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/child","title":"var child: AGGraph","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/aspectratio(_:contentmode:)-204eh","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/aspectratio(_:contentmode:)-9mgji","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/background(_:)-81d6u","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/background(_:)-8h6j3","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agaspectratio\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/==(_:_:)","title":"static func == (AGAspectRatio, AGAspectRatio) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agaspectratio\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agaspectratio\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agaspectratio","title":"AGAspectRatio","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agoffset\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agoffset\/aspectratio(_:contentmode:)-1fdfq","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/aspectratio(_:contentmode:)-9vlg1","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/background(_:)-5odt7","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/background(_:)-xg0c","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agoffset\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agoffset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agoffset\/==(_:_:)","title":"static func == (AGOffset, AGOffset) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agoffset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agoffset\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agoffset\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agoffset","title":"AGOffset","type":"struct"},{"title":"Resources","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/init(_:)","title":"init(TMImage)","type":"init"},{"path":"\/documentation\/asyncgraphics\/agimage\/init(named:)","title":"init(named: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGImage","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/resizable()","title":"func resizable() -> AGImage","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/aspectratio(_:contentmode:)-7h56r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/aspectratio(_:contentmode:)-964kg","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/background(_:)-66nel","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/background(_:)-9b3ms","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agimage\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agimage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agimage","title":"AGImage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/init(with:)","title":"init(with: GraphicVideoPlayer)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resizable()","title":"func resizable() -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8hcdj","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8xa34","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-5k5vi","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-9u74n","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvideo\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvideo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvideo","title":"AGVideo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/init(_:)","title":"init(Graphic.CameraPosition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGCamera","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/resizable()","title":"func resizable() -> AGCamera","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/aspectratio(_:contentmode:)-49uqq","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/aspectratio(_:contentmode:)-r1na","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/background(_:)-29s3u","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/background(_:)-4oh03","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcamera\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agcamera\/==(_:_:)","title":"static func == (AGCamera, AGCamera) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcamera\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcamera\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcamera","title":"AGCamera","type":"struct"},{"title":"Shapes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/strokeborder(linewidth:)","title":"func strokeBorder(lineWidth: CGFloat) -> AGCircle","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/aspectratio(_:contentmode:)-67te1","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/aspectratio(_:contentmode:)-7ltzm","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/background(_:)-775pw","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/background(_:)-864oa","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcircle\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcircle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcircle","title":"AGCircle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/strokeborder(linewidth:)","title":"func strokeBorder(lineWidth: CGFloat) -> AGRectangle","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/aspectratio(_:contentmode:)-5tsmm","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/aspectratio(_:contentmode:)-90z9w","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/background(_:)-5j6vj","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/background(_:)-8vet1","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agrectangle\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agrectangle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agrectangle","title":"AGRectangle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/init(cornerradius:)","title":"init(cornerRadius: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/strokeborder(linewidth:)","title":"func strokeBorder(lineWidth: CGFloat) -> AGRoundedRectangle","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/aspectratio(_:contentmode:)-399yr","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/aspectratio(_:contentmode:)-9ohzb","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/background(_:)-5sj0o","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/background(_:)-5sp24","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agroundedrectangle","title":"AGRoundedRectangle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/init(count:)","title":"init(count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/aspectratio(_:contentmode:)-3a5lh","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/aspectratio(_:contentmode:)-ocbd","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/background(_:)-1vwvf","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/background(_:)-7cs7u","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agpolygon\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agpolygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agpolygon","title":"AGPolygon","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/init(count:cornerradius:)","title":"init(count: Int, cornerRadius: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/aspectratio(_:contentmode:)-2x0sf","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/aspectratio(_:contentmode:)-ewr1","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/background(_:)-8fjn2","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/background(_:)-8o7ej","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agroundedpolygon","title":"AGRoundedPolygon","type":"struct"},{"title":"Color","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/init(_:)","title":"init(PixelColor)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/aspectratio(_:contentmode:)-7ok3h","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/aspectratio(_:contentmode:)-95vps","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/background(_:)-4uidj","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/background(_:)-65u9r","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcolor\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcolor","title":"AGColor","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/aspectratio(_:contentmode:)-31lhq","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/aspectratio(_:contentmode:)-3dgda","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/background(_:)-1cd4u","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/background(_:)-36o60","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/==(_:_:)","title":"static func == (AGForegroundColor, AGForegroundColor) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor","title":"AGForegroundColor","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/aspectratio(_:contentmode:)-25w2c","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/aspectratio(_:contentmode:)-4k4w6","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/background(_:)-6ntmw","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/background(_:)-8u4p0","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/==(_:_:)","title":"static func == (AGBackgroundColor, AGBackgroundColor) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agbackgroundcolor","title":"AGBackgroundColor","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/aspectratio(_:contentmode:)-3jbd5","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/aspectratio(_:contentmode:)-6tpt","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/background(_:)-596su","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/background(_:)-9xga2","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agborder\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agborder\/==(_:_:)","title":"static func == (AGBorder, AGBorder) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agborder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agborder\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agborder","title":"AGBorder","type":"struct"},{"title":"Effects","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/aspectratio(_:contentmode:)-45w68","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/aspectratio(_:contentmode:)-5bzfm","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/background(_:)-2y5ds","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/background(_:)-8cq2b","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblur\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agblur\/==(_:_:)","title":"static func == (AGBlur, AGBlur) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agblur\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblur\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agblur","title":"AGBlur","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/aspectratio(_:contentmode:)-38tpi","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/aspectratio(_:contentmode:)-4fpmr","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/background(_:)-4c775","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/background(_:)-qrlu","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agchannelmix\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/==(_:_:)","title":"static func == (AGChannelMix, AGChannelMix) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agchannelmix\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agchannelmix\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agchannelmix","title":"AGChannelMix","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/init(offset:depth:scale:octaves:seed:colored:random:)","title":"init(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, colored: Bool, random: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/aspectratio(_:contentmode:)-19tsw","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/aspectratio(_:contentmode:)-7dajj","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/background(_:)-36hm6","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/background(_:)-94or8","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agnoise\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agnoise\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agnoise","title":"AGNoise","type":"struct"},{"title":"Blending","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/aspectratio(_:contentmode:)-1008i","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/aspectratio(_:contentmode:)-8q124","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/background(_:)-8x001","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/background(_:)-95y6t","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblend\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agblend\/==(_:_:)","title":"static func == (AGBlend, AGBlend) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agblend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblend\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agblend","title":"AGBlend","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/aspectratio(_:contentmode:)-34zb4","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/aspectratio(_:contentmode:)-9w5jh","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/background(_:)-13rxm","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/background(_:)-89qt9","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblended\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agblended\/==(_:_:)","title":"static func == (AGBlended, AGBlended) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agblended\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblended\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agblended","title":"AGBlended","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/aspectratio(_:contentmode:)-5hotd","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/aspectratio(_:contentmode:)-8x18v","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/background(_:)-2vdzs","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/background(_:)-4ngm","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agmask\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agmask\/==(_:_:)","title":"static func == (AGMask, AGMask) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agmask\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agmask\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agmask","title":"AGMask","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/aspectratio(_:contentmode:)-2doab","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/aspectratio(_:contentmode:)-3i4x","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/background(_:)-6490p","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/background(_:)-73kwg","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agbackground\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agbackground\/==(_:_:)","title":"static func == (AGBackground, AGBackground) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agbackground\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agbackground\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agbackground","title":"AGBackground","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/aspectratio(_:contentmode:)-4kk7m","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/aspectratio(_:contentmode:)-6w8ro","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/background(_:)-3jxh0","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/background(_:)-8tvul","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agopacity\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agopacity\/==(_:_:)","title":"static func == (AGOpacity, AGOpacity) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agopacity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agopacity\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agopacity","title":"AGOpacity","type":"struct"},{"title":"Loop","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/init(_:graph:)","title":"init(ClosedRange<Int>, graph: (Int) -> AGGraph)","type":"init"},{"path":"\/documentation\/asyncgraphics\/agforeach\/init(_:graphs:)","title":"init(Range<Int>, graphs: (Int) -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/aspectratio(_:contentmode:)-2isju","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/aspectratio(_:contentmode:)-9owq5","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/background(_:)-47hd","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/background(_:)-7t01h","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforeach\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agforeach\/==(_:_:)","title":"static func == (AGForEach, AGForEach) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agforeach\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforeach\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agforeach","title":"AGForEach","type":"struct"},{"title":"Renderer","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/renderer\/custommetallibrary","title":"static var customMetalLibrary: MTLLibrary?","type":"property"},{"path":"\/documentation\/asyncgraphics\/renderer\/defaultmetallibrary","title":"static var defaultMetalLibrary: MTLLibrary?","type":"property"},{"path":"\/documentation\/asyncgraphics\/renderer\/metaldevice","title":"static let metalDevice: MTLDevice","type":"property"},{"path":"\/documentation\/asyncgraphics\/renderer\/metallibrary","title":"static var metalLibrary: MTLLibrary?","type":"property"}],"path":"\/documentation\/asyncgraphics\/renderer","title":"Renderer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphrenderer\/init()","title":"init()","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphrenderer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/asyncgraphics\/aggraphrenderer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aggraphrenderer","title":"AGGraphRenderer","type":"class"},{"title":"Other","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphbuilder\/buildblock(_:)-6wsi","title":"static func buildBlock((AGGraph)...) -> [AGGraph]","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphbuilder\/buildblock(_:)-9oht5","title":"static func buildBlock([AGGraph]) -> [AGGraph]","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphbuilder\/buildeither(first:)","title":"static func buildEither(first: [AGGraph]) -> [AGGraph]","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphbuilder\/buildeither(second:)","title":"static func buildEither(second: [AGGraph]) -> [AGGraph]","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggraphbuilder","title":"AGGraphBuilder","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspecification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agspecification\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agspecification","title":"AGSpecification","type":"struct"},{"path":"\/documentation\/asyncgraphics\/agcomponents","title":"AGComponents","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agdetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agdetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agdetails","title":"AGDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/init(graphs:)","title":"init(graphs: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/aspectratio(_:contentmode:)-3jsdd","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/aspectratio(_:contentmode:)-9x9y","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/background(_:)-3g6o6","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/background(_:)-4xlsp","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggroup\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/aggroup\/==(_:_:)","title":"static func == (AGGroup, AGGroup) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/aggroup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggroup\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aggroup","title":"AGGroup","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcontentmode\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/asyncgraphics\/agcontentmode\/fit","title":"case fit","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcontentmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcontentmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcontentmode","title":"AGContentMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/add","title":"case add","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/addwithalpha","title":"case addWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/average","title":"case average","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/darken","title":"case darken","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/difference","title":"case difference","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/divide","title":"case divide","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/lighten","title":"case lighten","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/maximum","title":"case maximum","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/minimum","title":"case minimum","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/multiply","title":"case multiply","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/over","title":"case over","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/power","title":"case power","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/screen","title":"case screen","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/subtract","title":"case subtract","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/subtractwithalpha","title":"case subtractWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/under","title":"case under","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agarrayblendmode","title":"AGArrayBlendMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/asyncgraphics\/placement\/fit","title":"case fit","type":"case"},{"path":"\/documentation\/asyncgraphics\/placement\/fixed","title":"case fixed","type":"case"},{"path":"\/documentation\/asyncgraphics\/placement\/stretch","title":"case stretch","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/placement\/name","title":"var name: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/center","title":"static let center: Placement","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/placement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/placement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/placement\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/placement","title":"Placement","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgsize\/place(in:placement:rounded:)","title":"func place(in: CGSize, placement: Placement, rounded: Bool) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/corefoundation\/cgsize","title":"CGSize","type":"extension"}],"path":"\/documentation\/asyncgraphics\/corefoundation","title":"CoreFoundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/add()","title":"func add() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/average()","title":"func average() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/blended(blendingmode:)","title":"func blended(blendingMode: AGArrayBlendMode) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/exportvideotodata(fps:kbps:format:codec:)","title":"func exportVideoToData(fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> Data","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/exportvideotourl(fps:kbps:format:codec:)","title":"func exportVideoToURL(fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> URL","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/hstack(alignment:spacing:padding:backgroundcolor:resolution:)","title":"func hStack(alignment: Graphic.HStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/hstacked(alignment:)","title":"func hStacked(alignment: Graphic.HStackAlignment) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/merge()","title":"func merge() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/metal(code:options:)","title":"func metal(code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/vstack(alignment:spacing:padding:backgroundcolor:resolution:)","title":"func vStack(alignment: Graphic.VStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/vstacked(alignment:)","title":"func vStacked(alignment: Graphic.VStackAlignment) async throws -> Graphic","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/importvideo(url:progress:)","title":"static func importVideo(url: URL, progress: ((Graphic.ImportVideoFrameProgress) -> ())?) async throws -> [Graphic]","type":"method"}],"path":"\/documentation\/asyncgraphics\/swift\/array","title":"Array","type":"extension"}],"path":"\/documentation\/asyncgraphics\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/asyncgraphics","title":"AsyncGraphics","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}
=======
{"interfaceLanguages":{"swift":[{"children":[{"title":"Graphics","type":"groupMarker"},{"children":[{"title":"Resolution","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resolution","title":"var resolution: CGSize","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/width","title":"var width: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/height","title":"var height: CGFloat","type":"property"},{"title":"Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texture","title":"let texture: MTLTexture","type":"property"},{"title":"Metadata","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/bits","title":"let bits: TMBits","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorspace","title":"let colorSpace: TMColorSpace","type":"property"},{"title":"Pixels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/firstpixelcolor","title":"var firstPixelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/averagepixelcolor","title":"var averagePixelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelcolors","title":"var pixelColors: [[PixelColor]]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/ispixelsequal(to:)","title":"func isPixelsEqual(to: Graphic) async throws -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixels(_:options:)","title":"static func pixels([[PixelColor]], options: Graphic.ContentOptions) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixel(x:y:options:)","title":"func pixel(x: Int, y: Int, options: Graphic.EffectOptions) async throws -> PixelColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixel(u:v:options:)","title":"func pixel(u: CGFloat, v: CGFloat, options: Graphic.EffectOptions) async throws -> PixelColor","type":"method"},{"title":"Channels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels","title":"var channels: [CGFloat]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels8","title":"var channels8: [UInt8]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels32","title":"var channels32: [Float]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(_:resolution:)-5dtx6","title":"static func channels([UInt8], resolution: CGSize) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(_:resolution:)-6011k","title":"static func channels([Float], resolution: CGSize) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(_:resolution:)-6011k","title":"static func channels([Float], resolution: CGSize) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(pointer:resolution:)-1mynx","title":"static func channels(pointer: UnsafePointer<UInt8>, resolution: CGSize) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(pointer:resolution:)-5svpm","title":"static func channels(pointer: UnsafePointer<Float>, resolution: CGSize) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels(pointer:resolution:)-5svpm","title":"static func channels(pointer: UnsafePointer<Float>, resolution: CGSize) throws -> Graphic","type":"method"},{"title":"Image","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/image","title":"var image: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/imagewithtransparency","title":"var imageWithTransparency: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/cgimage","title":"var cgImage: CGImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/ciimage","title":"var ciImage: CIImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(named:)","title":"static func image(named: String) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(named:in:)","title":"static func image(named: String, in: Bundle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(url:)","title":"static func image(url: URL) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(_:)-6435w","title":"static func image(TMImage) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(_:)-7tsh0","title":"static func image(CGImage) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(_:)-1mubl","title":"static func image(CIImage) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/pngdata","title":"var pngData: Data","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/xdrimage","title":"var xdrImage: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/writeimage(to:xdr:)","title":"func writeImage(to: URL, xdr: Bool) async throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/israwimage(url:)","title":"static func isRAWImage(url: URL) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rawimage(url:)-1dcqq","title":"static func rawImage(url: URL) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rawimage(url:)-8w81k","title":"static func rawImage(url: URL) async throws -> Graphic","type":"method"},{"title":"Video","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails(url:)","title":"static func videoDetails(url: URL) async throws -> Graphic.VideoDetails","type":"method"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/fps","title":"let fps: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/framecount","title":"let frameCount: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/resolution","title":"let resolution: CGSize","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/videodetails","title":"Graphic.VideoDetails","type":"struct"},{"path":"\/documentation\/asyncgraphics\/graphic\/playvideo(url:loop:volume:)","title":"static func playVideo(url: URL, loop: Bool, volume: Double) async throws -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideo(url:progress:)","title":"static func importVideo(url: URL, progress: ((Graphic.ImportVideoFrameProgress) -> ())?) async throws -> [Graphic]","type":"method"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframeprogress\/fraction","title":"let fraction: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframeprogress\/index","title":"let index: Int","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframeprogress","title":"Graphic.ImportVideoFrameProgress","type":"struct"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideostream(url:)","title":"static func importVideoStream(url: URL) -> AsyncThrowingStream<Graphic, Error>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframe(at:url:info:)","title":"static func importVideoFrame(at: Int, url: URL, info: VideoInfo?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotourl(with:fps:kbps:format:codec:)","title":"static func exportVideoToURL(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> URL","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotodata(with:fps:kbps:format:codec:)","title":"static func exportVideoToData(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> Data","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/processvideo(url:)","title":"static func processVideo(url: URL) async throws -> AsyncThrowingStream<Graphic, Error>","type":"method"},{"title":"Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texture(_:)","title":"static func texture(MTLTexture) throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/unsupportedtype","title":"case unsupportedType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror","title":"Graphic.TextureError","type":"enum"},{"title":"Buffer","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelbuffer","title":"var pixelBuffer: CVPixelBuffer","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/samplebuffer","title":"var sampleBuffer: CMSampleBuffer","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelbuffer(_:)","title":"static func pixelBuffer(CVPixelBuffer) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/samplebuffer(_:)","title":"static func sampleBuffer(CMSampleBuffer) throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/unsupportedtype","title":"case unsupportedType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror","title":"Graphic.BufferError","type":"enum"},{"title":"View","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/view(content:)","title":"static func view<Content>(content: () -> Content) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/view(resolution:alignment:content:)","title":"static func view<Content>(resolution: CGSize, alignment: Alignment, content: () -> Content) async throws -> Graphic","type":"method"},{"title":"Resolution","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(to:placement:method:)","title":"func resized(to: CGSize, placement: Graphic.Placement, method: Graphic.ResizeMethod) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizedstretched(to:method:)","title":"func resizedStretched(to: CGSize, method: Graphic.ResizeMethod) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(in:options:)","title":"func resized(in: CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(to:placement:options:)","title":"func resized(to: CGSize, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(by:)","title":"func resized(by: CGFloat) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/bilinear","title":"case bilinear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/lanczos","title":"case lanczos","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod","title":"Graphic.ResizeMethod","type":"enum"},{"title":"Graph","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/graph(resolution:renderer:graph:)","title":"func graph(resolution: CGSize, renderer: AGGraphRenderer, graph: () -> AGGraph) async throws -> Graphic","type":"method"},{"title":"Camera","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera\/init(_:with:quality:external:centerstage:)","title":"convenience init(AVCaptureDevice.Position, with: AVCaptureDevice.DeviceType, quality: AVCaptureSession.Preset, external: Bool, centerStage: Bool) throws","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera\/init(device:quality:)","title":"init(device: AVCaptureDevice, quality: AVCaptureSession.Preset) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera\/focus(at:mode:)","title":"func focus(at: CGPoint, mode: AVCaptureDevice.FocusMode)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera\/captureoutput(_:didoutput:from:)","title":"func captureOutput(AVCaptureOutput, didOutput: CMSampleBuffer, from: AVCaptureConnection)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/camera\/avcapturevideodataoutputsamplebufferdelegate-implementations","title":"AVCaptureVideoDataOutputSampleBufferDelegate Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/camera","title":"Graphic.Camera","type":"class"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(with:)","title":"static func camera(with: Graphic.Camera) -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(at:lens:quality:)","title":"static func camera(at: Graphic.CameraPosition, lens: AVCaptureDevice.DeviceType, quality: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(device:quality:)","title":"static func camera(device: AVCaptureDevice, quality: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/back","title":"case back","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/external","title":"case external","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/front","title":"case front","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/flip()","title":"func flip()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/flipped()","title":"func flipped() -> Graphic.CameraPosition","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition","title":"Graphic.CameraPosition","type":"enum"},{"title":"Screen","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/screen(at:)","title":"static func screen(at: Int) throws -> AsyncStream<Graphic>","type":"method"},{"title":"Maps","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maps(type:latitude:longitude:span:resolution:mapoptions:options:)","title":"static func maps(type: Graphic.MapType, latitude: Angle, longitude: Angle, span: Angle, resolution: CGSize, mapOptions: Graphic.MapOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybrid","title":"case hybrid","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybridflyover","title":"case hybridFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/mutedstandard","title":"case mutedStandard","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satellite","title":"case satellite","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satelliteflyover","title":"case satelliteFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/standard","title":"case standard","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype","title":"Graphic.MapType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/darkmode","title":"static let darkMode: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showbuildings","title":"static let showBuildings: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showpointsofinterest","title":"static let showPointsOfInterest: Graphic.MapOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions","title":"Graphic.MapOptions","type":"struct"},{"title":"Color","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/color(_:resolution:options:)","title":"static func color(PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Text","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/text(_:font:position:horizontalalignment:verticalalignment:color:backgroundcolor:resolution:options:)","title":"static func text(String, font: Graphic.TextFont, position: CGPoint?, horizontalAlignment: Graphic.TextHorizontalAlignment, verticalAlignment: Graphic.TextVerticalAlignment, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/textfont","title":"Graphic.TextFont","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/left","title":"case left","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/right","title":"case right","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment","title":"Graphic.TextHorizontalAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/top","title":"case top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment","title":"Graphic.TextVerticalAlignment","type":"enum"},{"title":"Rectangle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(size:position:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(size: CGSize?, position: CGPoint?, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(frame:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(frame: CGRect, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(size:position:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(size: CGSize?, position: CGPoint?, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(frame:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(frame: CGRect, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Circle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/circle(radius:position:color:backgroundcolor:resolution:options:)","title":"static func circle(radius: CGFloat?, position: CGPoint?, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedcircle(radius:position:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedCircle(radius: CGFloat?, position: CGPoint?, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Polygon","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polygon(count:radius:position:rotation:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func polygon(count: Int, radius: CGFloat?, position: CGPoint?, rotation: Angle, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Arc","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arc(angle:length:radius:position:color:backgroundcolor:resolution:options:)","title":"static func arc(angle: Angle, length: Angle, radius: CGFloat?, position: CGPoint?, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedarc(angle:length:radius:position:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedArc(angle: Angle, length: Angle, radius: CGFloat?, position: CGPoint?, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Star","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/star(count:innerradius:outerradius:position:rotation:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func star(count: Int, innerRadius: CGFloat?, outerRadius: CGFloat?, position: CGPoint?, rotation: Angle, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Line","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/line(leadingpoint:trailingpoint:linewidth:cap:color:backgroundcolor:resolution:options:)","title":"static func line(leadingPoint: CGPoint, trailingPoint: CGPoint, lineWidth: CGFloat, cap: Graphic.LineCap, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/diamond","title":"case diamond","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/round","title":"case round","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/square","title":"case square","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/linecap\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/linecap","title":"Graphic.LineCap","type":"enum"},{"title":"Sample Line","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/sampleline(with:form:to:fromangle:toangle:count:blendingmode:tintcolor:backgroundcolor:resolution:options:)","title":"static func sampleLine(with: Graphic, form: CGPoint, to: CGPoint, fromAngle: Angle?, toAngle: Angle?, count: Int, blendingMode: Graphic.BlendMode, tintColor: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sampleline(with:form:to:fromangle:toangle:sampledistance:blendingmode:tintcolor:backgroundcolor:resolution:options:)","title":"static func sampleLine(with: Graphic, form: CGPoint, to: CGPoint, fromAngle: Angle?, toAngle: Angle?, sampleDistance: CGFloat, blendingMode: Graphic.BlendMode, tintColor: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Gradient","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradient(direction:stops:position:scale:offset:extend:gamma:resolution:options:)","title":"static func gradient(direction: Graphic.GradientDirection, stops: [Graphic.GradientStop], position: CGPoint?, scale: CGFloat, offset: CGFloat, extend: Graphic.GradientExtend, gamma: CGFloat, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/radial","title":"case radial","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection","title":"Graphic.GradientDirection","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/init(at:color:)","title":"init(at: CGFloat, color: PixelColor)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/color","title":"var color: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/location","title":"var location: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop","title":"Graphic.GradientStop","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend","title":"Graphic.GradientExtend","type":"enum"},{"title":"Noise","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/noise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func noise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorednoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func coloredNoise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomnoise(seed:resolution:options:)","title":"static func randomNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomcolorednoise(seed:resolution:options:)","title":"static func randomColoredNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Particles","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticles(particlescale:particlecolor:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvParticles(particleScale: CGFloat, particleColor: PixelColor, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticles(with:particlescale:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvColorParticles(with: Graphic, particleScale: CGFloat, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVColorParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/four","title":"case four","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/one","title":"case one","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/two","title":"case two","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount","title":"Graphic.UVParticleSampleCount","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelalpha","title":"static let channelAlpha: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/clipchannelalpha","title":"static let clipChannelAlpha: Graphic.UVParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions","title":"Graphic.UVParticleOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVColorParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions","title":"Graphic.UVColorParticleOptions","type":"struct"},{"title":"Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blend(with:blendingmode:)","title":"static func blend(with: [Graphic], blendingMode: Graphic.MultiBlendMode) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blend(with:blendingmode:placement:alignment:options:)","title":"func blend(with: Graphic, blendingMode: Graphic.BlendMode, placement: Graphic.Placement, alignment: Graphic.Alignment, options: Graphic.EffectOptions) async throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blended(with:blendingmode:placement:alignment:options:)","title":"func blended(with: Graphic, blendingMode: Graphic.BlendMode, placement: Graphic.Placement, alignment: Graphic.Alignment, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(with:)","title":"static func add(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/average(with:)","title":"static func average(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mask(foreground:background:mask:placement:options:)","title":"static func mask(foreground: Graphic, background: Graphic, mask: Graphic, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/offset(_:options:)","title":"func offset(CGPoint, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/offset(x:y:options:)","title":"func offset(x: CGFloat, y: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotated(_:options:)","title":"func rotated(Angle, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/scaled(_:options:)","title":"func scaled(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(width:height:options:)","title":"func sized(width: CGFloat?, height: CGFloat?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(_:options:)","title":"func sized(CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformed(translation:rotation:scale:size:options:)","title":"func transformed(translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaoffset(with:translation:lumagamma:placement:options:)","title":"func lumaOffset(with: Graphic, translation: CGPoint, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaoffset(with:x:y:lumagamma:placement:options:)","title":"func lumaOffset(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarotated(with:rotation:lumagamma:placement:options:)","title":"func lumaRotated(with: Graphic, rotation: Angle, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:scale:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, scale: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:x:y:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Transform with Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformblended(with:blendingmode:placement:alignment:translation:rotation:scale:size:options:)","title":"func transformBlended(with: Graphic, blendingMode: Graphic.BlendMode, placement: Graphic.Placement, alignment: Graphic.Alignment, translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Mirror","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredhorizontally()","title":"func mirroredHorizontally() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredvertically()","title":"func mirroredVertically() async throws -> Graphic","type":"method"},{"title":"Rotate","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedleft()","title":"func rotatedLeft() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedright()","title":"func rotatedRight() async throws -> Graphic","type":"method"},{"title":"Stack","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstacked(with:alignment:spacing:)","title":"static func hStacked(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackedfixed(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func hStackedFixed(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func hStack(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstacked(with:alignment:spacing:)","title":"static func vStacked(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackedfixed(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func vStackedFixed(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func vStack(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstacked(with:alignment:)","title":"static func zStacked(with: [Graphic], alignment: Graphic.ZStackAlignment) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/zblendstacked(with:alignment:)","title":"static func zBlendStacked(with: [Graphic.BlendedGraphic], alignment: Graphic.ZStackAlignment) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/top","title":"case top","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment","title":"Graphic.HStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/trailing","title":"case trailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment","title":"Graphic.VStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/toptrailing","title":"case topTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/trailing","title":"case trailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment","title":"Graphic.ZStackAlignment","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendedgraphic\/init(graphic:blendmode:)","title":"init(graphic: Graphic, blendMode: Graphic.BlendMode)","type":"init"}],"path":"\/documentation\/asyncgraphics\/graphic\/blendedgraphic","title":"Graphic.BlendedGraphic","type":"struct"},{"title":"Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/brightness(_:)","title":"func brightness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/darkness(_:)","title":"func darkness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contrast(_:)","title":"func contrast(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/gamma(_:)","title":"func gamma(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/inverted()","title":"func inverted() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/smoothed()","title":"func smoothed() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/opacity(_:)","title":"func opacity(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exposureoffset(_:)","title":"func exposureOffset(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(_:)","title":"func add(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/subtract(_:)","title":"func subtract(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiply(_:)","title":"func multiply(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/divide(_:)","title":"func divide(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/levels(brightness:darkness:contrast:gamma:invert:smooth:opacity:offset:)","title":"func levels(brightness: CGFloat, darkness: CGFloat, contrast: CGFloat, gamma: CGFloat, invert: Bool, smooth: Bool, opacity: CGFloat, offset: CGFloat) async throws -> Graphic","type":"method"},{"title":"Luma Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumabrightness(with:brightness:lumagamma:placement:options:)","title":"func lumaBrightness(with: Graphic, brightness: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadarkness(with:darkness:lumagamma:placement:options:)","title":"func lumaDarkness(with: Graphic, darkness: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumacontrast(with:contrast:lumagamma:placement:options:)","title":"func lumaContrast(with: Graphic, contrast: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumagamma(with:gamma:lumagamma:placement:options:)","title":"func lumaGamma(with: Graphic, gamma: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumainverted(with:lumagamma:placement:options:)","title":"func lumaInverted(with: Graphic, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasmoothed(with:lumagamma:placement:options:)","title":"func lumaSmoothed(with: Graphic, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaopacity(with:opacity:lumagamma:placement:options:)","title":"func lumaOpacity(with: Graphic, opacity: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaexposureoffset(with:offset:lumagamma:placement:options:)","title":"func lumaExposureOffset(with: Graphic, offset: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaadd(with:value:lumagamma:placement:options:)","title":"func lumaAdd(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasubtract(with:value:lumagamma:placement:options:)","title":"func lumaSubtract(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamultiply(with:value:lumagamma:placement:options:)","title":"func lumaMultiply(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadivide(with:value:lumagamma:placement:options:)","title":"func lumaDivide(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Color Shift","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/monochrome()","title":"func monochrome() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/saturated(_:)","title":"func saturated(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/hue(_:)","title":"func hue(Angle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/tinted(_:)","title":"func tinted(PixelColor) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colormap(from:to:options:)","title":"func colorMap(from: PixelColor, to: PixelColor, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Color Shift","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamonochrome(with:lumagamma:placement:options:)","title":"func lumaMonochrome(with: Graphic, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasaturated(with:saturation:lumagamma:placement:options:)","title":"func lumaSaturated(with: Graphic, saturation: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumahue(with:hue:lumagamma:placement:options:)","title":"func lumaHue(with: Graphic, hue: Angle, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatinted(with:color:lumagamma:placement:options:)","title":"func lumaTinted(with: Graphic, color: PixelColor, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Color Convert","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvert(_:channel:)","title":"func colorConvert(Graphic.ColorConversion, channel: Graphic.ColorConvertChannel) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hsvtorgb","title":"case hsvToRGB","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rgbtohsv","title":"case rgbToHSV","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion","title":"Graphic.ColorConversion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/all","title":"case all","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/first","title":"case first","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/second","title":"case second","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/third","title":"case third","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel","title":"Graphic.ColorConvertChannel","type":"enum"},{"title":"Threshold","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/threshold(_:color:backgroundcolor:options:)","title":"func threshold(CGFloat, color: PixelColor, backgroundColor: PixelColor, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Quantize","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/quantize(_:options:)","title":"func quantize(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Lookup","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookup(with:axis:samplecoordinate:options:)","title":"func lookup(with: Graphic, axis: Graphic.LookupAxis, sampleCoordinate: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lookupaxis","title":"Graphic.LookupAxis","type":"enum"},{"title":"Gradient Lookup","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientlookup(stops:gamma:options:)","title":"func gradientLookup(stops: [Graphic.GradientStop], gamma: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Channels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/channelmix(red:green:blue:alpha:)","title":"func channelMix(red: Graphic.ColorChannel, green: Graphic.ColorChannel, blue: Graphic.ColorChannel, alpha: Graphic.ColorChannel) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/alphatoluminance()","title":"func alphaToLuminance() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/alphatoluminancewithalpha()","title":"func alphaToLuminanceWithAlpha() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/luminancetoalpha()","title":"func luminanceToAlpha() async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/alpha","title":"case alpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/green","title":"case green","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/mono","title":"case mono","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/red","title":"case red","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/white","title":"case white","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/color","title":"var color: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel","title":"Graphic.ColorChannel","type":"enum"},{"title":"Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurred(radius:)","title":"func blurred(radius: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredbox(radius:samplecount:options:)","title":"func blurredBox(radius: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredcircle(radius:samplecount:brightnessrange:saturationrange:light:options:)","title":"func blurredCircle(radius: CGFloat, sampleCount: Int, brightnessRange: ClosedRange<CGFloat>, saturationRange: ClosedRange<CGFloat>, light: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredzoom(radius:position:samplecount:options:)","title":"func blurredZoom(radius: CGFloat, position: CGPoint?, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredangle(radius:angle:samplecount:options:)","title":"func blurredAngle(radius: CGFloat, angle: Angle, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredrandom(radius:options:)","title":"func blurredRandom(radius: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredbox(with:radius:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredBox(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredzoom(with:radius:position:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredZoom(with: Graphic, radius: CGFloat, position: CGPoint?, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredangle(with:radius:angle:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredrandom(with:radius:lumagamma:placement:options:)","title":"func lumaBlurredRandom(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredcircle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredCircle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredangle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredAngle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredzoom(radius:position:light:samplecount:options:)","title":"func rainbowBlurredZoom(radius: CGFloat, position: CGPoint?, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredcircle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredCircle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredangle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredzoom(with:radius:position:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredZoom(with: Graphic, radius: CGFloat, position: CGPoint?, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Pixelate","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelate(_:options:)","title":"func pixelate(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Displace","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/displaced(with:offset:origin:placement:options:)","title":"func displaced(with: Graphic, offset: CGFloat, origin: PixelColor, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Slope","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/slope(amplitude:origin:options:)","title":"func slope(amplitude: CGFloat, origin: PixelColor, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Edge","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edge(amplitude:distance:istransparent:options:)","title":"func edge(amplitude: CGFloat, distance: CGFloat, isTransparent: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorededge(amplitude:distance:istransparent:options:)","title":"func coloredEdge(amplitude: CGFloat, distance: CGFloat, isTransparent: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Sharpen","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/sharpen(_:distance:options:)","title":"func sharpen(CGFloat, distance: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Kaleidoscope","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/kaleidoscope(count:mirror:position:rotation:scale:options:)","title":"func kaleidoscope(count: Int, mirror: Bool, position: CGPoint?, rotation: Angle, scale: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Clamp","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamp(_:low:high:includealpha:options:)","title":"func clamp(Graphic.ClampType, low: CGFloat, high: CGFloat, includeAlpha: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/relative","title":"case relative","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype","title":"Graphic.ClampType","type":"enum"},{"title":"Cross","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cross(with:fraction:placement:options:)","title":"func cross(with: Graphic, fraction: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Crop","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/crop(to:options:)","title":"func crop(to: CGRect, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/column(_:options:)","title":"func column(Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/column(u:options:)","title":"func column(u: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/row(_:options:)","title":"func row(Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/row(v:options:)","title":"func row(v: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Padding","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/padding(on:_:options:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/all","title":"static let all: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/bottom","title":"static let bottom: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/horizontal","title":"static let horizontal: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/leading","title":"static let leading: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/top","title":"static let top: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/trailing","title":"static let trailing: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/vertical","title":"static let vertical: Graphic.EdgeInsets","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets","title":"Graphic.EdgeInsets","type":"struct"},{"title":"Corner Pin","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cornerpinned(topleft:topright:bottomleft:bottomright:perspective:subdivisions:backgroundcolor:)","title":"func cornerPinned(topLeft: CGPoint?, topRight: CGPoint?, bottomLeft: CGPoint?, bottomRight: CGPoint?, perspective: Bool, subdivisions: Int, backgroundColor: PixelColor) async throws -> Graphic","type":"method"},{"title":"Chroma Key","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakey(color:parameters:options:)","title":"func chromaKey(color: PixelColor, parameters: Graphic.ChromaKeyParameters, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/alphacrop","title":"var alphaCrop: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/edgedesaturation","title":"var edgeDesaturation: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/range","title":"var range: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/softness","title":"var softness: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters","title":"Graphic.ChromaKeyParameters","type":"struct"},{"title":"Person Segmentation","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/personsegmentation()","title":"func personSegmentation() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/personsegmentationmask()","title":"func personSegmentationMask() async throws -> Graphic","type":"method"},{"title":"Remap","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/remap(with:options:)","title":"func remap(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Polar","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polar(radius:width:leadingangle:trailingangle:resolution:options:)","title":"func polar(radius: CGFloat?, width: CGFloat?, leadingAngle: Angle, trailingAngle: Angle, resolution: CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Morph","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedminimum(size:)","title":"func morphedMinimum(size: CGSize) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedmaximum(size:)","title":"func morphedMaximum(size: CGSize) async throws -> Graphic","type":"method"},{"title":"Metal","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:resolution:options:)","title":"static func metal(code: String, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:options:)","title":"func metal(code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.method","title":"func metal(with: Graphic, code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.type.method","title":"static func metal(with: [Graphic], code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror","title":"Graphic.SolidMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror","title":"Graphic.DirectMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror","title":"Graphic.DualMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror","title":"Graphic.ArrayMetalError","type":"enum"},{"title":"UV","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uv(resolution:options:)","title":"static func uv(resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Reduce","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduce(by:)","title":"func reduce(by: Graphic.ReduceMethod) async throws -> PixelColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduce(by:axis:)","title":"func reduce(by: Graphic.ReduceMethod, axis: Graphic.ReduceAxis) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/average","title":"case average","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/maximum","title":"case maximum","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/minimum","title":"case minimum","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/sum","title":"case sum","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod","title":"Graphic.ReduceMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/vertical","title":"case vertical","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis","title":"Graphic.ReduceAxis","type":"enum"},{"title":"LUTs","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(url:layout:)","title":"static func readLUT(url: URL, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(data:format:layout:)","title":"static func readLUT(data: Data, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(named:format:layout:)","title":"static func readLUT(named: String, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(named:in:format:layout:)","title":"static func readLUT(named: String, in: Bundle, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/writelut(layout:)","title":"func writeLUT(layout: Graphic.LUTLayout) async throws -> Data","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(with:layout:)","title":"func applyLUT(with: Graphic, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(url:)","title":"func applyLUT(url: URL) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(named:format:)","title":"func applyLUT(named: String, format: Graphic.LUTFormat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(named:in:format:)","title":"func applyLUT(named: String, in: Bundle, format: Graphic.LUTFormat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut()","title":"func sizeOfLUT() throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(url:)","title":"static func sizeOfLUT(url: URL) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(data:format:)","title":"static func sizeOfLUT(data: Data, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(named:format:)","title":"static func sizeOfLUT(named: String, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(named:in:format:)","title":"static func sizeOfLUT(named: String, in: Bundle, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/layoutoflut()","title":"func layoutOfLUT() throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(size:)","title":"static func idealLayoutOfLUT(size: Int) -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(url:)","title":"static func idealLayoutOfLUT(url: URL) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(data:format:)","title":"static func idealLayoutOfLUT(data: Data, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(named:format:)","title":"static func idealLayoutOfLUT(named: String, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(named:in:format:)","title":"static func idealLayoutOfLUT(named: String, in: Bundle, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sampleoflut(at:layout:)","title":"func sampleOfLUT(at: Int, layout: Graphic.LUTLayout) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/identitylut(size:layout:options:)","title":"static func identityLUT(size: Int, layout: Graphic.LUTLayout, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/linear","title":"case linear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/square","title":"case square","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout","title":"Graphic.LUTLayout","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/cube","title":"case cube","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat","title":"Graphic.LUTFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/badcolorcount","title":"case badColorCount","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/corruptformat","title":"case corruptFormat","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/datatostringfailed","title":"case dataToStringFailed","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/filenotfound","title":"case fileNotFound","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/indexoutofbounds","title":"case indexOutOfBounds","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnonsquareaspectratio","title":"case resolutionIsNonSquareAspectRatio","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnotlinear","title":"case resolutionIsNotLinear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnotpoweroftwo","title":"case resolutionIsNotPowerOfTwo","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionunknown","title":"case resolutionUnknown","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizecorrupt","title":"case sizeCorrupt","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizenotapoweroftwo","title":"case sizeNotAPowerOfTwo","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizenotfound","title":"case sizeNotFound","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/toolargesize","title":"case tooLargeSize","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/toosmallsize","title":"case tooSmallSize","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/unknownformat","title":"case unknownFormat","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror","title":"Graphic.LUTError","type":"enum"},{"title":"Bits","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/bits(_:)","title":"func bits(TMBits) async throws -> Graphic","type":"method"},{"title":"Color Space","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/applycolorspace(_:)","title":"func applyColorSpace(TMColorSpace) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/assigncolorspace(_:)","title":"func assignColorSpace(TMColorSpace) -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/convertcolorspace(from:to:)","title":"func convertColorSpace(from: TMColorSpace, to: TMColorSpace) async throws -> Graphic","type":"method"},{"title":"Coordinate Space","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespace(_:rotation:fraction:options:)","title":"func coordinateSpace(Graphic.CoordinateSpaceConversion, rotation: CGVector, fraction: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/circletosquare","title":"case circleToSquare","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/cubetoequi","title":"case cubeToEqui","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/dometoequi","title":"case domeToEqui","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/equitodome","title":"case equiToDome","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/squaretocircle","title":"case squareToCircle","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/coordinatespaceconversion","title":"Graphic.CoordinateSpaceConversion","type":"enum"},{"title":"Inspect","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/inspect(scale:offset:borderwidth:borderopacity:borderfaderange:placement:containerresolution:contentresolution:checkertransparency:checkersize:checkeropacity:options:)","title":"func inspect(scale: CGFloat, offset: CGPoint, borderWidth: CGFloat, borderOpacity: CGFloat, borderFadeRange: ClosedRange<CGFloat>, placement: Graphic.Placement, containerResolution: CGSize, contentResolution: CGSize, checkerTransparency: Bool, checkerSize: CGFloat, checkerOpacity: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Options","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/bit16","title":"static let bit16: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/bit32","title":"static let bit32: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/displayp3","title":"static let displayP3: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/interpolatenearest","title":"static let interpolateNearest: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/pixelated","title":"static let pixelated: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/purealpha","title":"static let pureAlpha: Graphic.ContentOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions","title":"Graphic.ContentOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/edgeloop","title":"static let edgeLoop: Graphic.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/edgemirror","title":"static let edgeMirror: Graphic.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/edgestretch","title":"static let edgeStretch: Graphic.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/interpolatenearest","title":"static let interpolateNearest: Graphic.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/purealpha","title":"static let pureAlpha: Graphic.EffectOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions","title":"Graphic.EffectOptions","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/*(_:_:)","title":"static func * (Graphic, Graphic) async throws -> Graphic","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic\/+(_:_:)","title":"static func + (Graphic, Graphic) async throws -> Graphic","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic\/-(_:_:)","title":"static func - (Graphic, Graphic) async throws -> Graphic","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic\/\/(_:_:)","title":"static func \/ (Graphic, Graphic) async throws -> Graphic","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/imageforswiftui","title":"var imageForSwiftUI: Image","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducetocolumn(by:)","title":"func reduceToColumn(by: Graphic.ReduceMethod) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducetorow(by:)","title":"func reduceToRow(by: Graphic.ReduceMethod) async throws -> Graphic","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/toptrailing","title":"case topTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/trailing","title":"case trailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/alignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/alignment","title":"Graphic.Alignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/box","title":"case box","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/gaussian","title":"case gaussian","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/random","title":"case random","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/blurtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/blurtype","title":"Graphic.BlurType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/box","title":"case box","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/random","title":"case random","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lumablurtype","title":"Graphic.LumaBlurType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/circle","title":"case circle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurtype","title":"Graphic.LumaRainbowBlurType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/add","title":"case add","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/addwithalpha","title":"case addWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/average","title":"case average","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/darken","title":"case darken","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/difference","title":"case difference","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/divide","title":"case divide","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/lighten","title":"case lighten","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/maximum","title":"case maximum","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/minimum","title":"case minimum","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/multiply","title":"case multiply","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/over","title":"case over","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/power","title":"case power","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/screen","title":"case screen","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/subtract","title":"case subtract","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/subtractwithalpha","title":"case subtractWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/under","title":"case under","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/multiblendmode","title":"Graphic.MultiBlendMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/fit","title":"case fit","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/fixed","title":"case fixed","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/stretch","title":"case stretch","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/placement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/placement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/placement\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/placement","title":"Graphic.Placement","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/viewinterpolation\/bilinear","title":"case bilinear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/viewinterpolation\/lanczos","title":"case lanczos","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/viewinterpolation\/linear","title":"case linear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/viewinterpolation\/nearestneighbor","title":"case nearestNeighbor","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/viewinterpolation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/viewinterpolation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/viewinterpolation","title":"Graphic.ViewInterpolation","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic\/==(_:_:)","title":"static func == (Graphic, Graphic) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic","title":"Graphic","type":"struct"},{"children":[{"title":"Data","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture","title":"let texture: MTLTexture","type":"property"},{"title":"Metadata","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/bits","title":"let bits: TMBits","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/colorspace","title":"let colorSpace: TMColorSpace","type":"property"},{"title":"Resolution","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/width","title":"var width: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/height","title":"var height: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/depth","title":"var depth: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/resolution","title":"var resolution: Size3D","type":"property"},{"title":"Bits","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/bits(_:)","title":"func bits(TMBits) async throws -> Graphic3D","type":"method"},{"title":"Options","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/bit16","title":"static let bit16: Graphic3D.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/bit32","title":"static let bit32: Graphic3D.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/pixelated","title":"static let pixelated: Graphic3D.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/purealpha","title":"static let pureAlpha: Graphic3D.ContentOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions","title":"Graphic3D.ContentOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/edgemirror","title":"static let edgeMirror: Graphic3D.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/edgestretch","title":"static let edgeStretch: Graphic3D.EffectOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions","title":"Graphic3D.EffectOptions","type":"struct"},{"title":"Voxels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/firstvoxelcolor","title":"var firstVoxelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/averagevoxelcolor","title":"var averageVoxelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/voxelcolors","title":"var voxelColors: [[[PixelColor]]]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/isvoxelsequal(to:)","title":"func isVoxelsEqual(to: Graphic3D) async throws -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/voxels(_:options:)","title":"static func voxels([[[PixelColor]]], options: Graphic3D.ContentOptions) throws -> Graphic3D","type":"method"},{"title":"Channels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/channels","title":"var channels: [CGFloat]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/channels(_:resolution:)-79xqi","title":"static func channels([UInt8], resolution: Size3D) throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/channels(_:resolution:)-5dz0k","title":"static func channels([Float], resolution: Size3D) throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/channels(_:resolution:)-5dz0k","title":"static func channels([Float], resolution: Size3D) throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/channels(pointer:resolution:)-8w75m","title":"static func channels(pointer: UnsafePointer<UInt8>, resolution: Size3D) throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/channels(pointer:resolution:)-r9wl","title":"static func channels(pointer: UnsafePointer<Float>, resolution: Size3D) throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/channels(pointer:resolution:)-r9wl","title":"static func channels(pointer: UnsafePointer<Float>, resolution: Size3D) throws -> Graphic3D","type":"method"},{"title":"Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture(_:)","title":"static func texture(MTLTexture) throws -> Graphic3D","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/unsupportedtype","title":"case unsupportedType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror","title":"Graphic3D.Texture3DError","type":"enum"},{"title":"Color","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/color(_:resolution:options:)","title":"static func color(PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Box","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/box(size:origin:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func box(size: Size3D?, origin: Point3D, cornerRadius: Double, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/box(size:position:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func box(size: Size3D?, position: Point3D?, cornerRadius: Double, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacebox(size:origin:cornerradius:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceBox(size: Size3D?, origin: Point3D, cornerRadius: Double, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacebox(size:position:cornerradius:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceBox(size: Size3D?, position: Point3D?, cornerRadius: Double, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Sphere","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sphere(radius:position:color:backgroundcolor:resolution:options:)","title":"static func sphere(radius: Double?, position: Point3D?, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacesphere(radius:position:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceSphere(radius: Double?, position: Point3D?, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Cone","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/cone(axis:length:leadingradius:trailingradius:position:color:backgroundcolor:resolution:options:)","title":"static func cone(axis: Graphic3D.Axis, length: Double?, leadingRadius: Double?, trailingRadius: Double?, position: Point3D?, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacecone(axis:length:leadingradius:trailingradius:position:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceCone(axis: Graphic3D.Axis, length: Double?, leadingRadius: Double?, trailingRadius: Double?, position: Point3D?, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Cylinder","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/cylinder(axis:length:radius:cornerradius:position:color:backgroundcolor:resolution:options:)","title":"static func cylinder(axis: Graphic3D.Axis, length: Double?, radius: Double?, cornerRadius: Double, position: Point3D?, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacecylinder(axis:length:radius:cornerradius:position:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceCylinder(axis: Graphic3D.Axis, length: Double?, radius: Double?, cornerRadius: Double, position: Point3D?, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Tetrahedron","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/tetrahedron(axis:radius:position:color:backgroundcolor:resolution:options:)","title":"static func tetrahedron(axis: Graphic3D.Axis, radius: Double?, position: Point3D?, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacetetrahedron(axis:radius:position:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceTetrahedron(axis: Graphic3D.Axis, radius: Double?, position: Point3D?, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Torus","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/torus(axis:radius:revolvingradius:position:color:backgroundcolor:resolution:options:)","title":"static func torus(axis: Graphic3D.Axis, radius: Double?, revolvingRadius: Double?, position: Point3D?, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacetorus(axis:radius:revolvingradius:position:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceTorus(axis: Graphic3D.Axis, radius: Double?, revolvingRadius: Double?, position: Point3D?, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Gradient","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient(direction:stops:position:scale:offset:extend:gamma:resolution:options:)","title":"static func gradient(direction: Graphic3D.Gradient3DDirection, stops: [Graphic.GradientStop], position: Point3D?, scale: CGFloat, offset: CGFloat, extend: Graphic.GradientExtend, gamma: CGFloat, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Noise","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/noise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func noise(offset: Point3D, depth: Double, scale: Double, octaves: Int, seed: Int, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/colorednoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func coloredNoise(offset: Point3D, depth: Double, scale: Double, octaves: Int, seed: Int, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/randomnoise(seed:resolution:options:)","title":"static func randomNoise(seed: Int, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/randomcolorednoise(seed:resolution:options:)","title":"static func randomColoredNoise(seed: Int, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/transparantnoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func transparantNoise(offset: Point3D, depth: Double, scale: Double, octaves: Int, seed: Int, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Metal","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/metal(code:resolution:options:)","title":"static func metal(code: String, resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Map","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/uvw(resolution:options:)","title":"static func uvw(resolution: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blend(with:blendingmode:placement:options:)","title":"func blend(with: Graphic3D, blendingMode: Graphic.BlendMode, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blended(with:blendingmode:placement:options:)","title":"func blended(with: Graphic3D, blendingMode: Graphic.BlendMode, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/translated(_:options:)","title":"func translated(Point3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/translated(x:y:z:options:)","title":"func translated(x: Double, y: Double, z: Double, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/rotated(_:options:)","title":"func rotated(Point3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/rotated(x:y:z:options:)","title":"func rotated(x: Angle, y: Angle, z: Angle, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/scaled(_:options:)-7kcho","title":"func scaled(Double, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/scaled(_:options:)-8aoeu","title":"func scaled(Point3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/scaled(x:y:z:options:)","title":"func scaled(x: Double, y: Double, z: Double, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/transformed(translation:rotation:scale:scalesize:options:)","title":"func transformed(translation: Point3D, rotation: Point3D, scale: Double, scaleSize: Point3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Luma Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumaoffset(with:translation:lumagamma:placement:options:)","title":"func lumaOffset(with: Graphic3D, translation: Point3D, lumaGamma: Double, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarotated(with:rotation:lumagamma:placement:options:)","title":"func lumaRotated(with: Graphic3D, rotation: Point3D, lumaGamma: Double, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumascaled(with:scale:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic3D, scale: Double, lumaGamma: Double, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Stack","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"func hStack(with: Graphic3D, alignment: Graphic3D.HStackAlignment, spacing: Double, padding: Double, backgroundColor: PixelColor, resolution: Size3D?) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"func vStack(with: Graphic3D, alignment: Graphic3D.VStackAlignment, spacing: Double, padding: Double, backgroundColor: PixelColor, resolution: Size3D?) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"func dStack(with: Graphic3D, alignment: Graphic3D.DStackAlignment, spacing: Double, padding: Double, backgroundColor: PixelColor, resolution: Size3D?) async throws -> Graphic3D","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/bottomfar","title":"case bottomFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/bottomnear","title":"case bottomNear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/topfar","title":"case topFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/topnear","title":"case topNear","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment","title":"Graphic3D.HStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/leadingfar","title":"case leadingFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/leadingnear","title":"case leadingNear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/trailing","title":"case trailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/trailingfar","title":"case trailingFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/trailingnear","title":"case trailingNear","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment","title":"Graphic3D.VStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/toptrailing","title":"case topTrailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment","title":"Graphic3D.DStackAlignment","type":"enum"},{"title":"Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/brightness(_:)","title":"func brightness(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/darkness(_:)","title":"func darkness(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contrast(_:)","title":"func contrast(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gamma(_:)","title":"func gamma(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/inverted()","title":"func inverted() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/smoothed()","title":"func smoothed() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/opacity(_:)","title":"func opacity(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/exposureoffset(_:)","title":"func exposureOffset(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/levels(brightness:darkness:contrast:gamma:invert:smooth:opacity:offset:)","title":"func levels(brightness: CGFloat, darkness: CGFloat, contrast: CGFloat, gamma: CGFloat, invert: Bool, smooth: Bool, opacity: CGFloat, offset: CGFloat) async throws -> Graphic3D","type":"method"},{"title":"Luma Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumabrightness(with:brightness:lumagamma:placement:options:)","title":"func lumaBrightness(with: Graphic3D, brightness: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumadarkness(with:darkness:lumagamma:placement:options:)","title":"func lumaDarkness(with: Graphic3D, darkness: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumacontrast(with:contrast:lumagamma:placement:options:)","title":"func lumaContrast(with: Graphic3D, contrast: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumagamma(with:gamma:lumagamma:placement:options:)","title":"func lumaGamma(with: Graphic3D, gamma: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumainverted(with:lumagamma:placement:options:)","title":"func lumaInverted(with: Graphic3D, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumasmoothed(with:lumagamma:placement:options:)","title":"func lumaSmoothed(with: Graphic3D, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumaopacity(with:opacity:lumagamma:placement:options:)","title":"func lumaOpacity(with: Graphic3D, opacity: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumaexposureoffset(with:offset:lumagamma:placement:options:)","title":"func lumaExposureOffset(with: Graphic3D, offset: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumaadd(with:value:lumagamma:placement:options:)","title":"func lumaAdd(with: Graphic3D, value: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumasubtract(with:value:lumagamma:placement:options:)","title":"func lumaSubtract(with: Graphic3D, value: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumamultiply(with:value:lumagamma:placement:options:)","title":"func lumaMultiply(with: Graphic3D, value: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumadivide(with:value:lumagamma:placement:options:)","title":"func lumaDivide(with: Graphic3D, value: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Color Shift","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/saturated(_:)","title":"func saturated(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/monochrome()","title":"func monochrome() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hue(_:)","title":"func hue(Angle) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/tinted(_:)","title":"func tinted(PixelColor) async throws -> Graphic3D","type":"method"},{"title":"Luma Color Shift","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumamonochrome(with:lumagamma:placement:options:)","title":"func lumaMonochrome(with: Graphic3D, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumasaturated(with:saturation:lumagamma:placement:options:)","title":"func lumaSaturated(with: Graphic3D, saturation: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumahue(with:hue:lumagamma:placement:options:)","title":"func lumaHue(with: Graphic3D, hue: Angle, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumatinted(with:color:lumagamma:placement:options:)","title":"func lumaTinted(with: Graphic3D, color: PixelColor, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurredbox(radius:samplecount:options:)","title":"func blurredBox(radius: CGFloat, sampleCount: Int, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurredzoom(radius:position:samplecount:options:)","title":"func blurredZoom(radius: CGFloat, position: Point3D?, sampleCount: Int, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurreddirection(radius:direction:samplecount:options:)","title":"func blurredDirection(radius: CGFloat, direction: Point3D, sampleCount: Int, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurredrandom(radius:options:)","title":"func blurredRandom(radius: CGFloat, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Luma Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablurredbox(with:radius:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredBox(with: Graphic3D, radius: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablurredzoom(with:radius:position:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredZoom(with: Graphic3D, radius: CGFloat, position: Point3D?, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablurredrandom(with:radius:lumagamma:placement:options:)","title":"func lumaBlurredRandom(with: Graphic3D, radius: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Luma Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblurredcircle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredCircle(with: Graphic3D, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblurredzoom(with:radius:position:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredZoom(with: Graphic3D, radius: CGFloat, position: Point3D?, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Displace","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/displaced(with:offset:origin:placement:options:)","title":"func displaced(with: Graphic3D, offset: Double, origin: PixelColor, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Edge","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/edge(amplitude:distance:istransparent:options:)","title":"func edge(amplitude: Double, distance: Double, isTransparent: Bool, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/colorededge(amplitude:distance:istransparent:options:)","title":"func coloredEdge(amplitude: Double, distance: Double, isTransparent: Bool, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Slope","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/slope(amplitude:origin:options:)","title":"func slope(amplitude: CGFloat, origin: PixelColor, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Threshold","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/threshold(_:color:backgroundcolor:options:)","title":"func threshold(CGFloat, color: PixelColor, backgroundColor: PixelColor, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Cross","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/cross(with:fraction:placement:options:)","title":"func cross(with: Graphic3D, fraction: CGFloat, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Channel Mix","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/channelmix(red:green:blue:alpha:)","title":"func channelMix(red: Graphic.ColorChannel, green: Graphic.ColorChannel, blue: Graphic.ColorChannel, alpha: Graphic.ColorChannel) async throws -> Graphic3D","type":"method"},{"title":"Clamp","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/clamp(_:low:high:includealpha:options:)","title":"func clamp(Graphic.ClampType, low: CGFloat, high: CGFloat, includeAlpha: Bool, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Color Map","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/colormap(from:to:options:)","title":"func colorMap(from: PixelColor, to: PixelColor, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Lookup","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup(with:axis:samplecoordinate:options:)","title":"func lookup(with: Graphic3D, axis: Graphic3D.Lookup3DAxis, sampleCoordinate: CGFloat, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Gradient Lookup","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradientlookup(stops:gamma:options:)","title":"func gradientLookup(stops: [Graphic.GradientStop], gamma: CGFloat, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Quantize","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/quantize(_:options:)","title":"func quantize(CGFloat, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Sample","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/add(axis:brightness:)","title":"func add(axis: Graphic3D.Axis, brightness: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/average(axis:)","title":"func average(axis: Graphic3D.Axis) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sample(fraction:)","title":"func sample(fraction: Double) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sample(index:)","title":"func sample(index: Int) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/samples(progress:)","title":"func samples(progress: ((Graphic3D.SampleProgress) -> ())?) async throws -> [Graphic]","type":"method"},{"title":"Trace","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/trace(axis:alphathreshold:)","title":"func trace(axis: Graphic3D.Axis, alphaThreshold: CGFloat) async throws -> Graphic","type":"method"},{"title":"Orbit","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/orbit(backgroundcolor:rotationx:rotationy:resolution:)","title":"func orbit(backgroundColor: PixelColor, rotationX: Angle, rotationY: Angle, resolution: CGSize) async throws -> Graphic","type":"method"},{"title":"Conversion","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/luminancetoalpha()","title":"func luminanceToAlpha() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/alphatoluminance()","title":"func alphaToLuminance() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/alphatoluminancewithalpha()","title":"func alphaToLuminanceWithAlpha() async throws -> Graphic3D","type":"method"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sampleprogress\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sampleprogress\/fraction","title":"var fraction: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sampleprogress\/index","title":"let index: Int","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/sampleprogress","title":"Graphic3D.SampleProgress","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/*(_:_:)","title":"static func * (Graphic3D, Graphic3D) async throws -> Graphic3D","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/+(_:_:)","title":"static func + (Graphic3D, Graphic3D) async throws -> Graphic3D","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/-(_:_:)","title":"static func - (Graphic3D, Graphic3D) async throws -> Graphic3D","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/\/(_:_:)","title":"static func \/ (Graphic3D, Graphic3D) async throws -> Graphic3D","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/voxelcount","title":"var voxelCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumaoffset(with:x:y:z:lumagamma:placement:options:)","title":"func lumaOffset(with: Graphic3D, x: Double, y: Double, z: Double, lumaGamma: Double, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumascaled(with:x:y:z:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic3D, x: Double, y: Double, z: Double, lumaGamma: Double, placement: Graphic.Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/channels(_:resolution:)-1x2np","title":"static func channels([UInt8], resolution: Size3D) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/construct(graphics:)","title":"static func construct(graphics: [Graphic]) async throws -> Graphic3D","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/x","title":"case x","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/y","title":"case y","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/z","title":"case z","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/axis","title":"Graphic3D.Axis","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/box","title":"case box","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/direction","title":"case direction","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/random","title":"case random","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/blur3dtype","title":"Graphic3D.Blur3DType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/radial","title":"case radial","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/x","title":"case x","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/y","title":"case y","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/z","title":"case z","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/gradient3ddirection","title":"Graphic3D.Gradient3DDirection","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/x","title":"case x","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/y","title":"case y","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/z","title":"case z","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/lookup3daxis","title":"Graphic3D.Lookup3DAxis","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/box","title":"case box","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/random","title":"case random","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/lumablur3dtype","title":"Graphic3D.LumaBlur3DType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/circle","title":"case circle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/lumarainbowblur3dtype","title":"Graphic3D.LumaRainbowBlur3DType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror","title":"Graphic3D.SolidMetal3DError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/==(_:_:)","title":"static func == (Graphic3D, Graphic3D) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d","title":"Graphic3D","type":"struct"},{"title":"Codable Graphics","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/angle","title":"var angle: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/isstroked","title":"var isStroked: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/length","title":"var length: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/linewidth","title":"var lineWidth: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/position","title":"var position: GraphicMetadata<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/edit(variant:)","title":"func edit(variant: CodableGraphic.Content.Shape.Arc.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/render(at:options:)","title":"func render(at: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/isstroked","title":"case isStroked","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/length","title":"case length","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/linewidth","title":"case lineWidth","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/radius","title":"case radius","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/property","title":"CodableGraphic.Content.Shape.Arc.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/length120","title":"case length120","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/length180","title":"case length180","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/length45","title":"case length45","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/length90","title":"case length90","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variant","title":"CodableGraphic.Content.Shape.Arc.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/arc","title":"CodableGraphic.Content.Shape.Arc","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/isstroked","title":"var isStroked: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/linewidth","title":"var lineWidth: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/position","title":"var position: GraphicMetadata<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/edit(variant:)","title":"func edit(variant: CodableGraphic.Content.Shape.Circle.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/render(at:options:)","title":"func render(at: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/isstroked","title":"case isStroked","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/linewidth","title":"case lineWidth","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/radius","title":"case radius","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/property","title":"CodableGraphic.Content.Shape.Circle.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variant","title":"CodableGraphic.Content.Shape.Circle.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/circle","title":"CodableGraphic.Content.Shape.Circle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/linecap","title":"var lineCap: GraphicEnumMetadata<Graphic.LineCap>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/linewidth","title":"var lineWidth: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/edit(variant:)","title":"func edit(variant: CodableGraphic.Content.Shape.Line.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/render(at:options:)","title":"func render(at: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/leadingpoint","title":"case leadingPoint","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/linecap","title":"case lineCap","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/linewidth","title":"case lineWidth","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/trailingpoint","title":"case trailingPoint","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/property","title":"CodableGraphic.Content.Shape.Line.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variant\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variant\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variant","title":"CodableGraphic.Content.Shape.Line.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/line","title":"CodableGraphic.Content.Shape.Line","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/cornerradius","title":"var cornerRadius: GraphicMetadata<Double>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/count","title":"var count: GraphicMetadata<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/position","title":"var position: GraphicMetadata<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/rotation","title":"var rotation: GraphicMetadata<Angle>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/edit(variant:)","title":"func edit(variant: CodableGraphic.Content.Shape.Polygon.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/render(at:options:)","title":"func render(at: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/cornerradius","title":"case cornerRadius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/count","title":"case count","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/rotation","title":"case rotation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/property","title":"CodableGraphic.Content.Shape.Polygon.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/diamond","title":"case diamond","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/hexagon","title":"case hexagon","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/pentagon","title":"case pentagon","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/triangle","title":"case triangle","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variant","title":"CodableGraphic.Content.Shape.Polygon.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/polygon","title":"CodableGraphic.Content.Shape.Polygon","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/cornerradius","title":"var cornerRadius: GraphicMetadata<Double>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/isstroked","title":"var isStroked: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/linewidth","title":"var lineWidth: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/position","title":"var position: GraphicMetadata<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/size","title":"var size: GraphicMetadata<CGSize>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/edit(variant:)","title":"func edit(variant: CodableGraphic.Content.Shape.Rectangle.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/render(at:options:)","title":"func render(at: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/cornerradius","title":"case cornerRadius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/isstroked","title":"case isStroked","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/linewidth","title":"case lineWidth","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/size","title":"case size","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/property","title":"CodableGraphic.Content.Shape.Rectangle.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variant\/regular","title":"case regular","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variant\/rounded","title":"case rounded","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variant","title":"CodableGraphic.Content.Shape.Rectangle.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/rectangle","title":"CodableGraphic.Content.Shape.Rectangle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/cornerradius","title":"var cornerRadius: GraphicMetadata<Double>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/count","title":"var count: GraphicMetadata<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/innerradius","title":"var innerRadius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/outerradius","title":"var outerRadius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/position","title":"var position: GraphicMetadata<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/rotation","title":"var rotation: GraphicMetadata<Angle>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/edit(variant:)","title":"func edit(variant: CodableGraphic.Content.Shape.Star.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/render(at:options:)","title":"func render(at: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/cornerradius","title":"case cornerRadius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/count","title":"case count","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/innerradius","title":"case innerRadius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/outerradius","title":"case outerRadius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/rotation","title":"case rotation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/property","title":"CodableGraphic.Content.Shape.Star.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variant\/regular","title":"case regular","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variant\/rounded","title":"case rounded","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variant","title":"CodableGraphic.Content.Shape.Star.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape\/star","title":"CodableGraphic.Content.Shape.Star","type":"class"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/shape","title":"CodableGraphic.Content.Shape","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/color","title":"var color: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/edit(variant:)","title":"func edit(variant: CodableGraphic.Content.Solid.Color.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/render(at:options:)","title":"func render(at: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/property\/color","title":"case color","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/property","title":"CodableGraphic.Content.Solid.Color.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant\/black","title":"case black","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant\/white","title":"case white","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variant","title":"CodableGraphic.Content.Solid.Color.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/color","title":"CodableGraphic.Content.Solid.Color","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/colorstops","title":"var colorStops: GraphicMetadata<[Graphic.GradientStop]>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/direction","title":"var direction: GraphicEnumMetadata<Graphic.GradientDirection>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/extend","title":"var extend: GraphicEnumMetadata<Graphic.GradientExtend>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/gamma","title":"var gamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/offset","title":"var offset: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/position","title":"var position: GraphicMetadata<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/scale","title":"var scale: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/edit(variant:)","title":"func edit(variant: CodableGraphic.Content.Solid.Gradient.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/render(at:options:)","title":"func render(at: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/colorstops","title":"case colorStops","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/direction","title":"case direction","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/extend","title":"case extend","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/offset","title":"case offset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/scale","title":"case scale","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/property","title":"CodableGraphic.Content.Solid.Gradient.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/radial","title":"case radial","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variant","title":"CodableGraphic.Content.Solid.Gradient.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/gradient","title":"CodableGraphic.Content.Solid.Gradient","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/depthoffset","title":"var depthOffset: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/iscolored","title":"var isColored: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/israndom","title":"var isRandom: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/octaves","title":"var octaves: GraphicMetadata<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/offset","title":"var offset: GraphicMetadata<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/scale","title":"var scale: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/seed","title":"var seed: GraphicMetadata<Int>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/edit(variant:)","title":"func edit(variant: CodableGraphic.Content.Solid.Noise.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/isvisible(property:at:)","title":"func isVisible(property: CodableGraphic.Content.Solid.Noise.Property, at: CGSize) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/render(at:options:)","title":"func render(at: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/depthoffset","title":"case depthOffset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/iscolored","title":"case isColored","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/israndom","title":"case isRandom","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/octaves","title":"case octaves","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/offset","title":"case offset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/seed","title":"case seed","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/property","title":"CodableGraphic.Content.Solid.Noise.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/detailed","title":"case detailed","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/detailedcolored","title":"case detailedColored","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/random","title":"case random","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/randomcolored","title":"case randomColored","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/smooth","title":"case smooth","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/smoothcolored","title":"case smoothColored","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variant","title":"CodableGraphic.Content.Solid.Noise.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid\/noise","title":"CodableGraphic.Content.Solid.Noise","type":"class"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content\/solid","title":"CodableGraphic.Content.Solid","type":"struct"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/content","title":"CodableGraphic.Content","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/alpha","title":"var alpha: GraphicEnumMetadata<Graphic.ColorChannel>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/blue","title":"var blue: GraphicEnumMetadata<Graphic.ColorChannel>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/green","title":"var green: GraphicEnumMetadata<Graphic.ColorChannel>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/red","title":"var red: GraphicEnumMetadata<Graphic.ColorChannel>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.ChannelMix.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/property\/alpha","title":"case alpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/property\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/property\/green","title":"case green","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/property\/red","title":"case red","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/property","title":"CodableGraphic.Effect.Color.ChannelMix.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant\/bluered","title":"case blueRed","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant\/greenblue","title":"case greenBlue","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant\/redgreen","title":"case redGreen","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variant","title":"CodableGraphic.Effect.Color.ChannelMix.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/channelmix","title":"CodableGraphic.Effect.Color.ChannelMix","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/alphacrop","title":"var alphaCrop: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/color","title":"var color: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/edgedesaturation","title":"var edgeDesaturation: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/range","title":"var range: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/softness","title":"var softness: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.ChromaKey.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/parameters(at:)","title":"func parameters(at: CGSize) -> Graphic.ChromaKeyParameters","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property\/alphacrop","title":"case alphaCrop","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property\/color","title":"case color","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property\/edgedesaturation","title":"case edgeDesaturation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property\/range","title":"case range","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property\/softness","title":"case softness","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/property","title":"CodableGraphic.Effect.Color.ChromaKey.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variant\/bluescreen","title":"case blueScreen","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variant\/greenscreen","title":"case greenScreen","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variant","title":"CodableGraphic.Effect.Color.ChromaKey.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/chromakey","title":"CodableGraphic.Effect.Color.ChromaKey","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/high","title":"var high: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/includealpha","title":"var includeAlpha: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/low","title":"var low: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/style","title":"var style: GraphicEnumMetadata<Graphic.ClampType>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.Clamp.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/property\/high","title":"case high","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/property\/includealpha","title":"case includeAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/property\/low","title":"case low","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/property\/style","title":"case style","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/property","title":"CodableGraphic.Effect.Color.Clamp.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/relative","title":"case relative","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variant","title":"CodableGraphic.Effect.Color.Clamp.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/clamp","title":"CodableGraphic.Effect.Color.Clamp","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/channel","title":"var channel: GraphicEnumMetadata<Graphic.ColorConvertChannel>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/conversion","title":"var conversion: GraphicEnumMetadata<Graphic.ColorConversion>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.ColorConvert.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/property\/channel","title":"case channel","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/property\/conversion","title":"case conversion","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/property","title":"CodableGraphic.Effect.Color.ColorConvert.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variant\/hsvtorgb","title":"case hsvToRGB","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variant\/rgbtohsv","title":"case rgbToHSV","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variant","title":"CodableGraphic.Effect.Color.ColorConvert.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorconvert","title":"CodableGraphic.Effect.Color.ColorConvert","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.ColorMap.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/property","title":"CodableGraphic.Effect.Color.ColorMap.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant\/green","title":"case green","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant\/red","title":"case red","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variant","title":"CodableGraphic.Effect.Color.ColorMap.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colormap","title":"CodableGraphic.Effect.Color.ColorMap","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/hue","title":"var hue: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/saturation","title":"var saturation: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/tintcolor","title":"var tintColor: GraphicMetadata<PixelColor>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.ColorShift.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/property\/hue","title":"case hue","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/property\/saturation","title":"case saturation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/property\/tintcolor","title":"case tintColor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/property","title":"CodableGraphic.Effect.Color.ColorShift.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/hue120","title":"case hue120","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/hue240","title":"case hue240","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/monochrome","title":"case monochrome","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/saturated","title":"case saturated","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variant","title":"CodableGraphic.Effect.Color.ColorShift.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/colorshift","title":"CodableGraphic.Effect.Color.ColorShift","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/colorstops","title":"var colorStops: GraphicMetadata<[Graphic.GradientStop]>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/gamma","title":"var gamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.GradientLookup.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/property\/colorstops","title":"case colorStops","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/property\/gamma","title":"case gamma","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/property","title":"CodableGraphic.Effect.Color.GradientLookup.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant\/fire","title":"case fire","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant\/ice","title":"case ice","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant\/rainbow","title":"case rainbow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variant","title":"CodableGraphic.Effect.Color.GradientLookup.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/gradientlookup","title":"CodableGraphic.Effect.Color.GradientLookup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/brightness","title":"var brightness: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/contrast","title":"var contrast: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/darkness","title":"var darkness: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/gamma","title":"var gamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/isinverted","title":"var isInverted: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/issmooth","title":"var isSmooth: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/offset","title":"var offset: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/opacity","title":"var opacity: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.Levels.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/brightness","title":"case brightness","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/contrast","title":"case contrast","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/darkness","title":"case darkness","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/isinverted","title":"case isInverted","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/issmooth","title":"case isSmooth","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/offset","title":"case offset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/opacity","title":"case opacity","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/property","title":"CodableGraphic.Effect.Color.Levels.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/bright","title":"case bright","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/contrast","title":"case contrast","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/dark","title":"case dark","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/dim","title":"case dim","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/gammadouble","title":"case gammaDouble","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/gammahalf","title":"case gammaHalf","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/inverted","title":"case inverted","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/semitransparent","title":"case semiTransparent","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/smooth","title":"case smooth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variant","title":"CodableGraphic.Effect.Color.Levels.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/levels","title":"CodableGraphic.Effect.Color.Levels","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/ismask","title":"var isMask: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.PersonSegmentation.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/property\/ismask","title":"case isMask","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/property","title":"CodableGraphic.Effect.Color.PersonSegmentation.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variant\/mask","title":"case mask","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variant\/transparent","title":"case transparent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variant","title":"CodableGraphic.Effect.Color.PersonSegmentation.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/personsegmentation","title":"CodableGraphic.Effect.Color.PersonSegmentation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/fraction","title":"var fraction: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.Quantize.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/property\/fraction","title":"case fraction","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/property","title":"CodableGraphic.Effect.Color.Quantize.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant\/eight","title":"case eight","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant\/half","title":"case half","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant\/quarter","title":"case quarter","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variant","title":"CodableGraphic.Effect.Color.Quantize.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/quantize","title":"CodableGraphic.Effect.Color.Quantize","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/amplitude","title":"var amplitude: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/origincolor","title":"var originColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.Slope.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/property\/amplitude","title":"case amplitude","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/property\/origincolor","title":"case originColor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/property","title":"CodableGraphic.Effect.Color.Slope.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/one","title":"case one","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/onehundred","title":"case oneHundred","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/onethousand","title":"case oneThousand","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/ten","title":"case ten","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variant","title":"CodableGraphic.Effect.Color.Slope.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/slope","title":"CodableGraphic.Effect.Color.Slope","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/fraction","title":"var fraction: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Color.Threshold.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/property\/fraction","title":"case fraction","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/property","title":"CodableGraphic.Effect.Color.Threshold.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant\/high","title":"case high","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant\/low","title":"case low","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant\/mid","title":"case mid","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variant","title":"CodableGraphic.Effect.Color.Threshold.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color\/threshold","title":"CodableGraphic.Effect.Color.Threshold","type":"class"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/color","title":"CodableGraphic.Effect.Color","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/alignment","title":"var alignment: GraphicEnumMetadata<Graphic.Alignment>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/blendingmode","title":"var blendingMode: GraphicEnumMetadata<Graphic.BlendMode>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Modifier.Blend.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/render(with:modifier:options:)","title":"func render(with: Graphic, modifier: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/property\/alignment","title":"case alignment","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/property\/blendingmode","title":"case blendingMode","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/property\/placement","title":"case placement","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/property","title":"CodableGraphic.Effect.Modifier.Blend.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variant","title":"CodableGraphic.Effect.Modifier.Blend.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/blend","title":"CodableGraphic.Effect.Modifier.Blend","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/fraction","title":"var fraction: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Modifier.Cross.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/render(with:modifier:options:)","title":"func render(with: Graphic, modifier: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/property\/fraction","title":"case fraction","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/property\/placement","title":"case placement","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/property","title":"CodableGraphic.Effect.Modifier.Cross.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variant","title":"CodableGraphic.Effect.Modifier.Cross.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/cross","title":"CodableGraphic.Effect.Modifier.Cross","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/offset","title":"var offset: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/origin","title":"var origin: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Modifier.Displace.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/render(with:modifier:options:)","title":"func render(with: Graphic, modifier: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/property\/offset","title":"case offset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/property\/origin","title":"case origin","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/property\/placement","title":"case placement","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/property","title":"CodableGraphic.Effect.Modifier.Displace.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variant","title":"CodableGraphic.Effect.Modifier.Displace.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/displace","title":"CodableGraphic.Effect.Modifier.Displace","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/axis","title":"var axis: GraphicEnumMetadata<Graphic.LookupAxis>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/samplecoordinate","title":"var sampleCoordinate: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Modifier.Lookup.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/render(with:modifier:options:)","title":"func render(with: Graphic, modifier: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/property\/axis","title":"case axis","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/property\/samplecoordinate","title":"case sampleCoordinate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/property","title":"CodableGraphic.Effect.Modifier.Lookup.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variant","title":"CodableGraphic.Effect.Modifier.Lookup.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lookup","title":"CodableGraphic.Effect.Modifier.Lookup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/lumagamma","title":"var lumaGamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/position","title":"var position: GraphicMetadata<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/rotation","title":"var rotation: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/samplecount","title":"var sampleCount: GraphicMetadata<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/style","title":"var style: GraphicEnumMetadata<Graphic.LumaBlurType>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Modifier.LumaBlur.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/isvisible(property:at:)","title":"func isVisible(property: CodableGraphic.Effect.Modifier.LumaBlur.Property, at: CGSize) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/render(with:modifier:options:)","title":"func render(with: Graphic, modifier: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/lumagamma","title":"case lumaGamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/placement","title":"case placement","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/rotation","title":"case rotation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/samplecount","title":"case sampleCount","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/style","title":"case style","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/property","title":"CodableGraphic.Effect.Modifier.LumaBlur.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/heavy","title":"case heavy","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/light","title":"case light","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/random","title":"case random","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variant","title":"CodableGraphic.Effect.Modifier.LumaBlur.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumablur","title":"CodableGraphic.Effect.Modifier.LumaBlur","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/hue","title":"var hue: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/lumagamma","title":"var lumaGamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/saturation","title":"var saturation: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/tintcolor","title":"var tintColor: GraphicMetadata<PixelColor>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Modifier.LumaColorShift.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/render(with:modifier:options:)","title":"func render(with: Graphic, modifier: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property\/hue","title":"case hue","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property\/lumagamma","title":"case lumaGamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property\/placement","title":"case placement","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property\/saturation","title":"case saturation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property\/tintcolor","title":"case tintColor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/property","title":"CodableGraphic.Effect.Modifier.LumaColorShift.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/hue120","title":"case hue120","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/hue240","title":"case hue240","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/monochrome","title":"case monochrome","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/saturated","title":"case saturated","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variant","title":"CodableGraphic.Effect.Modifier.LumaColorShift.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumacolorshift","title":"CodableGraphic.Effect.Modifier.LumaColorShift","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/brightness","title":"var brightness: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/contrast","title":"var contrast: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/darkness","title":"var darkness: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/gamma","title":"var gamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/isinverted","title":"var isInverted: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/issmooth","title":"var isSmooth: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/lumagamma","title":"var lumaGamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/offset","title":"var offset: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/opacity","title":"var opacity: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Modifier.LumaLevels.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/render(with:modifier:options:)","title":"func render(with: Graphic, modifier: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/brightness","title":"case brightness","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/contrast","title":"case contrast","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/darkness","title":"case darkness","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/isinverted","title":"case isInverted","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/issmooth","title":"case isSmooth","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/lumagamma","title":"case lumaGamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/offset","title":"case offset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/opacity","title":"case opacity","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/placement","title":"case placement","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/property","title":"CodableGraphic.Effect.Modifier.LumaLevels.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/bright","title":"case bright","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/contrast","title":"case contrast","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/dark","title":"case dark","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/dim","title":"case dim","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/gammadouble","title":"case gammaDouble","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/gammahalf","title":"case gammaHalf","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/inverted","title":"case inverted","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/semitransparent","title":"case semiTransparent","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/smooth","title":"case smooth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variant","title":"CodableGraphic.Effect.Modifier.LumaLevels.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumalevels","title":"CodableGraphic.Effect.Modifier.LumaLevels","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/light","title":"var light: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/lumagamma","title":"var lumaGamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/position","title":"var position: GraphicMetadata<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/rotation","title":"var rotation: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/samplecount","title":"var sampleCount: GraphicMetadata<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/style","title":"var style: GraphicEnumMetadata<Graphic.LumaRainbowBlurType>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Modifier.LumaRainbowBlur.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/isvisible(property:at:)","title":"func isVisible(property: CodableGraphic.Effect.Modifier.LumaRainbowBlur.Property, at: CGSize) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/render(with:modifier:options:)","title":"func render(with: Graphic, modifier: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/light","title":"case light","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/lumagamma","title":"case lumaGamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/placement","title":"case placement","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/rotation","title":"case rotation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/samplecount","title":"case sampleCount","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/style","title":"case style","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/property","title":"CodableGraphic.Effect.Modifier.LumaRainbowBlur.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant\/circle","title":"case circle","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variant","title":"CodableGraphic.Effect.Modifier.LumaRainbowBlur.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumarainbowblur","title":"CodableGraphic.Effect.Modifier.LumaRainbowBlur","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/istransparent","title":"var isTransparent: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/lumagamma","title":"var lumaGamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/rotation","title":"var rotation: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/scale","title":"var scale: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/scalesize","title":"var scaleSize: GraphicMetadata<CGSize>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/translation","title":"var translation: GraphicMetadata<CGPoint>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Modifier.LumaTransform.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/render(with:modifier:options:)","title":"func render(with: Graphic, modifier: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/istransparent","title":"case isTransparent","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/lumagamma","title":"case lumaGamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/placement","title":"case placement","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/rotation","title":"case rotation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/scalesize","title":"case scaleSize","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/translation","title":"case translation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/property","title":"CodableGraphic.Effect.Modifier.LumaTransform.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant\/regular","title":"case regular","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant\/scaleddown","title":"case scaledDown","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant\/scaledup","title":"case scaledUp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variant","title":"CodableGraphic.Effect.Modifier.LumaTransform.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/lumatransform","title":"CodableGraphic.Effect.Modifier.LumaTransform","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/includealpha","title":"var includeAlpha: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Modifier.Mask.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/render(with:modifier:options:)","title":"func render(with: Graphic, modifier: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/property\/includealpha","title":"case includeAlpha","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/property","title":"CodableGraphic.Effect.Modifier.Mask.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variant","title":"CodableGraphic.Effect.Modifier.Mask.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier\/mask","title":"CodableGraphic.Effect.Modifier.Mask","type":"class"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/modifier","title":"CodableGraphic.Effect.Modifier","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/position","title":"var position: GraphicMetadata<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/rotation","title":"var rotation: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/samplecount","title":"var sampleCount: GraphicMetadata<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/style","title":"var style: GraphicEnumMetadata<Graphic.BlurType>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Space.Blur.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/isvisible(property:at:)","title":"func isVisible(property: CodableGraphic.Effect.Space.Blur.Property, at: CGSize) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property\/rotation","title":"case rotation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property\/samplecount","title":"case sampleCount","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property\/style","title":"case style","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/property","title":"CodableGraphic.Effect.Space.Blur.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/heavy","title":"case heavy","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/light","title":"case light","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/random","title":"case random","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variant","title":"CodableGraphic.Effect.Space.Blur.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/blur","title":"CodableGraphic.Effect.Space.Blur","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/brightnesshigh","title":"var brightnessHigh: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/brightnesslow","title":"var brightnessLow: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/light","title":"var light: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/samplecount","title":"var sampleCount: GraphicMetadata<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/saturationhigh","title":"var saturationHigh: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/saturationlow","title":"var saturationLow: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Space.CircleBlur.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/brightnesshigh","title":"case brightnessHigh","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/brightnesslow","title":"case brightnessLow","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/light","title":"case light","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/samplecount","title":"case sampleCount","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/saturationhigh","title":"case saturationHigh","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/saturationlow","title":"case saturationLow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/property","title":"CodableGraphic.Effect.Space.CircleBlur.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant\/heavy","title":"case heavy","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant\/light","title":"case light","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant\/medium","title":"case medium","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variant","title":"CodableGraphic.Effect.Space.CircleBlur.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/circleblur","title":"CodableGraphic.Effect.Space.CircleBlur","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/amplitude","title":"var amplitude: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/distance","title":"var distance: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/iscolored","title":"var isColored: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/istransparent","title":"var isTransparent: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Space.Edge.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/property\/amplitude","title":"case amplitude","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/property\/distance","title":"case distance","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/property\/iscolored","title":"case isColored","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/property\/istransparent","title":"case isTransparent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/property","title":"CodableGraphic.Effect.Space.Edge.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variant\/colored","title":"case colored","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variant\/monochrome","title":"case monochrome","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variant","title":"CodableGraphic.Effect.Space.Edge.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/edge","title":"CodableGraphic.Effect.Space.Edge","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/istransparent","title":"var isTransparent: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/rotation","title":"var rotation: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/scale","title":"var scale: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/size","title":"var size: GraphicMetadata<CGSize>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/translation","title":"var translation: GraphicMetadata<CGPoint>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/edit(variant:)","title":"func edit(variant: CodableGraphic.Effect.Space.Transform.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property\/istransparent","title":"case isTransparent","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property\/rotation","title":"case rotation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property\/size","title":"case size","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property\/translation","title":"case translation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/property","title":"CodableGraphic.Effect.Space.Transform.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant\/regular","title":"case regular","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant\/scaleddown","title":"case scaledDown","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant\/scaledup","title":"case scaledUp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variant","title":"CodableGraphic.Effect.Space.Transform.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/type-swift.property","title":"var type: CodableGraphicType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/variants()","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform\/codablegraphicprotocol-implementations","title":"CodableGraphicProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space\/transform","title":"CodableGraphic.Effect.Space.Transform","type":"class"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect\/space","title":"CodableGraphic.Effect.Space","type":"struct"}],"path":"\/documentation\/asyncgraphics\/codablegraphic\/effect","title":"CodableGraphic.Effect","type":"struct"}],"path":"\/documentation\/asyncgraphics\/codablegraphic","title":"CodableGraphic","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/cornerradius","title":"var cornerRadius: GraphicMetadata<Double>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/position","title":"var position: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/size","title":"var size: GraphicMetadata<Size3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/surface","title":"var surface: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/surfacewidth","title":"var surfaceWidth: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Content.Shape.Box.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/render(at:options:)","title":"func render(at: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/cornerradius","title":"case cornerRadius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/size","title":"case size","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/surface","title":"case surface","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/surfacewidth","title":"case surfaceWidth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/property","title":"CodableGraphic3D.Content.Shape.Box.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variant\/regular","title":"case regular","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variant\/rounded","title":"case rounded","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variant","title":"CodableGraphic3D.Content.Shape.Box.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/box","title":"CodableGraphic3D.Content.Shape.Box","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/axis","title":"var axis: GraphicEnumMetadata<Graphic3D.Axis>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/leadingradius","title":"var leadingRadius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/length","title":"var length: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/position","title":"var position: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/surface","title":"var surface: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/surfacewidth","title":"var surfaceWidth: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/trailingradius","title":"var trailingRadius: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Content.Shape.Cone.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/render(at:options:)","title":"func render(at: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/axis","title":"case axis","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/leadingradius","title":"case leadingRadius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/length","title":"case length","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/surface","title":"case surface","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/surfacewidth","title":"case surfaceWidth","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/trailingradius","title":"case trailingRadius","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/property","title":"CodableGraphic3D.Content.Shape.Cone.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variant","title":"CodableGraphic3D.Content.Shape.Cone.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cone","title":"CodableGraphic3D.Content.Shape.Cone","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/axis","title":"var axis: GraphicEnumMetadata<Graphic3D.Axis>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/cornerradius","title":"var cornerRadius: GraphicMetadata<Double>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/length","title":"var length: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/position","title":"var position: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/surface","title":"var surface: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/surfacewidth","title":"var surfaceWidth: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Content.Shape.Cylinder.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/render(at:options:)","title":"func render(at: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/axis","title":"case axis","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/cornerradius","title":"case cornerRadius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/length","title":"case length","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/surface","title":"case surface","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/surfacewidth","title":"case surfaceWidth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/property","title":"CodableGraphic3D.Content.Shape.Cylinder.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variant","title":"CodableGraphic3D.Content.Shape.Cylinder.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/cylinder","title":"CodableGraphic3D.Content.Shape.Cylinder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/position","title":"var position: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/surface","title":"var surface: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/surfacewidth","title":"var surfaceWidth: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Content.Shape.Sphere.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/render(at:options:)","title":"func render(at: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/surface","title":"case surface","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/surfacewidth","title":"case surfaceWidth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/property","title":"CodableGraphic3D.Content.Shape.Sphere.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variant","title":"CodableGraphic3D.Content.Shape.Sphere.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/sphere","title":"CodableGraphic3D.Content.Shape.Sphere","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/axis","title":"var axis: GraphicEnumMetadata<Graphic3D.Axis>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/position","title":"var position: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/surface","title":"var surface: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/surfacewidth","title":"var surfaceWidth: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Content.Shape.Tetrahedron.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/render(at:options:)","title":"func render(at: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/axis","title":"case axis","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/surface","title":"case surface","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/surfacewidth","title":"case surfaceWidth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/property","title":"CodableGraphic3D.Content.Shape.Tetrahedron.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variant","title":"CodableGraphic3D.Content.Shape.Tetrahedron.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/tetrahedron","title":"CodableGraphic3D.Content.Shape.Tetrahedron","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/axis","title":"var axis: GraphicEnumMetadata<Graphic3D.Axis>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/position","title":"var position: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/revolvingradius","title":"var revolvingRadius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/surface","title":"var surface: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/surfacewidth","title":"var surfaceWidth: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Content.Shape.Torus.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/render(at:options:)","title":"func render(at: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/axis","title":"case axis","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/revolvingradius","title":"case revolvingRadius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/surface","title":"case surface","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/surfacewidth","title":"case surfaceWidth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/property","title":"CodableGraphic3D.Content.Shape.Torus.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variant","title":"CodableGraphic3D.Content.Shape.Torus.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape\/torus","title":"CodableGraphic3D.Content.Shape.Torus","type":"class"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/shape","title":"CodableGraphic3D.Content.Shape","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/color","title":"var color: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Content.Solid.Color.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/render(at:options:)","title":"func render(at: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/property\/color","title":"case color","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/property","title":"CodableGraphic3D.Content.Solid.Color.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant\/black","title":"case black","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant\/white","title":"case white","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variant","title":"CodableGraphic3D.Content.Solid.Color.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/color","title":"CodableGraphic3D.Content.Solid.Color","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/colorstops","title":"var colorStops: GraphicMetadata<[Graphic.GradientStop]>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/direction","title":"var direction: GraphicEnumMetadata<Graphic3D.Gradient3DDirection>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/extend","title":"var extend: GraphicEnumMetadata<Graphic.GradientExtend>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/gamma","title":"var gamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/offset","title":"var offset: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/position","title":"var position: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/scale","title":"var scale: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Content.Solid.Gradient.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/render(at:options:)","title":"func render(at: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/colorstops","title":"case colorStops","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/direction","title":"case direction","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/extend","title":"case extend","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/offset","title":"case offset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/scale","title":"case scale","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/property","title":"CodableGraphic3D.Content.Solid.Gradient.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/radial","title":"case radial","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/x","title":"case x","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/y","title":"case y","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/z","title":"case z","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variant","title":"CodableGraphic3D.Content.Solid.Gradient.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/gradient","title":"CodableGraphic3D.Content.Solid.Gradient","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/depthoffset","title":"var depthOffset: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/iscolored","title":"var isColored: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/israndom","title":"var isRandom: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/octaves","title":"var octaves: GraphicMetadata<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/offset","title":"var offset: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/scale","title":"var scale: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/seed","title":"var seed: GraphicMetadata<Int>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Content.Solid.Noise.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/propertyvisible(property:at:)","title":"func propertyVisible(property: CodableGraphic3D.Content.Solid.Noise.Property, at: CGSize) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/render(at:options:)","title":"func render(at: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/depthoffset","title":"case depthOffset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/iscolored","title":"case isColored","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/israndom","title":"case isRandom","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/octaves","title":"case octaves","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/offset","title":"case offset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/seed","title":"case seed","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/property","title":"CodableGraphic3D.Content.Solid.Noise.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/detailed","title":"case detailed","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/detailedcolored","title":"case detailedColored","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/random","title":"case random","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/randomcolored","title":"case randomColored","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/smooth","title":"case smooth","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/smoothcolored","title":"case smoothColored","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variant","title":"CodableGraphic3D.Content.Solid.Noise.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid\/noise","title":"CodableGraphic3D.Content.Solid.Noise","type":"class"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content\/solid","title":"CodableGraphic3D.Content.Solid","type":"struct"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/content","title":"CodableGraphic3D.Content","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/alpha","title":"var alpha: GraphicEnumMetadata<Graphic.ColorChannel>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/blue","title":"var blue: GraphicEnumMetadata<Graphic.ColorChannel>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/green","title":"var green: GraphicEnumMetadata<Graphic.ColorChannel>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/red","title":"var red: GraphicEnumMetadata<Graphic.ColorChannel>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Color.ChannelMix.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/property\/alpha","title":"case alpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/property\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/property\/green","title":"case green","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/property\/red","title":"case red","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/property","title":"CodableGraphic3D.Effect.Color.ChannelMix.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant\/bluered","title":"case blueRed","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant\/greenblue","title":"case greenBlue","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant\/redgreen","title":"case redGreen","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variant","title":"CodableGraphic3D.Effect.Color.ChannelMix.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/channelmix","title":"CodableGraphic3D.Effect.Color.ChannelMix","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/high","title":"var high: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/includealpha","title":"var includeAlpha: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/low","title":"var low: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/style","title":"var style: GraphicEnumMetadata<Graphic.ClampType>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Color.Clamp.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/property\/high","title":"case high","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/property\/includealpha","title":"case includeAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/property\/low","title":"case low","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/property\/style","title":"case style","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/property","title":"CodableGraphic3D.Effect.Color.Clamp.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/relative","title":"case relative","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variant","title":"CodableGraphic3D.Effect.Color.Clamp.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/clamp","title":"CodableGraphic3D.Effect.Color.Clamp","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Color.ColorMap.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/property","title":"CodableGraphic3D.Effect.Color.ColorMap.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant\/green","title":"case green","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant\/red","title":"case red","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variant","title":"CodableGraphic3D.Effect.Color.ColorMap.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colormap","title":"CodableGraphic3D.Effect.Color.ColorMap","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/hue","title":"var hue: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/saturation","title":"var saturation: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/tintcolor","title":"var tintColor: GraphicMetadata<PixelColor>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Color.ColorShift.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/property\/hue","title":"case hue","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/property\/saturation","title":"case saturation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/property\/tintcolor","title":"case tintColor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/property","title":"CodableGraphic3D.Effect.Color.ColorShift.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/hue120","title":"case hue120","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/hue240","title":"case hue240","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/monochrome","title":"case monochrome","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/saturated","title":"case saturated","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variant","title":"CodableGraphic3D.Effect.Color.ColorShift.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/colorshift","title":"CodableGraphic3D.Effect.Color.ColorShift","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/colorstops","title":"var colorStops: GraphicMetadata<[Graphic.GradientStop]>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/gamma","title":"var gamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Color.GradientLookup.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/property\/colorstops","title":"case colorStops","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/property\/gamma","title":"case gamma","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/property","title":"CodableGraphic3D.Effect.Color.GradientLookup.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant\/fire","title":"case fire","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant\/ice","title":"case ice","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant\/rainbow","title":"case rainbow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variant","title":"CodableGraphic3D.Effect.Color.GradientLookup.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/gradientlookup","title":"CodableGraphic3D.Effect.Color.GradientLookup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/brightness","title":"var brightness: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/contrast","title":"var contrast: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/darkness","title":"var darkness: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/gamma","title":"var gamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/isinverted","title":"var isInverted: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/issmooth","title":"var isSmooth: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/offset","title":"var offset: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/opacity","title":"var opacity: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Color.Levels.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/brightness","title":"case brightness","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/contrast","title":"case contrast","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/darkness","title":"case darkness","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/isinverted","title":"case isInverted","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/issmooth","title":"case isSmooth","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/offset","title":"case offset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/opacity","title":"case opacity","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/property","title":"CodableGraphic3D.Effect.Color.Levels.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/bright","title":"case bright","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/contrast","title":"case contrast","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/dark","title":"case dark","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/dim","title":"case dim","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/gammadouble","title":"case gammaDouble","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/gammahalf","title":"case gammaHalf","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/inverted","title":"case inverted","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/semitransparent","title":"case semiTransparent","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/smooth","title":"case smooth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variant","title":"CodableGraphic3D.Effect.Color.Levels.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/levels","title":"CodableGraphic3D.Effect.Color.Levels","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/fraction","title":"var fraction: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Color.Quantize.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/property\/fraction","title":"case fraction","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/property","title":"CodableGraphic3D.Effect.Color.Quantize.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant\/eight","title":"case eight","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant\/half","title":"case half","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant\/quarter","title":"case quarter","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variant","title":"CodableGraphic3D.Effect.Color.Quantize.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/quantize","title":"CodableGraphic3D.Effect.Color.Quantize","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/amplitude","title":"var amplitude: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/origincolor","title":"var originColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Color.Slope.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/property\/amplitude","title":"case amplitude","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/property\/origincolor","title":"case originColor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/property","title":"CodableGraphic3D.Effect.Color.Slope.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/one","title":"case one","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/onehundred","title":"case oneHundred","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/onethousand","title":"case oneThousand","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/ten","title":"case ten","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variant","title":"CodableGraphic3D.Effect.Color.Slope.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/slope","title":"CodableGraphic3D.Effect.Color.Slope","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/backgroundcolor","title":"var backgroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/foregroundcolor","title":"var foregroundColor: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/fraction","title":"var fraction: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Color.Threshold.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/property\/backgroundcolor","title":"case backgroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/property\/foregroundcolor","title":"case foregroundColor","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/property\/fraction","title":"case fraction","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/property","title":"CodableGraphic3D.Effect.Color.Threshold.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant\/high","title":"case high","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant\/low","title":"case low","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant\/mid","title":"case mid","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variant","title":"CodableGraphic3D.Effect.Color.Threshold.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color\/threshold","title":"CodableGraphic3D.Effect.Color.Threshold","type":"class"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/color","title":"CodableGraphic3D.Effect.Color","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/blendingmode","title":"var blendingMode: GraphicEnumMetadata<Graphic.BlendMode>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Modifier.Blend.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/render(with:modifier:options:)","title":"func render(with: Graphic3D, modifier: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/property\/blendingmode","title":"case blendingMode","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/property\/placement","title":"case placement","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/property","title":"CodableGraphic3D.Effect.Modifier.Blend.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variant","title":"CodableGraphic3D.Effect.Modifier.Blend.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/blend","title":"CodableGraphic3D.Effect.Modifier.Blend","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/fraction","title":"var fraction: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Modifier.Cross.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/render(with:modifier:options:)","title":"func render(with: Graphic3D, modifier: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/property\/fraction","title":"case fraction","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/property\/placement","title":"case placement","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/property","title":"CodableGraphic3D.Effect.Modifier.Cross.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variant","title":"CodableGraphic3D.Effect.Modifier.Cross.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/cross","title":"CodableGraphic3D.Effect.Modifier.Cross","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/offset","title":"var offset: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/origin","title":"var origin: GraphicMetadata<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Modifier.Displace.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/render(with:modifier:options:)","title":"func render(with: Graphic3D, modifier: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/property\/offset","title":"case offset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/property\/origin","title":"case origin","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/property\/placement","title":"case placement","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/property","title":"CodableGraphic3D.Effect.Modifier.Displace.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variant","title":"CodableGraphic3D.Effect.Modifier.Displace.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/displace","title":"CodableGraphic3D.Effect.Modifier.Displace","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/axis","title":"var axis: GraphicEnumMetadata<Graphic3D.Lookup3DAxis>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/samplecoordinate","title":"var sampleCoordinate: GraphicMetadata<CGFloat>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Modifier.Lookup.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/render(with:modifier:options:)","title":"func render(with: Graphic3D, modifier: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/property\/axis","title":"case axis","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/property\/samplecoordinate","title":"case sampleCoordinate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/property","title":"CodableGraphic3D.Effect.Modifier.Lookup.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variant","title":"CodableGraphic3D.Effect.Modifier.Lookup.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lookup","title":"CodableGraphic3D.Effect.Modifier.Lookup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/lumagamma","title":"var lumaGamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/position","title":"var position: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/samplecount","title":"var sampleCount: GraphicMetadata<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/style","title":"var style: GraphicEnumMetadata<Graphic3D.LumaBlur3DType>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Modifier.LumaBlur.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/isvisible(property:at:)","title":"func isVisible(property: CodableGraphic3D.Effect.Modifier.LumaBlur.Property, at: CGSize) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/render(with:modifier:options:)","title":"func render(with: Graphic3D, modifier: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/lumagamma","title":"case lumaGamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/placement","title":"case placement","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/samplecount","title":"case sampleCount","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/style","title":"case style","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/property","title":"CodableGraphic3D.Effect.Modifier.LumaBlur.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/heavy","title":"case heavy","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/light","title":"case light","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/random","title":"case random","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variant","title":"CodableGraphic3D.Effect.Modifier.LumaBlur.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumablur","title":"CodableGraphic3D.Effect.Modifier.LumaBlur","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/hue","title":"var hue: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/lumagamma","title":"var lumaGamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/saturation","title":"var saturation: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/tintcolor","title":"var tintColor: GraphicMetadata<PixelColor>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Modifier.LumaColorShift.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/render(with:modifier:options:)","title":"func render(with: Graphic3D, modifier: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property\/hue","title":"case hue","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property\/lumagamma","title":"case lumaGamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property\/placement","title":"case placement","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property\/saturation","title":"case saturation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property\/tintcolor","title":"case tintColor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/property","title":"CodableGraphic3D.Effect.Modifier.LumaColorShift.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/hue120","title":"case hue120","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/hue240","title":"case hue240","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/monochrome","title":"case monochrome","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/saturated","title":"case saturated","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variant","title":"CodableGraphic3D.Effect.Modifier.LumaColorShift.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumacolorshift","title":"CodableGraphic3D.Effect.Modifier.LumaColorShift","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/brightness","title":"var brightness: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/contrast","title":"var contrast: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/darkness","title":"var darkness: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/gamma","title":"var gamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/isinverted","title":"var isInverted: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/issmooth","title":"var isSmooth: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/lumagamma","title":"var lumaGamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/offset","title":"var offset: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/opacity","title":"var opacity: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Modifier.LumaLevels.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/render(with:modifier:options:)","title":"func render(with: Graphic3D, modifier: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/brightness","title":"case brightness","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/contrast","title":"case contrast","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/darkness","title":"case darkness","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/isinverted","title":"case isInverted","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/issmooth","title":"case isSmooth","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/lumagamma","title":"case lumaGamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/offset","title":"case offset","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/opacity","title":"case opacity","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/placement","title":"case placement","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/property","title":"CodableGraphic3D.Effect.Modifier.LumaLevels.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/bright","title":"case bright","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/contrast","title":"case contrast","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/dark","title":"case dark","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/dim","title":"case dim","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/gammadouble","title":"case gammaDouble","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/gammahalf","title":"case gammaHalf","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/inverted","title":"case inverted","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/semitransparent","title":"case semiTransparent","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/smooth","title":"case smooth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variant","title":"CodableGraphic3D.Effect.Modifier.LumaLevels.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumalevels","title":"CodableGraphic3D.Effect.Modifier.LumaLevels","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/light","title":"var light: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/lumagamma","title":"var lumaGamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/position","title":"var position: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/rotation","title":"var rotation: GraphicMetadata<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/samplecount","title":"var sampleCount: GraphicMetadata<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/style","title":"var style: GraphicEnumMetadata<Graphic3D.LumaRainbowBlur3DType>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Modifier.LumaRainbowBlur.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/isvisible(property:at:)","title":"func isVisible(property: CodableGraphic3D.Effect.Modifier.LumaRainbowBlur.Property, at: CGSize) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/render(with:modifier:options:)","title":"func render(with: Graphic3D, modifier: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/light","title":"case light","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/lumagamma","title":"case lumaGamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/placement","title":"case placement","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/rotation","title":"case rotation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/samplecount","title":"case sampleCount","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/style","title":"case style","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/property","title":"CodableGraphic3D.Effect.Modifier.LumaRainbowBlur.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variant\/circle","title":"case circle","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variant\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variant","title":"CodableGraphic3D.Effect.Modifier.LumaRainbowBlur.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumarainbowblur","title":"CodableGraphic3D.Effect.Modifier.LumaRainbowBlur","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/istransparent","title":"var isTransparent: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/lumagamma","title":"var lumaGamma: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/placement","title":"var placement: GraphicEnumMetadata<Graphic.Placement>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/rotation","title":"var rotation: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/scale","title":"var scale: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/scalesize","title":"var scaleSize: GraphicMetadata<Size3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/translation","title":"var translation: GraphicMetadata<Point3D>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Modifier.LumaTransform.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/render(with:modifier:options:)","title":"func render(with: Graphic3D, modifier: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/istransparent","title":"case isTransparent","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/lumagamma","title":"case lumaGamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/placement","title":"case placement","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/rotation","title":"case rotation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/scalesize","title":"case scaleSize","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/translation","title":"case translation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/property","title":"CodableGraphic3D.Effect.Modifier.LumaTransform.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant\/regular","title":"case regular","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant\/scaleddown","title":"case scaledDown","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant\/scaledup","title":"case scaledUp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variant","title":"CodableGraphic3D.Effect.Modifier.LumaTransform.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/lumatransform","title":"CodableGraphic3D.Effect.Modifier.LumaTransform","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/includealpha","title":"var includeAlpha: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Modifier.Mask.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/render(with:modifier:options:)","title":"func render(with: Graphic3D, modifier: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/property\/includealpha","title":"case includeAlpha","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/property","title":"CodableGraphic3D.Effect.Modifier.Mask.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variant\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variant","title":"CodableGraphic3D.Effect.Modifier.Mask.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier\/mask","title":"CodableGraphic3D.Effect.Modifier.Mask","type":"class"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/modifier","title":"CodableGraphic3D.Effect.Modifier","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/direction","title":"var direction: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/position","title":"var position: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/radius","title":"var radius: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/samplecount","title":"var sampleCount: GraphicMetadata<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/style","title":"var style: GraphicEnumMetadata<Graphic3D.Blur3DType>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Space.Blur.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/isvisible(property:at:)","title":"func isVisible(property: CodableGraphic3D.Effect.Space.Blur.Property, at: CGSize) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property\/direction","title":"case direction","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property\/position","title":"case position","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property\/samplecount","title":"case sampleCount","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property\/style","title":"case style","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/property","title":"CodableGraphic3D.Effect.Space.Blur.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/heavy","title":"case heavy","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/light","title":"case light","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/random","title":"case random","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/zoom","title":"case zoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variant","title":"CodableGraphic3D.Effect.Space.Blur.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/blur","title":"CodableGraphic3D.Effect.Space.Blur","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/amplitude","title":"var amplitude: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/distance","title":"var distance: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/iscolored","title":"var isColored: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/istransparent","title":"var isTransparent: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Space.Edge.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/property\/amplitude","title":"case amplitude","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/property\/distance","title":"case distance","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/property\/iscolored","title":"case isColored","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/property\/istransparent","title":"case isTransparent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/property","title":"CodableGraphic3D.Effect.Space.Edge.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variant\/colored","title":"case colored","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variant\/monochrome","title":"case monochrome","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variant","title":"CodableGraphic3D.Effect.Space.Edge.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/edge","title":"CodableGraphic3D.Effect.Space.Edge","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/istransparent","title":"var isTransparent: GraphicMetadata<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/rotation","title":"var rotation: GraphicMetadata<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/scale","title":"var scale: GraphicMetadata<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/translation","title":"var translation: GraphicMetadata<Point3D>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/edit(variant:)","title":"func edit(variant: CodableGraphic3D.Effect.Space.Transform.Variant)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/property\/istransparent","title":"case isTransparent","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/property\/rotation","title":"case rotation","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/property\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/property\/translation","title":"case translation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/property","title":"CodableGraphic3D.Effect.Space.Transform.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant\/regular","title":"case regular","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant\/scaleddown","title":"case scaledDown","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant\/scaledup","title":"case scaledUp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variant","title":"CodableGraphic3D.Effect.Space.Transform.Variant","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/isvisible(property:at:)","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/variants()","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform\/codablegraphic3dprotocol-implementations","title":"CodableGraphic3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space\/transform","title":"CodableGraphic3D.Effect.Space.Transform","type":"class"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect\/space","title":"CodableGraphic3D.Effect.Space","type":"struct"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d\/effect","title":"CodableGraphic3D.Effect","type":"struct"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3d","title":"CodableGraphic3D","type":"struct"},{"title":"Articles","type":"groupMarker"},{"children":[{"title":"Blend Mode","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/add","title":"case add","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/addwithalpha","title":"case addWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/average","title":"case average","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/cosine","title":"case cosine","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/darken","title":"case darken","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/darkenwithoutalpha","title":"case darkenWithoutAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/difference","title":"case difference","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/divide","title":"case divide","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/exclusiveor","title":"case exclusiveOr","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/inside","title":"case inside","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/lighten","title":"case lighten","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/maximum","title":"case maximum","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/minimum","title":"case minimum","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/multiply","title":"case multiply","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/multiplywithoutalpha","title":"case multiplyWithoutAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/outside","title":"case outside","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/over","title":"case over","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/power","title":"case power","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/screen","title":"case screen","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/subtract","title":"case subtract","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/subtractwithalpha","title":"case subtractWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/under","title":"case under","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/blendmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/blendmode","title":"Graphic.BlendMode","type":"enum"}],"path":"\/documentation\/asyncgraphics\/blending","title":"Blending","type":"symbol"},{"children":[{"title":"Stacks","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/init(alignment:with:)","title":"init(alignment: Graphic.ZStackAlignment, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-3fl80","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-7mj2r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-2bc10","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-8o6af","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agzstack\/==(_:_:)","title":"static func == (AGZStack, AGZStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agzstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agzstack","title":"AGZStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.VStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-1nji8","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-n0ph","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-3y07o","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-45lbw","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agvstack\/==(_:_:)","title":"static func == (AGVStack, AGVStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvstack","title":"AGVStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.HStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-4k5r9","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-6q9un","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-1wnkx","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-9do05","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/aghstack\/==(_:_:)","title":"static func == (AGHStack, AGHStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/aghstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aghstack","title":"AGHStack","type":"struct"}],"path":"\/documentation\/asyncgraphics\/layout","title":"Layout","type":"symbol"},{"children":[{"title":"Camera","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(with:)","title":"static func camera(with: Graphic.Camera) -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(device:quality:)","title":"static func camera(device: AVCaptureDevice, quality: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(at:lens:quality:)","title":"static func camera(at: Graphic.CameraPosition, lens: AVCaptureDevice.DeviceType, quality: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"}],"path":"\/documentation\/asyncgraphics\/camera","title":"Camera","type":"symbol"},{"children":[{"title":"Video","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframe(at:url:info:)","title":"static func importVideoFrame(at: Int, url: URL, info: VideoInfo?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideo(url:progress:)","title":"static func importVideo(url: URL, progress: ((Graphic.ImportVideoFrameProgress) -> ())?) async throws -> [Graphic]","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideostream(url:)","title":"static func importVideoStream(url: URL) -> AsyncThrowingStream<Graphic, Error>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotodata(with:fps:kbps:format:codec:)","title":"static func exportVideoToData(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> Data","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotourl(with:fps:kbps:format:codec:)","title":"static func exportVideoToURL(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> URL","type":"method"}],"path":"\/documentation\/asyncgraphics\/videoediting","title":"Video Editing","type":"symbol"},{"children":[{"title":"Video","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/init(with:)","title":"init(with: GraphicVideoPlayer)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resizable()","title":"func resizable() -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8hcdj","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8xa34","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-5k5vi","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-9u74n","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvideo\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvideo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvideo","title":"AGVideo","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framecount","title":"var frameCount: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framerate","title":"let frameRate: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/resolution","title":"let resolution: CGSize","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct","title":"GraphicVideoPlayer.Info","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/loop","title":"var loop: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/volume","title":"var volume: Double","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct","title":"GraphicVideoPlayer.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(named:fileextension:in:options:)","title":"convenience init(named: String, fileExtension: String, in: Bundle, options: GraphicVideoPlayer.Options) async throws","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(url:options:)","title":"init(url: URL, options: GraphicVideoPlayer.Options) async throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/frameindex","title":"var frameIndex: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.property","title":"var info: GraphicVideoPlayer.Info","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.property","title":"var options: GraphicVideoPlayer.Options","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/playing","title":"var playing: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seconds","title":"var seconds: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/time","title":"var time: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/play()","title":"func play()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-5hpoo","title":"func seek(to: Double)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-86zyw","title":"func seek(to: Int)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-8d3sm","title":"func seek(to: CMTime)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/startseek()","title":"func startSeek()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stop()","title":"func stop()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stopseek()","title":"func stopSeek()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/==(_:_:)","title":"static func == (GraphicVideoPlayer, GraphicVideoPlayer) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer","title":"GraphicVideoPlayer","type":"class"},{"path":"\/documentation\/asyncgraphics\/graphic\/playvideo(with:)","title":"static func playVideo(with: GraphicVideoPlayer) -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/playvideo(url:loop:volume:)","title":"static func playVideo(url: URL, loop: Bool, volume: Double) async throws -> AsyncStream<Graphic>","type":"method"}],"path":"\/documentation\/asyncgraphics\/videoplayback","title":"Video Playback","type":"symbol"},{"title":"References","type":"groupMarker"},{"children":[{"title":"Live Camera Feed","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(at:lens:quality:)","title":"static func camera(at: Graphic.CameraPosition, lens: AVCaptureDevice.DeviceType, quality: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(device:quality:)","title":"static func camera(device: AVCaptureDevice, quality: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(with:)","title":"static func camera(with: Graphic.Camera) -> AsyncStream<Graphic>","type":"method"},{"title":"Live Screen Feed","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/screen(at:)","title":"static func screen(at: Int) throws -> AsyncStream<Graphic>","type":"method"},{"title":"Import an Image","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(named:in:)","title":"static func image(named: String, in: Bundle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(url:)","title":"static func image(url: URL) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(_:)-6435w","title":"static func image(TMImage) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(_:)-7tsh0","title":"static func image(CGImage) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(_:)-1mubl","title":"static func image(CIImage) async throws -> Graphic","type":"method"},{"title":"Import a Video","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframe(at:url:info:)","title":"static func importVideoFrame(at: Int, url: URL, info: VideoInfo?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideo(url:progress:)","title":"static func importVideo(url: URL, progress: ((Graphic.ImportVideoFrameProgress) -> ())?) async throws -> [Graphic]","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideostream(url:)","title":"static func importVideoStream(url: URL) -> AsyncThrowingStream<Graphic, Error>","type":"method"},{"title":"Import a Buffer","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelbuffer(_:)","title":"static func pixelBuffer(CVPixelBuffer) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/samplebuffer(_:)","title":"static func sampleBuffer(CMSampleBuffer) throws -> Graphic","type":"method"},{"title":"Import a Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texture(_:)","title":"static func texture(MTLTexture) throws -> Graphic","type":"method"},{"title":"Export an Image","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/image","title":"var image: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/imagewithtransparency","title":"var imageWithTransparency: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/pngdata","title":"var pngData: Data","type":"property"},{"title":"Export a Video","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotodata(with:fps:kbps:format:codec:)","title":"static func exportVideoToData(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> Data","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotourl(with:fps:kbps:format:codec:)","title":"static func exportVideoToURL(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> URL","type":"method"},{"title":"Apple Maps","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maps(type:latitude:longitude:span:resolution:mapoptions:options:)","title":"static func maps(type: Graphic.MapType, latitude: Angle, longitude: Angle, span: Angle, resolution: CGSize, mapOptions: Graphic.MapOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybrid","title":"case hybrid","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybridflyover","title":"case hybridFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/mutedstandard","title":"case mutedStandard","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satellite","title":"case satellite","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satelliteflyover","title":"case satelliteFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/standard","title":"case standard","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype","title":"Graphic.MapType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/darkmode","title":"static let darkMode: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showbuildings","title":"static let showBuildings: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showpointsofinterest","title":"static let showPointsOfInterest: Graphic.MapOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions","title":"Graphic.MapOptions","type":"struct"}],"path":"\/documentation\/asyncgraphics\/resources","title":"Resources","type":"symbol"},{"children":[{"title":"Color","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/color(_:resolution:options:)","title":"static func color(PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Rectangle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(size:position:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(size: CGSize?, position: CGPoint?, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(frame:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(frame: CGRect, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(size:position:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(size: CGSize?, position: CGPoint?, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(frame:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(frame: CGRect, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Circle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/circle(radius:position:color:backgroundcolor:resolution:options:)","title":"static func circle(radius: CGFloat?, position: CGPoint?, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedcircle(radius:position:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedCircle(radius: CGFloat?, position: CGPoint?, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Polygon","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polygon(count:radius:position:rotation:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func polygon(count: Int, radius: CGFloat?, position: CGPoint?, rotation: Angle, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Gradient","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradient(direction:stops:position:scale:offset:extend:gamma:resolution:options:)","title":"static func gradient(direction: Graphic.GradientDirection, stops: [Graphic.GradientStop], position: CGPoint?, scale: CGFloat, offset: CGFloat, extend: Graphic.GradientExtend, gamma: CGFloat, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/radial","title":"case radial","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection","title":"Graphic.GradientDirection","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/init(at:color:)","title":"init(at: CGFloat, color: PixelColor)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/color","title":"var color: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/location","title":"var location: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop","title":"Graphic.GradientStop","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend","title":"Graphic.GradientExtend","type":"enum"},{"title":"Noise","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/noise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func noise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorednoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func coloredNoise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomnoise(seed:resolution:options:)","title":"static func randomNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomcolorednoise(seed:resolution:options:)","title":"static func randomColoredNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Particles","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticles(particlescale:particlecolor:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvParticles(particleScale: CGFloat, particleColor: PixelColor, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticles(with:particlescale:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvColorParticles(with: Graphic, particleScale: CGFloat, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVColorParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/four","title":"case four","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/one","title":"case one","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/two","title":"case two","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount","title":"Graphic.UVParticleSampleCount","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelalpha","title":"static let channelAlpha: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/clipchannelalpha","title":"static let clipChannelAlpha: Graphic.UVParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions","title":"Graphic.UVParticleOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVColorParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions","title":"Graphic.UVColorParticleOptions","type":"struct"}],"path":"\/documentation\/asyncgraphics\/visuals","title":"Visuals","type":"symbol"},{"children":[{"title":"Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blended(with:blendingmode:placement:alignment:options:)","title":"func blended(with: Graphic, blendingMode: Graphic.BlendMode, placement: Graphic.Placement, alignment: Graphic.Alignment, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blend(with:blendingmode:)","title":"static func blend(with: [Graphic], blendingMode: Graphic.MultiBlendMode) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(with:)","title":"static func add(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/average(with:)","title":"static func average(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mask(foreground:background:mask:placement:options:)","title":"static func mask(foreground: Graphic, background: Graphic, mask: Graphic, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/offset(_:options:)","title":"func offset(CGPoint, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotated(_:options:)","title":"func rotated(Angle, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/scaled(_:options:)","title":"func scaled(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(width:height:options:)","title":"func sized(width: CGFloat?, height: CGFloat?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(_:options:)","title":"func sized(CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformed(translation:rotation:scale:size:options:)","title":"func transformed(translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaoffset(with:translation:lumagamma:placement:options:)","title":"func lumaOffset(with: Graphic, translation: CGPoint, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaoffset(with:x:y:lumagamma:placement:options:)","title":"func lumaOffset(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarotated(with:rotation:lumagamma:placement:options:)","title":"func lumaRotated(with: Graphic, rotation: Angle, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:scale:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, scale: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:x:y:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Transform with Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformblended(with:blendingmode:placement:alignment:translation:rotation:scale:size:options:)","title":"func transformBlended(with: Graphic, blendingMode: Graphic.BlendMode, placement: Graphic.Placement, alignment: Graphic.Alignment, translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Mirror","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredhorizontally()","title":"func mirroredHorizontally() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredvertically()","title":"func mirroredVertically() async throws -> Graphic","type":"method"},{"title":"Rotate","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedleft()","title":"func rotatedLeft() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedright()","title":"func rotatedRight() async throws -> Graphic","type":"method"},{"title":"Stack","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func hStack(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func vStack(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/top","title":"case top","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment","title":"Graphic.HStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/trailing","title":"case trailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment","title":"Graphic.VStackAlignment","type":"enum"},{"title":"Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/brightness(_:)","title":"func brightness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/darkness(_:)","title":"func darkness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contrast(_:)","title":"func contrast(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/gamma(_:)","title":"func gamma(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/inverted()","title":"func inverted() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/smoothed()","title":"func smoothed() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/opacity(_:)","title":"func opacity(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exposureoffset(_:)","title":"func exposureOffset(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(_:)","title":"func add(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/subtract(_:)","title":"func subtract(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiply(_:)","title":"func multiply(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/divide(_:)","title":"func divide(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/levels(brightness:darkness:contrast:gamma:invert:smooth:opacity:offset:)","title":"func levels(brightness: CGFloat, darkness: CGFloat, contrast: CGFloat, gamma: CGFloat, invert: Bool, smooth: Bool, opacity: CGFloat, offset: CGFloat) async throws -> Graphic","type":"method"},{"title":"Colors","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/monochrome()","title":"func monochrome() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/saturated(_:)","title":"func saturated(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/hue(_:)","title":"func hue(Angle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/tinted(_:)","title":"func tinted(PixelColor) async throws -> Graphic","type":"method"},{"title":"Color Convert","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvert(_:channel:)","title":"func colorConvert(Graphic.ColorConversion, channel: Graphic.ColorConvertChannel) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hsvtorgb","title":"case hsvToRGB","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rgbtohsv","title":"case rgbToHSV","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion","title":"Graphic.ColorConversion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/all","title":"case all","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/first","title":"case first","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/second","title":"case second","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/third","title":"case third","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel","title":"Graphic.ColorConvertChannel","type":"enum"},{"title":"Threshold","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/threshold(_:color:backgroundcolor:options:)","title":"func threshold(CGFloat, color: PixelColor, backgroundColor: PixelColor, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Quantize","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/quantize(_:options:)","title":"func quantize(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Channels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/channelmix(red:green:blue:alpha:)","title":"func channelMix(red: Graphic.ColorChannel, green: Graphic.ColorChannel, blue: Graphic.ColorChannel, alpha: Graphic.ColorChannel) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/alphatoluminance()","title":"func alphaToLuminance() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/luminancetoalpha()","title":"func luminanceToAlpha() async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/alpha","title":"case alpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/green","title":"case green","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/mono","title":"case mono","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/red","title":"case red","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/white","title":"case white","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/color","title":"var color: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel","title":"Graphic.ColorChannel","type":"enum"},{"title":"Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurred(radius:)","title":"func blurred(radius: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredbox(radius:samplecount:options:)","title":"func blurredBox(radius: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredzoom(radius:position:samplecount:options:)","title":"func blurredZoom(radius: CGFloat, position: CGPoint?, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredangle(radius:angle:samplecount:options:)","title":"func blurredAngle(radius: CGFloat, angle: Angle, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredrandom(radius:options:)","title":"func blurredRandom(radius: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredbox(with:radius:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredBox(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredzoom(with:radius:position:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredZoom(with: Graphic, radius: CGFloat, position: CGPoint?, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredangle(with:radius:angle:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredrandom(with:radius:lumagamma:placement:options:)","title":"func lumaBlurredRandom(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredcircle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredCircle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredangle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredAngle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredzoom(radius:position:light:samplecount:options:)","title":"func rainbowBlurredZoom(radius: CGFloat, position: CGPoint?, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredcircle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredCircle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredangle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredzoom(with:radius:position:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredZoom(with: Graphic, radius: CGFloat, position: CGPoint?, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Displace","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/displaced(with:offset:origin:placement:options:)","title":"func displaced(with: Graphic, offset: CGFloat, origin: PixelColor, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Slope","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/slope(amplitude:origin:options:)","title":"func slope(amplitude: CGFloat, origin: PixelColor, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Edge","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edge(amplitude:distance:istransparent:options:)","title":"func edge(amplitude: CGFloat, distance: CGFloat, isTransparent: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorededge(amplitude:distance:istransparent:options:)","title":"func coloredEdge(amplitude: CGFloat, distance: CGFloat, isTransparent: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Clamp","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamp(_:low:high:includealpha:options:)","title":"func clamp(Graphic.ClampType, low: CGFloat, high: CGFloat, includeAlpha: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/relative","title":"case relative","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype","title":"Graphic.ClampType","type":"enum"},{"title":"Cross","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cross(with:fraction:placement:options:)","title":"func cross(with: Graphic, fraction: CGFloat, placement: Graphic.Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Corner Pin","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cornerpinned(topleft:topright:bottomleft:bottomright:perspective:subdivisions:backgroundcolor:)","title":"func cornerPinned(topLeft: CGPoint?, topRight: CGPoint?, bottomLeft: CGPoint?, bottomRight: CGPoint?, perspective: Bool, subdivisions: Int, backgroundColor: PixelColor) async throws -> Graphic","type":"method"},{"title":"Chroma Key","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakey(color:parameters:options:)","title":"func chromaKey(color: PixelColor, parameters: Graphic.ChromaKeyParameters, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/alphacrop","title":"var alphaCrop: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/edgedesaturation","title":"var edgeDesaturation: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/range","title":"var range: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/softness","title":"var softness: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters","title":"Graphic.ChromaKeyParameters","type":"struct"},{"title":"Polar","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polar(radius:width:leadingangle:trailingangle:resolution:options:)","title":"func polar(radius: CGFloat?, width: CGFloat?, leadingAngle: Angle, trailingAngle: Angle, resolution: CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Morph","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedminimum(size:)","title":"func morphedMinimum(size: CGSize) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedmaximum(size:)","title":"func morphedMaximum(size: CGSize) async throws -> Graphic","type":"method"}],"path":"\/documentation\/asyncgraphics\/effects","title":"Effects","type":"symbol"},{"children":[{"title":"Solid (0 Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:resolution:options:)","title":"static func metal(code: String, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Direct (1 Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:options:)","title":"func metal(code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Dual (2 Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.method","title":"func metal(with: Graphic, code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Array (N Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.type.method","title":"static func metal(with: [Graphic], code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror","title":"Graphic.SolidMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror","title":"Graphic.DirectMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror","title":"Graphic.DualMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror","title":"Graphic.ArrayMetalError","type":"enum"}],"path":"\/documentation\/asyncgraphics\/metal","title":"Metal","type":"symbol"},{"children":[{"title":"Import","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(url:layout:)","title":"static func readLUT(url: URL, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(data:format:layout:)","title":"static func readLUT(data: Data, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(named:format:layout:)","title":"static func readLUT(named: String, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/readlut(named:in:format:layout:)","title":"static func readLUT(named: String, in: Bundle, format: Graphic.LUTFormat, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"title":"Export","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/writelut(layout:)","title":"func writeLUT(layout: Graphic.LUTLayout) async throws -> Data","type":"method"},{"title":"Apply","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(with:layout:)","title":"func applyLUT(with: Graphic, layout: Graphic.LUTLayout?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(url:)","title":"func applyLUT(url: URL) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(named:format:)","title":"func applyLUT(named: String, format: Graphic.LUTFormat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/applylut(named:in:format:)","title":"func applyLUT(named: String, in: Bundle, format: Graphic.LUTFormat) async throws -> Graphic","type":"method"},{"title":"Identity","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/identitylut(size:layout:options:)","title":"static func identityLUT(size: Int, layout: Graphic.LUTLayout, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Size","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut()","title":"func sizeOfLUT() throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(url:)","title":"static func sizeOfLUT(url: URL) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(data:format:)","title":"static func sizeOfLUT(data: Data, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(named:format:)","title":"static func sizeOfLUT(named: String, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sizeoflut(named:in:format:)","title":"static func sizeOfLUT(named: String, in: Bundle, format: Graphic.LUTFormat) throws -> Int","type":"method"},{"title":"Layout","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/layoutoflut()","title":"func layoutOfLUT() throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(size:)","title":"static func idealLayoutOfLUT(size: Int) -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(url:)","title":"static func idealLayoutOfLUT(url: URL) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(data:format:)","title":"static func idealLayoutOfLUT(data: Data, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(named:format:)","title":"static func idealLayoutOfLUT(named: String, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/ideallayoutoflut(named:in:format:)","title":"static func idealLayoutOfLUT(named: String, in: Bundle, format: Graphic.LUTFormat) throws -> Graphic.LUTLayout","type":"method"},{"title":"Sample","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/sampleoflut(at:layout:)","title":"func sampleOfLUT(at: Int, layout: Graphic.LUTLayout) async throws -> Graphic","type":"method"},{"title":"Structs","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/linear","title":"case linear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/square","title":"case square","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutlayout","title":"Graphic.LUTLayout","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/cube","title":"case cube","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/lutformat","title":"Graphic.LUTFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/badcolorcount","title":"case badColorCount","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/corruptformat","title":"case corruptFormat","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/datatostringfailed","title":"case dataToStringFailed","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/filenotfound","title":"case fileNotFound","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/indexoutofbounds","title":"case indexOutOfBounds","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnonsquareaspectratio","title":"case resolutionIsNonSquareAspectRatio","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnotlinear","title":"case resolutionIsNotLinear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionisnotpoweroftwo","title":"case resolutionIsNotPowerOfTwo","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/resolutionunknown","title":"case resolutionUnknown","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizecorrupt","title":"case sizeCorrupt","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizenotapoweroftwo","title":"case sizeNotAPowerOfTwo","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/sizenotfound","title":"case sizeNotFound","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/toolargesize","title":"case tooLargeSize","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/toosmallsize","title":"case tooSmallSize","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/unknownformat","title":"case unknownFormat","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/luterror","title":"Graphic.LUTError","type":"enum"}],"path":"\/documentation\/asyncgraphics\/luts","title":"LUTs","type":"symbol"},{"title":"Views","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agview\/init(_:)","title":"init(() -> AGGraph)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(activationpoint:)-4gjdu","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(activationpoint:)-4p1yz","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(named:_:)-4c0ps","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(named:_:)-6z4k0","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(named:_:)-7sru5","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityactivationpoint(_:)-5r0xn","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityactivationpoint(_:)-7kp12","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-2xmuo","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-4iyhh","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-4nhlg","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-6esjy","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-6r5vf","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-6t3dn","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-7m9ya","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-8l0nd","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhint(_:)-3b8gz","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhint(_:)-4x29n","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhint(_:)-5oti6","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityinputlabels(_:)-4hlz6","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityinputlabels(_:)-8qpwz","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityinputlabels(_:)-9a5l8","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabel(_:)-1u9zn","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabel(_:)-8bmvz","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabel(_:)-ythy","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-5ejtw","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-7jnui","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-8iccq","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-96o2i","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1b59h","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3wmvm","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4rqxk","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9jv6f","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-6xzoy","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-8gwpx","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-926l","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-9erdw","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-68uhz","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-7u2vy","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-8ax0u","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-yzab","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityvalue(_:)-6l4p9","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityvalue(_:)-8xb09","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityvalue(_:)-umdp","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:)-4g2c6","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:)-9jixb","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:)-9q2p4","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:message:)-4osgg","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:message:)-5c18z","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:message:)-6u29i","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:)-3mzmw","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:)-64fjq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:)-6sd9n","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:message:)-41g0c","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:message:)-8amex","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:message:)-9t3v7","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alignmentguide(_:computevalue:)-431pj","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alignmentguide(_:computevalue:)-7xgbk","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/aspectratio(_:contentmode:)-8jbsr","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/aspectratio(_:contentmode:)-96ahx","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(_:in:fillstyle:)-1j7zn","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(_:in:fillstyle:)-92ftn","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(in:fillstyle:)-3vlc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(in:fillstyle:)-6zey5","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-41gds","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-4znof","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-506ph","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-94h3y","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/buttonstyle(_:)-4yif1","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/buttonstyle(_:)-4z3t8","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2qdi0","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7qpin","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-cxxt","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1lszd","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1xo2t","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-rwj4","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-616rs","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7pyzo","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-855zl","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3225z","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3b2d","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3etfu","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentmargins(_:_:for:)-61ank","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentmargins(_:_:for:)-9ku11","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogsuppressiontoggle(_:issuppressed:)-2xddk","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogsuppressiontoggle(_:issuppressed:)-4nz3w","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogsuppressiontoggle(_:issuppressed:)-5j2em","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogconfirmationlabel(_:)-1ymcq","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogconfirmationlabel(_:)-2azjq","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogconfirmationlabel(_:)-7h8ex","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogmessage(_:)-1qp3u","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogmessage(_:)-1y8fm","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogmessage(_:)-7lf26","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1k3mo","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-24o8f","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-11oq","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1kkkr","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4fdg3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-92h7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5pkvh","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9xgem","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporterfilenamelabel(_:)-79og2","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporterfilenamelabel(_:)-7kgux","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporterfilenamelabel(_:)-9hye","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedobject(_:)-12fmj","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedobject(_:)-5yvll","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedsceneobject(_:)-10n5d","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedsceneobject(_:)-3whdk","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedscenevalue(_:_:)-646nz","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedscenevalue(_:_:)-9gvxb","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedvalue(_:_:)-7sfx","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedvalue(_:_:)-uwag","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/geometry(frame:in:)","title":"func geometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/geometry(origin:in:)","title":"func geometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/geometry(size:)","title":"func geometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/help(_:)-27jl7","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/help(_:)-2gxgs","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/help(_:)-5ouog","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:)-2zmlt","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:)-81p39","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-6yb3m","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-79asd","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-8z9fx","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-9cl0n","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listitemtint(_:)-66d4u","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listitemtint(_:)-6n5qk","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mapcamerakeyframeanimator(trigger:keyframes:)","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mapcontrolvisibility(_:)","title":"func mapControlVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mapcontrols(_:)","title":"func mapControls(() -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mapscope(_:)","title":"func mapScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mapstyle(_:)","title":"func mapStyle(MapStyle) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:)-2nimb","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:)-2xllt","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:)-4jlrb","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:displaymode:)-2361c","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:displaymode:)-3yhm7","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:displaymode:)-5wqks","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-3qeou","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-3r0y9","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-8vcnv","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-9kb2f","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsubtitle(_:)-143ze","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsubtitle(_:)-3drb1","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsubtitle(_:)-7xppw","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-54tzu","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-5gyg1","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-6p0o6","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-744ic","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-7njnq","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onchange(of:initial:_:)-1brzd","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onchange(of:initial:_:)-3qld9","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:delegate:)-61gsu","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:delegate:)-toy2","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-5iauz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-5wzd2","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-64ndf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-9af91","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onmapcamerachange(frequency:_:)-7uwrz","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onmapcamerachange(frequency:_:)-wbjk","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:perform:)-7hpfo","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:perform:)-7jd38","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:validator:perform:)-7lii3","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:validator:perform:)-8q1tt","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/padding(_:)-28edm","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/padding(_:)-3lce","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/readgeometry(frame:in:)","title":"func readGeometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/readgeometry(height:)","title":"func readGeometry(height: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/readgeometry(origin:in:)","title":"func readGeometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/readgeometry(size:)","title":"func readGeometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/readgeometry(width:)","title":"func readGeometry(width: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/readgeometry(x:in:)","title":"func readGeometry(x: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/readgeometry(y:in:)","title":"func readGeometry(y: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/renameaction(_:)-50sqq","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/renameaction(_:)-6dg7m","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareainset(edge:alignment:spacing:content:)-1606n","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareainset(edge:alignment:spacing:content:)-b3x9","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareapadding(_:)-1yq5","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareapadding(_:)-8o4me","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaleeffect(_:anchor:)-1fi0n","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaleeffect(_:anchor:)-9fkd8","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3pzy1","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4rd1o","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6qrdw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:placement:prompt:token:)-1o5me","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:placement:prompt:token:)-1rvzo","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:editabletokens:placement:prompt:token:)-6cyhm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:ispresented:placement:prompt:)-2rr4o","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:ispresented:placement:prompt:)-6thtl","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:ispresented:placement:prompt:)-9pzzb","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:)-41niy","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:)-5q9fi","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:)-8eent","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:suggestions:)-8fylz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:suggestions:)-94rvz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:suggestions:)-9to2w","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:ispresented:placement:prompt:token:)-16bkm","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6x9by","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8qhd2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:placement:prompt:token:)-4as8d","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:placement:prompt:token:)-6jyl4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:placement:prompt:token:)-8t0bd","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-16r9z","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-58au8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-83x9v","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4zywn","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7vpd5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9pvvx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(content:)-2n0af","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(content:)-877un","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/typeselectequivalent(_:)-4eymc","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/typeselectequivalent(_:)-4kpy1","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/typeselectequivalent(_:)-8fll2","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/typesettinglanguage(_:isenabled:)-2zmnp","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/typesettinglanguage(_:isenabled:)-73qqa","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/agview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agview","title":"AGView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicview\/init(graphic:interpolation:extendeddynamicrange:renderupdate:)","title":"init(graphic: Graphic, interpolation: Graphic.ViewInterpolation, extendedDynamicRange: Bool, renderUpdate: ((GraphicRenderState) -> ())?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(activationpoint:)-66ogw","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(activationpoint:)-67qi5","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(named:_:)-32pyy","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(named:_:)-8q0f2","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(named:_:)-9f5or","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityactivationpoint(_:)-1bdx0","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityactivationpoint(_:)-7a1dx","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-1rafj","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-21dpy","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-24fs3","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-45ss1","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-4sw66","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-4z4w5","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-6va5b","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-7ts9s","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhint(_:)-66bok","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhint(_:)-84gk3","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhint(_:)-f8vb","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityinputlabels(_:)-1yqde","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityinputlabels(_:)-3uru8","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityinputlabels(_:)-921aw","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabel(_:)-1044m","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabel(_:)-6colx","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabel(_:)-8wx7j","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-18de7","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-7n1u3","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-8hnd2","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-8zhog","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-24j3n","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7yabl","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9jvtx","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-yt1s","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-2l0se","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-2ntar","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-5pfox","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-9nvm4","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-1kir1","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-3v7j5","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-7n7wv","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-8ou8g","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityvalue(_:)-6by7u","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityvalue(_:)-cy1l","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityvalue(_:)-pwf1","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:)-553tn","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:)-7on9w","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:)-9e5ak","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:message:)-14uen","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:message:)-1e6rk","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:message:)-6hhte","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:)-42xwe","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:)-4wt1x","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:)-8a7u6","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:message:)-2qom0","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:message:)-6eum","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:message:)-9aqfk","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alignmentguide(_:computevalue:)-4m6co","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alignmentguide(_:computevalue:)-78xxs","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/aspectratio(_:contentmode:)-11zoo","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/aspectratio(_:contentmode:)-62pbv","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:in:fillstyle:)-4rids","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:in:fillstyle:)-6874i","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(in:fillstyle:)-7fz4e","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(in:fillstyle:)-9kmnc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-4dstu","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-6mxyv","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-7li77","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-7t6uh","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/buttonstyle(_:)-5q4fu","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/buttonstyle(_:)-5w8b3","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-19qli","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4vp79","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5dg36","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-60hpo","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6200u","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-97u7e","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-17wsd","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6k8gm","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-95pv6","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-60i2h","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-727vm","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7q1a1","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentmargins(_:_:for:)-5yrvx","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentmargins(_:_:for:)-7a4it","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogsuppressiontoggle(_:issuppressed:)-1maw9","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogsuppressiontoggle(_:issuppressed:)-7rv8l","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogsuppressiontoggle(_:issuppressed:)-8ua2j","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogconfirmationlabel(_:)-1ht8w","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogconfirmationlabel(_:)-5h3vu","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogconfirmationlabel(_:)-9vn2p","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogmessage(_:)-6ulqq","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogmessage(_:)-7ym9q","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogmessage(_:)-h83g","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-40vzx","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5rg2v","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-48515","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-68dbf","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3xwf8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-586ca","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3syy0","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3xwn9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporterfilenamelabel(_:)-1tutk","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporterfilenamelabel(_:)-2puq6","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporterfilenamelabel(_:)-9yaxz","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedobject(_:)-8dsod","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedobject(_:)-8rocl","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedsceneobject(_:)-5fqa1","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedsceneobject(_:)-rt3i","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedscenevalue(_:_:)-6dm8i","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedscenevalue(_:_:)-uy75","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedvalue(_:_:)-50msu","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedvalue(_:_:)-603ej","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/geometry(frame:in:)","title":"func geometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/geometry(origin:in:)","title":"func geometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/geometry(size:)","title":"func geometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/help(_:)-35est","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/help(_:)-7uumd","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/help(_:)-8txeq","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:)-2dhsv","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:)-78a69","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-1lb7n","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-2uhao","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-3qu4q","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-4flg4","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listitemtint(_:)-4gi3y","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listitemtint(_:)-8chfr","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mapcamerakeyframeanimator(trigger:keyframes:)","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mapcontrolvisibility(_:)","title":"func mapControlVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mapcontrols(_:)","title":"func mapControls(() -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mapscope(_:)","title":"func mapScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mapstyle(_:)","title":"func mapStyle(MapStyle) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:)-1u4im","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:)-3fvox","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:)-4arj9","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:displaymode:)-315ph","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:displaymode:)-492ec","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:displaymode:)-dp6f","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-2422i","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-6ib5l","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-6r3zi","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-7gf7k","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsubtitle(_:)-5g1lq","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsubtitle(_:)-8brgp","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsubtitle(_:)-r510","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-1osui","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-7kj38","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-867pd","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-93vlf","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-9a58","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onchange(of:initial:_:)-4e2k3","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onchange(of:initial:_:)-7j9o8","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:delegate:)-5rj32","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:delegate:)-668yq","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-3fpdn","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-60j56","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-7mjja","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-7y5ug","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onmapcamerachange(frequency:_:)-4pyeg","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onmapcamerachange(frequency:_:)-6o5g7","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:perform:)-7pamr","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:perform:)-905fv","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:validator:perform:)-6opnw","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:validator:perform:)-6wy3g","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/padding(_:)-19s7e","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/padding(_:)-2ssz9","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/readgeometry(frame:in:)","title":"func readGeometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/readgeometry(height:)","title":"func readGeometry(height: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/readgeometry(origin:in:)","title":"func readGeometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/readgeometry(size:)","title":"func readGeometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/readgeometry(width:)","title":"func readGeometry(width: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/readgeometry(x:in:)","title":"func readGeometry(x: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/readgeometry(y:in:)","title":"func readGeometry(y: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/renameaction(_:)-170c0","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/renameaction(_:)-9cvhp","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareainset(edge:alignment:spacing:content:)-7uiq1","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareainset(edge:alignment:spacing:content:)-8b9jg","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareapadding(_:)-4pcu3","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareapadding(_:)-6f6nh","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaleeffect(_:anchor:)-1yb99","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaleeffect(_:anchor:)-whox","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1qb9q","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7mb0a","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-925w","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:placement:prompt:token:)-41cpc","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:placement:prompt:token:)-osom","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:editabletokens:placement:prompt:token:)-yywm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:ispresented:placement:prompt:)-2le17","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:ispresented:placement:prompt:)-48lgo","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:ispresented:placement:prompt:)-6hiv8","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:)-2b0oo","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:)-6je7j","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:)-6trv3","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:suggestions:)-1mljh","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:suggestions:)-2eh70","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:suggestions:)-87u3b","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-14uuh","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6fnbe","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9eqmw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:placement:prompt:token:)-3pbns","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:placement:prompt:token:)-5avjs","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:placement:prompt:token:)-5r6s2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-20she","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2pa2q","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5pazf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-30tfu","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-633e1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9986a","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(content:)-4misg","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(content:)-98kuf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/typeselectequivalent(_:)-3nc3d","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/typeselectequivalent(_:)-713u5","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/typeselectequivalent(_:)-7zjf1","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/typesettinglanguage(_:isenabled:)-3p4w3","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/typesettinglanguage(_:isenabled:)-7q08w","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicview","title":"GraphicView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/init(graphic3d:interpolation:extendeddynamicrange:renderupdate:)","title":"init(graphic3D: Graphic3D, interpolation: Graphic.ViewInterpolation, extendedDynamicRange: Bool, renderUpdate: ((Graphic3DRenderState) -> ())?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(activationpoint:)-3kwgx","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(activationpoint:)-98yjc","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaction(named:_:)-2t62i","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaction(named:_:)-7ua5g","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaction(named:_:)-8rdsc","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityactivationpoint(_:)-55n30","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityactivationpoint(_:)-6fi3a","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-17aml","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-1u5zo","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-53ski","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-7hrha","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-84tbx","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-8xhnf","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-9d337","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-kyly","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityhint(_:)-28rpq","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityhint(_:)-6czoh","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityhint(_:)-8rthh","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityinputlabels(_:)-63p6x","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityinputlabels(_:)-7vb0o","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityinputlabels(_:)-7wb2b","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitylabel(_:)-6n95d","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitylabel(_:)-7jiwt","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitylabel(_:)-7jkmj","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:)-4gwdp","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:)-8llk2","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:)-9rzr7","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:)-qw1v","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1wead","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6zm6p","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7ciz4","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7eve9","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entrylabel:)-56dga","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entrylabel:)-6srh7","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entrylabel:)-8zsyn","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entrylabel:)-9uju1","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:textranges:)-4nep7","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:textranges:)-5b0dx","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:textranges:)-6n6ep","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:textranges:)-94b0","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityvalue(_:)-1nkhi","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityvalue(_:)-4x98","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityvalue(_:)-6wpz7","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:)-2bq99","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:)-4e4p","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:)-5itd5","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:message:)-1zmgz","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:message:)-79b0x","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:message:)-8gxi2","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:)-2akc9","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:)-4qymu","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:)-7civo","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:message:)-1mdq5","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:message:)-9co7b","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:message:)-9nn5k","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alignmentguide(_:computevalue:)-1oh9r","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alignmentguide(_:computevalue:)-30zzw","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/aspectratio(_:contentmode:)-1nrdv","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/aspectratio(_:contentmode:)-e3qb","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(_:in:fillstyle:)-8847t","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(_:in:fillstyle:)-9n3cl","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(in:fillstyle:)-3lg3c","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(in:fillstyle:)-5iszt","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/badge(_:)-1anvc","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/badge(_:)-5lj96","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/badge(_:)-5sq4s","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/badge(_:)-70nb3","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/buttonstyle(_:)-752yr","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/buttonstyle(_:)-8272j","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-19mkp","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6nxtj","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7wfjm","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-37tc9","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5xz89","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8ip9h","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3qc1h","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4f74b","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4owu0","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1avi3","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4x52o","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8hdqg","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contentmargins(_:_:for:)-2tbyo","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contentmargins(_:_:for:)-8m3z8","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/dialogsuppressiontoggle(_:issuppressed:)-2i1yr","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/dialogsuppressiontoggle(_:issuppressed:)-394wa","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/dialogsuppressiontoggle(_:issuppressed:)-3ecc1","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filedialogconfirmationlabel(_:)-12tl3","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filedialogconfirmationlabel(_:)-7x56w","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filedialogconfirmationlabel(_:)-8mnxa","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filedialogmessage(_:)-1lrll","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filedialogmessage(_:)-4ejsu","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filedialogmessage(_:)-8bpp6","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2bqtz","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2djot","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-86gxq","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-arus","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-780ln","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7lrpw","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2qy89","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2y88j","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporterfilenamelabel(_:)-2qlc5","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporterfilenamelabel(_:)-7z7q7","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporterfilenamelabel(_:)-m0v5","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedobject(_:)-57mli","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedobject(_:)-8opey","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedsceneobject(_:)-5kye6","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedsceneobject(_:)-9roo","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedscenevalue(_:_:)-519l5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedscenevalue(_:_:)-7cxkd","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedvalue(_:_:)-53qf1","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedvalue(_:_:)-9d90h","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/geometry(frame:in:)","title":"func geometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/geometry(origin:in:)","title":"func geometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/geometry(size:)","title":"func geometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/help(_:)-3j2gk","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/help(_:)-5wyj1","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/help(_:)-7rf1y","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/keyboardshortcut(_:)-4jabe","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/keyboardshortcut(_:)-9npgl","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linelimit(_:)-4pn4r","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linelimit(_:)-68hk3","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linelimit(_:)-6qbj4","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linelimit(_:)-8a2bz","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listitemtint(_:)-69p9f","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listitemtint(_:)-7ccne","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/mapcamerakeyframeanimator(trigger:keyframes:)","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/mapcontrolvisibility(_:)","title":"func mapControlVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/mapcontrols(_:)","title":"func mapControls(() -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/mapscope(_:)","title":"func mapScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/mapstyle(_:)","title":"func mapStyle(MapStyle) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:)-192a6","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:)-4xciw","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:)-65otp","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:displaymode:)-1w9px","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:displaymode:)-4wj2a","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:displaymode:)-6j9zi","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdocument(_:preview:)-116sx","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdocument(_:preview:)-40qra","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdocument(_:preview:)-63j2l","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdocument(_:preview:)-9z9wj","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsubtitle(_:)-57kn1","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsubtitle(_:)-5utsj","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsubtitle(_:)-7jwsi","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationtitle(_:)-3cbb8","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationtitle(_:)-3wn4r","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationtitle(_:)-72rcc","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationtitle(_:)-7xrso","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationtitle(_:)-8o2ec","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onchange(of:initial:_:)-68bt5","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onchange(of:initial:_:)-8hxxx","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:delegate:)-8jqs3","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:delegate:)-q466","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:istargeted:perform:)-2aphy","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:istargeted:perform:)-555j6","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:istargeted:perform:)-81e14","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:istargeted:perform:)-85ha1","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onmapcamerachange(frequency:_:)-7dswo","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onmapcamerachange(frequency:_:)-8z7jy","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/onpastecommand(of:perform:)-3m4oc","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onpastecommand(of:perform:)-90zgs","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onpastecommand(of:validator:perform:)-3um80","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/onpastecommand(of:validator:perform:)-4fywb","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/padding(_:)-13tdi","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/padding(_:)-8lu8e","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/readgeometry(frame:in:)","title":"func readGeometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/readgeometry(height:)","title":"func readGeometry(height: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/readgeometry(origin:in:)","title":"func readGeometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/readgeometry(size:)","title":"func readGeometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/readgeometry(width:)","title":"func readGeometry(width: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/readgeometry(x:in:)","title":"func readGeometry(x: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/readgeometry(y:in:)","title":"func readGeometry(y: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/renameaction(_:)-48xfv","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/renameaction(_:)-8ew5p","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/safeareainset(edge:alignment:spacing:content:)-3teey","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/safeareainset(edge:alignment:spacing:content:)-86rbt","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/safeareapadding(_:)-85pus","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/safeareapadding(_:)-xg0c","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scaleeffect(_:anchor:)-4498i","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scaleeffect(_:anchor:)-9hawl","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2ite8","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4kkwu","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-52rag","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:editabletokens:placement:prompt:token:)-6kwvo","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:editabletokens:placement:prompt:token:)-8h1fa","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:editabletokens:placement:prompt:token:)-8h668","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:ispresented:placement:prompt:)-1sm3g","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:ispresented:placement:prompt:)-3hzht","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:ispresented:placement:prompt:)-88pi1","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:)-3macx","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:)-77mfo","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:)-7wcll","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:suggestions:)-1sos9","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:suggestions:)-3v772","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:suggestions:)-3xoit","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:ispresented:placement:prompt:token:)-1g54u","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5yp2x","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6zs2v","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:placement:prompt:token:)-6z021","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:placement:prompt:token:)-ay7x","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:placement:prompt:token:)-nuit","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1ar1q","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2dooy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3lujz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-443qr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5p1bw","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7jxwc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbar(content:)-2da8i","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbar(content:)-2uf91","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/typeselectequivalent(_:)-2hvts","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/typeselectequivalent(_:)-443ac","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/typeselectequivalent(_:)-4gzez","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/typesettinglanguage(_:isenabled:)-32znv","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/typesettinglanguage(_:isenabled:)-7blwg","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3dview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3dview","title":"Graphic3DView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/init(resolution:graphic:)","title":"init(resolution: CGSize?, graphic: () async throws -> Graphic)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(activationpoint:)-7kq5n","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(activationpoint:)-7n0ga","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaction(named:_:)-6gq6w","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaction(named:_:)-8od6v","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaction(named:_:)-9nw7t","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityactivationpoint(_:)-2avbw","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityactivationpoint(_:)-8c3vu","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-1dupc","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-1y838","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-2dtfw","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-3to2n","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-3um89","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-3y7if","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-5f4ud","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitycustomcontent(_:_:importance:)-92if4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityhint(_:)-42dtf","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityhint(_:)-6qm2n","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityhint(_:)-9qd1h","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityinputlabels(_:)-1schv","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityinputlabels(_:)-4mpqq","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityinputlabels(_:)-70bmr","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitylabel(_:)-3cizn","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitylabel(_:)-5hgtw","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitylabel(_:)-6ojjs","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:)-1xge5","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:)-43gqr","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:)-92vot","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:)-maw","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3lf7l","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3q0dy","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4yeqz","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-jv6w","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entrylabel:)-3kf2n","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entrylabel:)-8q5fp","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entrylabel:)-etj9","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:entries:entrylabel:)-zbte","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:textranges:)-36bsx","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:textranges:)-39tn9","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:textranges:)-518mb","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotor(_:textranges:)-tyec","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityvalue(_:)-1hsjg","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityvalue(_:)-4vijp","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityvalue(_:)-5t4ki","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:)-1pcv6","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:)-6qewz","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:)-8el2h","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:message:)-24cd8","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:message:)-2ac3q","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:actions:message:)-452kn","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:)-10pz","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:)-6t0bl","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:)-894xf","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:message:)-1x374","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:message:)-4bxiz","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(_:ispresented:presenting:actions:message:)-8hulf","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alignmentguide(_:computevalue:)-2jdl","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alignmentguide(_:computevalue:)-9lw98","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/aspectratio(_:contentmode:)-7yblw","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/aspectratio(_:contentmode:)-996pv","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(_:in:fillstyle:)-6yxy8","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(_:in:fillstyle:)-816b","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(in:fillstyle:)-2ekkv","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/background(in:fillstyle:)-8klpc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/badge(_:)-4pv6v","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/badge(_:)-9a2bu","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/badge(_:)-9lqy","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/badge(_:)-mb8m","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/buttonstyle(_:)-5y60r","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/buttonstyle(_:)-u0hs","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3khdk","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7z96m","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9vxtp","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3ilvf","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5r1fs","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7qsnj","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-460bw","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6ep9e","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-aer8","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6rze1","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7kp4","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9gtd5","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contentmargins(_:_:for:)-4l39r","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contentmargins(_:_:for:)-91the","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogsuppressiontoggle(_:issuppressed:)-1ab0x","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogsuppressiontoggle(_:issuppressed:)-1jqnf","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogsuppressiontoggle(_:issuppressed:)-8w0m5","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogconfirmationlabel(_:)-16yko","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogconfirmationlabel(_:)-7y6j8","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogconfirmationlabel(_:)-fzn2","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogmessage(_:)-1zohl","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogmessage(_:)-3jk8p","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogmessage(_:)-7zqar","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1g47p","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4xtgu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-3ncn8","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-528ho","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-65ixf","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-eum4","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-598jl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5zkuj","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporterfilenamelabel(_:)-4btmg","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporterfilenamelabel(_:)-73b5w","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileexporterfilenamelabel(_:)-9bsaj","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedobject(_:)-36fuu","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedobject(_:)-5etg8","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedsceneobject(_:)-1odnh","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedsceneobject(_:)-68bes","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedscenevalue(_:_:)-1x0z3","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedscenevalue(_:_:)-4l9qo","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedvalue(_:_:)-3hsj3","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/focusedvalue(_:_:)-3scec","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/geometry(frame:in:)","title":"func geometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/geometry(origin:in:)","title":"func geometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/geometry(size:)","title":"func geometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/help(_:)-5v56y","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/help(_:)-6vii7","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/help(_:)-7yi29","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyboardshortcut(_:)-6x0u2","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyboardshortcut(_:)-7mipx","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linelimit(_:)-2fma4","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linelimit(_:)-2llu3","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linelimit(_:)-4h37v","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linelimit(_:)-o7t8","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listitemtint(_:)-234px","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listitemtint(_:)-5b50s","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mapcamerakeyframeanimator(trigger:keyframes:)","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mapcontrolvisibility(_:)","title":"func mapControlVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mapcontrols(_:)","title":"func mapControls(() -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mapscope(_:)","title":"func mapScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mapstyle(_:)","title":"func mapStyle(MapStyle) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:)-4wir8","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:)-5188b","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:)-732n2","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:displaymode:)-5lj9u","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:displaymode:)-5ux3o","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationbartitle(_:displaymode:)-9me0q","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdocument(_:preview:)-4hykh","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdocument(_:preview:)-4xqq8","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdocument(_:preview:)-5krnj","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationdocument(_:preview:)-btip","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsubtitle(_:)-2jgyz","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsubtitle(_:)-6fcz2","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationsubtitle(_:)-6m6qq","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationtitle(_:)-1e7kw","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationtitle(_:)-1mx05","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationtitle(_:)-4dv06","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationtitle(_:)-59db7","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationtitle(_:)-94t1b","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onchange(of:initial:_:)-27th7","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onchange(of:initial:_:)-54uzp","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:delegate:)-6k4lq","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:delegate:)-79wne","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:istargeted:perform:)-42alh","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:istargeted:perform:)-83q5l","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:istargeted:perform:)-9t2ca","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ondrop(of:istargeted:perform:)-pvwb","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onmapcamerachange(frequency:_:)-285zp","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onmapcamerachange(frequency:_:)-98340","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onpastecommand(of:perform:)-4ueri","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onpastecommand(of:perform:)-5gexg","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onpastecommand(of:validator:perform:)-6z7fc","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onpastecommand(of:validator:perform:)-83iuh","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/padding(_:)-18bk6","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/padding(_:)-92845","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/readgeometry(frame:in:)","title":"func readGeometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/readgeometry(height:)","title":"func readGeometry(height: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/readgeometry(origin:in:)","title":"func readGeometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/readgeometry(size:)","title":"func readGeometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/readgeometry(width:)","title":"func readGeometry(width: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/readgeometry(x:in:)","title":"func readGeometry(x: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/readgeometry(y:in:)","title":"func readGeometry(y: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/renameaction(_:)-1ci6b","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/renameaction(_:)-3bi7n","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/safeareainset(edge:alignment:spacing:content:)-4n75u","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/safeareainset(edge:alignment:spacing:content:)-8ffbb","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/safeareapadding(_:)-1eooz","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/safeareapadding(_:)-42178","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scaleeffect(_:anchor:)-6d2gr","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scaleeffect(_:anchor:)-d5df","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6k31l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-74ue5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-nsik","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:placement:prompt:token:)-7jm4u","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:placement:prompt:token:)-7jqrc","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:editabletokens:placement:prompt:token:)-88hud","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:ispresented:placement:prompt:)-1ho8k","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:ispresented:placement:prompt:)-1whrz","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:ispresented:placement:prompt:)-6f6uu","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:)-19bso","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:)-61u33","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:)-97zuh","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:suggestions:)-1tilc","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:suggestions:)-51905","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:placement:prompt:suggestions:)-8h9cr","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-64sj6","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8o2g2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:ispresented:placement:prompt:token:)-lc36","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:placement:prompt:token:)-1zbij","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:placement:prompt:token:)-9pp2z","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:placement:prompt:token:)-nxs6","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-16h1d","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-47ylf","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-oadv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2ejg1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8iyqw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8k8q9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbar(content:)-86b3p","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbar(content:)-zdmu","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/typeselectequivalent(_:)-78oho","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/typeselectequivalent(_:)-gozk","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/typeselectequivalent(_:)-nitg","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/typesettinglanguage(_:isenabled:)-1y1m4","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/typesettinglanguage(_:isenabled:)-4o7y6","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/asyncgraphicview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/asyncgraphicview","title":"AsyncGraphicView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/init(renderer:)","title":"init(renderer: GraphicViewRenderer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(activationpoint:)-73qqw","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(activationpoint:)-gwl5","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityaction(named:_:)-7a014","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityaction(named:_:)-7oxqv","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityaction(named:_:)-7s7kh","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityactivationpoint(_:)-2gqq5","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityactivationpoint(_:)-3pgfy","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitycustomcontent(_:_:importance:)-2e246","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitycustomcontent(_:_:importance:)-2gknf","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitycustomcontent(_:_:importance:)-3tcnz","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitycustomcontent(_:_:importance:)-4zqrw","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitycustomcontent(_:_:importance:)-5hmow","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitycustomcontent(_:_:importance:)-6y8fe","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitycustomcontent(_:_:importance:)-7v365","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitycustomcontent(_:_:importance:)-8nayf","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityhint(_:)-1x0qs","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityhint(_:)-4350z","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityhint(_:)-7mx95","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityinputlabels(_:)-6ecoz","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityinputlabels(_:)-74mbf","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityinputlabels(_:)-7muys","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitylabel(_:)-6zv48","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitylabel(_:)-7bsdm","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitylabel(_:)-8fc07","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:)-1gpfz","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:)-5plot","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:)-8w1s4","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:)-96vt4","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:entryid:entrylabel:)-64p8z","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6ukl8","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7h3uq","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8tgnw","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:entrylabel:)-2kdm4","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:entrylabel:)-4ihv2","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:entrylabel:)-9y5cf","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:entries:entrylabel:)-s80f","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:textranges:)-15tip","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:textranges:)-2w3yh","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:textranges:)-4pa77","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotor(_:textranges:)-7ssw3","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityvalue(_:)-5dx8v","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityvalue(_:)-6mfk5","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityvalue(_:)-9ngd1","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:actions:)-2vmg1","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:actions:)-4q3cx","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:actions:)-yy1j","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:actions:message:)-1b710","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:actions:message:)-4sypz","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:actions:message:)-8b4nm","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:presenting:actions:)-1c1tw","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:presenting:actions:)-37zh4","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:presenting:actions:)-5s3m2","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:presenting:actions:message:)-3418b","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:presenting:actions:message:)-4y5pn","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(_:ispresented:presenting:actions:message:)-88d2j","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alignmentguide(_:computevalue:)-8fan3","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alignmentguide(_:computevalue:)-lmv0","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/aspectratio(_:contentmode:)-1bn72","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/aspectratio(_:contentmode:)-68djb","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/background(_:in:fillstyle:)-5t0gr","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/background(_:in:fillstyle:)-9lkxz","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/background(in:fillstyle:)-3y7ej","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/background(in:fillstyle:)-5q0fy","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/badge(_:)-3p81f","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/badge(_:)-55sxj","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/badge(_:)-7f36m","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/badge(_:)-ldkx","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/buttonstyle(_:)-2bnxw","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/buttonstyle(_:)-4q0qe","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2c0sw","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-776oi","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-97a3z","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3vude","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6g66l","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6ixh5","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2lyhd","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7gmbr","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-c5iq","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4h8js","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7zdt7","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-e64p","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/contentmargins(_:_:for:)-5w3jh","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/contentmargins(_:_:for:)-8ffiv","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/dialogsuppressiontoggle(_:issuppressed:)-1m55c","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/dialogsuppressiontoggle(_:issuppressed:)-7ymup","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/dialogsuppressiontoggle(_:issuppressed:)-9ozga","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filedialogconfirmationlabel(_:)-3gqca","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filedialogconfirmationlabel(_:)-3j40u","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filedialogconfirmationlabel(_:)-3mhf2","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filedialogmessage(_:)-1tiuh","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filedialogmessage(_:)-4bez2","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filedialogmessage(_:)-l5ow","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5hz0o","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-68cm4","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-3szms","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4e0i1","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1pbdz","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9fami","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2rke0","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5ghim","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporterfilenamelabel(_:)-21vb9","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporterfilenamelabel(_:)-3yoq7","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileexporterfilenamelabel(_:)-8s6ge","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusedobject(_:)-3yu2u","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusedobject(_:)-914s0","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusedsceneobject(_:)-729if","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusedsceneobject(_:)-79ger","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusedscenevalue(_:_:)-6syz5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusedscenevalue(_:_:)-90hh6","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusedvalue(_:_:)-531y","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/focusedvalue(_:_:)-7vr1f","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/geometry(frame:in:)","title":"func geometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/geometry(origin:in:)","title":"func geometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/geometry(size:)","title":"func geometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/help(_:)-1dhbc","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/help(_:)-584sl","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/help(_:)-7ztml","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/keyboardshortcut(_:)-1c8bj","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/keyboardshortcut(_:)-tyja","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/linelimit(_:)-1pm0d","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/linelimit(_:)-2q4zx","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/linelimit(_:)-4u77p","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/linelimit(_:)-68uek","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/listitemtint(_:)-2rbrc","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/listitemtint(_:)-4rowi","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/mapcamerakeyframeanimator(trigger:keyframes:)","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/mapcontrolvisibility(_:)","title":"func mapControlVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/mapcontrols(_:)","title":"func mapControls(() -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/mapscope(_:)","title":"func mapScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/mapstyle(_:)","title":"func mapStyle(MapStyle) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationbartitle(_:)-20qvo","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationbartitle(_:)-317vc","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationbartitle(_:)-9pfxy","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationbartitle(_:displaymode:)-27azp","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationbartitle(_:displaymode:)-6czxv","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationbartitle(_:displaymode:)-7t496","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationdocument(_:preview:)-1bstn","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationdocument(_:preview:)-3j67r","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationdocument(_:preview:)-85yct","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationdocument(_:preview:)-xsvr","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationsubtitle(_:)-6gpar","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationsubtitle(_:)-8umi8","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationsubtitle(_:)-98aml","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationtitle(_:)-1fc3","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationtitle(_:)-69rmc","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationtitle(_:)-6rfua","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationtitle(_:)-7woek","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationtitle(_:)-h8du","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onchange(of:initial:_:)-4w8yb","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onchange(of:initial:_:)-7zlgd","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ondrop(of:delegate:)-35174","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ondrop(of:delegate:)-67dcf","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ondrop(of:istargeted:perform:)-2odpb","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ondrop(of:istargeted:perform:)-60vx4","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ondrop(of:istargeted:perform:)-61yas","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ondrop(of:istargeted:perform:)-7eyhh","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onmapcamerachange(frequency:_:)-7is9k","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onmapcamerachange(frequency:_:)-8fl3z","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onpastecommand(of:perform:)-5h569","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onpastecommand(of:perform:)-9wh8m","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onpastecommand(of:validator:perform:)-49lyb","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onpastecommand(of:validator:perform:)-84l8o","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/padding(_:)-56xoq","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/padding(_:)-9qkxs","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/readgeometry(frame:in:)","title":"func readGeometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/readgeometry(height:)","title":"func readGeometry(height: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/readgeometry(origin:in:)","title":"func readGeometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/readgeometry(size:)","title":"func readGeometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/readgeometry(width:)","title":"func readGeometry(width: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/readgeometry(x:in:)","title":"func readGeometry(x: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/readgeometry(y:in:)","title":"func readGeometry(y: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/renameaction(_:)-8mnnv","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/renameaction(_:)-8w6kh","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/safeareainset(edge:alignment:spacing:content:)-98x9c","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/safeareainset(edge:alignment:spacing:content:)-o9z3","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/safeareapadding(_:)-22dgf","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/safeareapadding(_:)-nl38","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scaleeffect(_:anchor:)-2s8vs","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scaleeffect(_:anchor:)-mur3","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5abol","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-71yg0","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-75ze9","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:editabletokens:placement:prompt:token:)-21oeg","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:editabletokens:placement:prompt:token:)-45fw2","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:editabletokens:placement:prompt:token:)-9mvac","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:ispresented:placement:prompt:)-21obz","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:ispresented:placement:prompt:)-6aq5i","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:ispresented:placement:prompt:)-9g20m","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:placement:prompt:)-1sj3c","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:placement:prompt:)-1yndw","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:placement:prompt:)-2jps8","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:placement:prompt:suggestions:)-7kune","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:placement:prompt:suggestions:)-8ipnl","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:placement:prompt:suggestions:)-dxxk","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:ispresented:placement:prompt:token:)-26ld7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9kdut","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9lbpk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:placement:prompt:token:)-4tixy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:placement:prompt:token:)-54ntl","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:placement:prompt:token:)-pvvh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1yy7q","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7a9yg","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-nj3w","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6vpla","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8f5dk","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9xdgy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/toolbar(content:)-79cwt","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/toolbar(content:)-jf7r","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/typeselectequivalent(_:)-3or1e","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/typeselectequivalent(_:)-5381u","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/typeselectequivalent(_:)-8o56w","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/typesettinglanguage(_:isenabled:)-5l6m5","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/typesettinglanguage(_:isenabled:)-6d779","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicrenderview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicrenderview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicrenderview","title":"GraphicRenderView","type":"struct"},{"title":"View Renderers","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicviewrenderer\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicviewrenderer\/extendeddynamicrange","title":"let extendedDynamicRange: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicviewrenderer\/interpolation","title":"var interpolation: Graphic.ViewInterpolation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicviewrenderer\/display(graphic:)","title":"func display(graphic: Graphic) async throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicviewrenderer\/hide()","title":"func hide()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicviewrenderer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicviewrenderer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicviewrenderer","title":"GraphicViewRenderer","type":"class"},{"title":"Graphs","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/aggraph\/components-4wezt","title":"var components: AGComponents","type":"property"}],"title":"AGGraph Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/aggraph\/components-7l9kn","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraph\/aspectratio(_:contentmode:)-1ma72","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/aspectratio(_:contentmode:)-wwiq","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/background(_:)-3b2w8","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/background(_:)-8aygj","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/aggraph\/resolution(at:for:)-505ak","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"title":"AGGraph Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/aggraph\/resolution(at:for:)-29o3u","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggraph","title":"AGGraph","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/init(_:)","title":"init(Graphic)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/aspectratio(_:contentmode:)-36rks","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/aspectratio(_:contentmode:)-4f58l","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/background(_:)-2erpo","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/background(_:)-mwpa","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggraphic\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/==(_:_:)","title":"static func == (AGGraphic, AGGraphic) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/aggraphic\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphic\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggraphic\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aggraphic","title":"AGGraphic","type":"struct"},{"title":"Video","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framecount","title":"var frameCount: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framerate","title":"let frameRate: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/resolution","title":"let resolution: CGSize","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct","title":"GraphicVideoPlayer.Info","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/loop","title":"var loop: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/volume","title":"var volume: Double","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct","title":"GraphicVideoPlayer.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(named:fileextension:in:options:)","title":"convenience init(named: String, fileExtension: String, in: Bundle, options: GraphicVideoPlayer.Options) async throws","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(url:options:)","title":"init(url: URL, options: GraphicVideoPlayer.Options) async throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/frameindex","title":"var frameIndex: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.property","title":"var info: GraphicVideoPlayer.Info","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.property","title":"var options: GraphicVideoPlayer.Options","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/playing","title":"var playing: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seconds","title":"var seconds: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/time","title":"var time: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/play()","title":"func play()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-5hpoo","title":"func seek(to: Double)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-86zyw","title":"func seek(to: Int)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-8d3sm","title":"func seek(to: CMTime)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/startseek()","title":"func startSeek()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stop()","title":"func stop()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stopseek()","title":"func stopSeek()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/==(_:_:)","title":"static func == (GraphicVideoPlayer, GraphicVideoPlayer) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer","title":"GraphicVideoPlayer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/init(fps:kbps:format:codec:resolution:)","title":"init(fps: Double, kbps: Int, format: GraphicVideoRecorder.VideoFormat, codec: GraphicVideoRecorder.VideoCodec, resolution: CGSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/recording","title":"var recording: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/append(graphic:)","title":"func append(graphic: Graphic) async throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/start()","title":"func start() throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/stop()-2clbb","title":"func stop() async throws -> URL","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/stop()-8ms6j","title":"func stop() async throws -> Data","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/h264","title":"case h264","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/prores","title":"case proRes","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/type","title":"var type: AVVideoCodecType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videocodec","title":"GraphicVideoRecorder.VideoCodec","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/mov","title":"case mov","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/mp4","title":"case mp4","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/type","title":"var type: AVFileType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat","title":"GraphicVideoRecorder.VideoFormat","type":"enum"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder","title":"GraphicVideoRecorder","type":"class"},{"path":"\/documentation\/asyncgraphics\/graphicrecorder","title":"GraphicRecorder","type":"typealias"},{"title":"Layout","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/aspectratio(_:contentmode:)-3mf5r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/aspectratio(_:contentmode:)-7wngc","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/background(_:)-21oqw","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/background(_:)-4rvum","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agframe\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agframe\/==(_:_:)","title":"static func == (AGFrame, AGFrame) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agframe\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agframe","title":"AGFrame","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/init(alignment:with:)","title":"init(alignment: Graphic.ZStackAlignment, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-3fl80","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-7mj2r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-2bc10","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-8o6af","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agzstack\/==(_:_:)","title":"static func == (AGZStack, AGZStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agzstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agzstack","title":"AGZStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.VStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-1nji8","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-n0ph","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-3y07o","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-45lbw","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agvstack\/==(_:_:)","title":"static func == (AGVStack, AGVStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvstack","title":"AGVStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.HStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-4k5r9","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-6q9un","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-1wnkx","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-9do05","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/aghstack\/==(_:_:)","title":"static func == (AGHStack, AGHStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/aghstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aghstack","title":"AGHStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/init(minlength:)","title":"init(minLength: CGFloat)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/aspectratio(_:contentmode:)-7iz8s","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/aspectratio(_:contentmode:)-9o9qy","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/background(_:)-4ry8u","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/background(_:)-vbq4","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agspacer\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agspacer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agspacer","title":"AGSpacer","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/aspectratio(_:contentmode:)-4s594","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/aspectratio(_:contentmode:)-8ftnb","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/background(_:)-31qvd","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/background(_:)-59f2s","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agpadding\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agpadding\/==(_:_:)","title":"static func == (AGPadding, AGPadding) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agpadding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agpadding\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agpadding","title":"AGPadding","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/child","title":"var child: AGGraph","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/aspectratio(_:contentmode:)-204eh","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/aspectratio(_:contentmode:)-9mgji","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/background(_:)-81d6u","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/background(_:)-8h6j3","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agaspectratio\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/==(_:_:)","title":"static func == (AGAspectRatio, AGAspectRatio) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agaspectratio\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agaspectratio\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agaspectratio","title":"AGAspectRatio","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agoffset\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agoffset\/aspectratio(_:contentmode:)-1fdfq","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/aspectratio(_:contentmode:)-9vlg1","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/background(_:)-5odt7","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/background(_:)-xg0c","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agoffset\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agoffset\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agoffset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agoffset\/==(_:_:)","title":"static func == (AGOffset, AGOffset) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agoffset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agoffset\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agoffset\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agoffset","title":"AGOffset","type":"struct"},{"title":"Resources","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/init(_:)","title":"init(TMImage)","type":"init"},{"path":"\/documentation\/asyncgraphics\/agimage\/init(named:)","title":"init(named: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGImage","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/resizable()","title":"func resizable() -> AGImage","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/aspectratio(_:contentmode:)-7h56r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/aspectratio(_:contentmode:)-964kg","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/background(_:)-66nel","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/background(_:)-9b3ms","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agimage\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agimage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agimage","title":"AGImage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/init(with:)","title":"init(with: GraphicVideoPlayer)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resizable()","title":"func resizable() -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8hcdj","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8xa34","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-5k5vi","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-9u74n","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvideo\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvideo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvideo","title":"AGVideo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/init(_:)","title":"init(Graphic.CameraPosition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGCamera","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/resizable()","title":"func resizable() -> AGCamera","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/aspectratio(_:contentmode:)-49uqq","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/aspectratio(_:contentmode:)-r1na","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/background(_:)-29s3u","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/background(_:)-4oh03","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcamera\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agcamera\/==(_:_:)","title":"static func == (AGCamera, AGCamera) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcamera\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcamera\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcamera","title":"AGCamera","type":"struct"},{"title":"Shapes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/strokeborder(linewidth:)","title":"func strokeBorder(lineWidth: CGFloat) -> AGCircle","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/aspectratio(_:contentmode:)-67te1","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/aspectratio(_:contentmode:)-7ltzm","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/background(_:)-775pw","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/background(_:)-864oa","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcircle\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcircle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcircle","title":"AGCircle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/strokeborder(linewidth:)","title":"func strokeBorder(lineWidth: CGFloat) -> AGRectangle","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/aspectratio(_:contentmode:)-5tsmm","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/aspectratio(_:contentmode:)-90z9w","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/background(_:)-5j6vj","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/background(_:)-8vet1","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agrectangle\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agrectangle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agrectangle","title":"AGRectangle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/init(cornerradius:)","title":"init(cornerRadius: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/strokeborder(linewidth:)","title":"func strokeBorder(lineWidth: CGFloat) -> AGRoundedRectangle","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/aspectratio(_:contentmode:)-399yr","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/aspectratio(_:contentmode:)-9ohzb","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/background(_:)-5sj0o","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/background(_:)-5sp24","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agroundedrectangle","title":"AGRoundedRectangle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/init(count:)","title":"init(count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/aspectratio(_:contentmode:)-3a5lh","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/aspectratio(_:contentmode:)-ocbd","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/background(_:)-1vwvf","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/background(_:)-7cs7u","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agpolygon\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agpolygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agpolygon","title":"AGPolygon","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/init(count:cornerradius:)","title":"init(count: Int, cornerRadius: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/aspectratio(_:contentmode:)-2x0sf","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/aspectratio(_:contentmode:)-ewr1","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/background(_:)-8fjn2","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/background(_:)-8o7ej","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agroundedpolygon","title":"AGRoundedPolygon","type":"struct"},{"title":"Color","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/init(_:)","title":"init(PixelColor)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/aspectratio(_:contentmode:)-7ok3h","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/aspectratio(_:contentmode:)-95vps","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/background(_:)-4uidj","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/background(_:)-65u9r","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcolor\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcolor","title":"AGColor","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/aspectratio(_:contentmode:)-31lhq","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/aspectratio(_:contentmode:)-3dgda","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/background(_:)-1cd4u","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/background(_:)-36o60","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/==(_:_:)","title":"static func == (AGForegroundColor, AGForegroundColor) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor","title":"AGForegroundColor","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/aspectratio(_:contentmode:)-25w2c","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/aspectratio(_:contentmode:)-4k4w6","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/background(_:)-6ntmw","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/background(_:)-8u4p0","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/==(_:_:)","title":"static func == (AGBackgroundColor, AGBackgroundColor) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agbackgroundcolor\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agbackgroundcolor","title":"AGBackgroundColor","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/aspectratio(_:contentmode:)-3jbd5","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/aspectratio(_:contentmode:)-6tpt","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/background(_:)-596su","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/background(_:)-9xga2","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agborder\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agborder\/==(_:_:)","title":"static func == (AGBorder, AGBorder) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agborder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agborder\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agborder","title":"AGBorder","type":"struct"},{"title":"Effects","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/aspectratio(_:contentmode:)-45w68","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/aspectratio(_:contentmode:)-5bzfm","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/background(_:)-2y5ds","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/background(_:)-8cq2b","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblur\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agblur\/==(_:_:)","title":"static func == (AGBlur, AGBlur) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agblur\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblur\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agblur","title":"AGBlur","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/aspectratio(_:contentmode:)-38tpi","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/aspectratio(_:contentmode:)-4fpmr","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/background(_:)-4c775","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/background(_:)-qrlu","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agchannelmix\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/==(_:_:)","title":"static func == (AGChannelMix, AGChannelMix) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agchannelmix\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agchannelmix\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agchannelmix","title":"AGChannelMix","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/init(offset:depth:scale:octaves:seed:colored:random:)","title":"init(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, colored: Bool, random: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/aspectratio(_:contentmode:)-19tsw","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/aspectratio(_:contentmode:)-7dajj","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/background(_:)-36hm6","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/background(_:)-94or8","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agnoise\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agnoise\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agnoise","title":"AGNoise","type":"struct"},{"title":"Blending","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/aspectratio(_:contentmode:)-1008i","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/aspectratio(_:contentmode:)-8q124","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/background(_:)-8x001","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/background(_:)-95y6t","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblend\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agblend\/==(_:_:)","title":"static func == (AGBlend, AGBlend) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agblend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblend\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agblend","title":"AGBlend","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/aspectratio(_:contentmode:)-34zb4","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/aspectratio(_:contentmode:)-9w5jh","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/background(_:)-13rxm","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/background(_:)-89qt9","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblended\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agblended\/==(_:_:)","title":"static func == (AGBlended, AGBlended) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agblended\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblended\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agblended","title":"AGBlended","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/aspectratio(_:contentmode:)-5hotd","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/aspectratio(_:contentmode:)-8x18v","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/background(_:)-2vdzs","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/background(_:)-4ngm","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agmask\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agmask\/==(_:_:)","title":"static func == (AGMask, AGMask) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agmask\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agmask\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agmask","title":"AGMask","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/aspectratio(_:contentmode:)-2doab","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/aspectratio(_:contentmode:)-3i4x","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/background(_:)-6490p","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/background(_:)-73kwg","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agbackground\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agbackground\/==(_:_:)","title":"static func == (AGBackground, AGBackground) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agbackground\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agbackground\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agbackground","title":"AGBackground","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/aspectratio(_:contentmode:)-4kk7m","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/aspectratio(_:contentmode:)-6w8ro","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/background(_:)-3jxh0","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/background(_:)-8tvul","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agopacity\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agopacity\/==(_:_:)","title":"static func == (AGOpacity, AGOpacity) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agopacity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agopacity\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agopacity","title":"AGOpacity","type":"struct"},{"title":"Loop","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/init(_:graph:)","title":"init(ClosedRange<Int>, graph: (Int) -> AGGraph)","type":"init"},{"path":"\/documentation\/asyncgraphics\/agforeach\/init(_:graphs:)","title":"init(Range<Int>, graphs: (Int) -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/aspectratio(_:contentmode:)-2isju","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/aspectratio(_:contentmode:)-9owq5","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/background(_:)-47hd","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/background(_:)-7t01h","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforeach\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agforeach\/==(_:_:)","title":"static func == (AGForEach, AGForEach) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agforeach\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforeach\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agforeach","title":"AGForEach","type":"struct"},{"title":"Renderer","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/renderer\/custommetallibrary","title":"static var customMetalLibrary: MTLLibrary?","type":"property"},{"path":"\/documentation\/asyncgraphics\/renderer\/defaultmetallibrary","title":"static var defaultMetalLibrary: MTLLibrary?","type":"property"},{"path":"\/documentation\/asyncgraphics\/renderer\/metaldevice","title":"static let metalDevice: MTLDevice","type":"property"},{"path":"\/documentation\/asyncgraphics\/renderer\/metallibrary","title":"static var metalLibrary: MTLLibrary?","type":"property"}],"path":"\/documentation\/asyncgraphics\/renderer","title":"Renderer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphrenderer\/init()","title":"init()","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphrenderer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/asyncgraphics\/aggraphrenderer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aggraphrenderer","title":"AGGraphRenderer","type":"class"},{"title":"Other AGs","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphbuilder\/buildblock(_:)-6wsi","title":"static func buildBlock((AGGraph)...) -> [AGGraph]","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphbuilder\/buildblock(_:)-9oht5","title":"static func buildBlock([AGGraph]) -> [AGGraph]","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphbuilder\/buildeither(first:)","title":"static func buildEither(first: [AGGraph]) -> [AGGraph]","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraphbuilder\/buildeither(second:)","title":"static func buildEither(second: [AGGraph]) -> [AGGraph]","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggraphbuilder","title":"AGGraphBuilder","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspecification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agspecification\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agspecification","title":"AGSpecification","type":"struct"},{"path":"\/documentation\/asyncgraphics\/agcomponents","title":"AGComponents","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agdetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agdetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agdetails","title":"AGDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/init(graphs:)","title":"init(graphs: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/aspectratio(_:contentmode:)-3jsdd","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/aspectratio(_:contentmode:)-9x9y","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/background(_:)-3g6o6","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/background(_:)-4xlsp","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/blendmode(_:)","title":"func blendMode(Graphic.BlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/padding(_:)","title":"func padding(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggroup\/padding(_:_:)","title":"func padding(Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggroup\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/aggroup\/==(_:_:)","title":"static func == (AGGroup, AGGroup) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/aggroup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggroup\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggroup\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aggroup","title":"AGGroup","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcontentmode\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/asyncgraphics\/agcontentmode\/fit","title":"case fit","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcontentmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcontentmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcontentmode","title":"AGContentMode","type":"enum"},{"title":"Render State","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicrenderstate\/done(id:)","title":"case done(id: UUID)","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicrenderstate\/inprogress(id:)","title":"case inProgress(id: UUID)","type":"case"}],"path":"\/documentation\/asyncgraphics\/graphicrenderstate","title":"GraphicRenderState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3drenderstate\/done(id:)","title":"case done(id: UUID)","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3drenderstate\/inprogress(id:fractioncomplete:)","title":"case inProgress(id: UUID, fractionComplete: CGFloat)","type":"case"}],"path":"\/documentation\/asyncgraphics\/graphic3drenderstate","title":"Graphic3DRenderState","type":"enum"},{"title":"Codable Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicpropertytype","title":"GraphicPropertyType","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvalueproperty\/init(wrappedvalue:key:name:)","title":"init(wrappedValue: GraphicMetadata<T>, key: String, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvalueproperty\/key","title":"let key: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvalueproperty\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvalueproperty\/type","title":"var type: GraphicValueType","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvalueproperty\/wrappedvalue","title":"var wrappedValue: GraphicMetadata<T>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvalueproperty\/erase()","title":"func erase() -> AnyGraphicValueProperty","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvalueproperty","title":"GraphicValueProperty","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicenumproperty\/init(wrappedvalue:key:name:)","title":"init(wrappedValue: GraphicEnumMetadata<T>, key: String, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicenumproperty\/allcases","title":"var allCases: [GraphicEnumCase]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicenumproperty\/key","title":"let key: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicenumproperty\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicenumproperty\/wrappedvalue","title":"var wrappedValue: GraphicEnumMetadata<T>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicenumproperty\/erase()","title":"func erase() -> AnyGraphicEnumProperty","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicenumproperty","title":"GraphicEnumProperty","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/anygraphicproperty\/key","title":"var key: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicproperty\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/anygraphicproperty","title":"AnyGraphicProperty","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/defaultvalue","title":"let defaultValue: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/key","title":"let key: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/maximumvalue","title":"let maximumValue: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/minimumvalue","title":"let minimumValue: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/options","title":"let options: GraphicMetadataOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/type","title":"let type: GraphicValueType","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/value","title":"let value: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/getdefaultvalue()","title":"func getDefaultValue<T>() throws -> GraphicMetadataValue<T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/getmaximumvalue()","title":"func getMaximumValue<T>() throws -> GraphicMetadataValue<T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/getminiumvalue()","title":"func getMiniumValue<T>() throws -> GraphicMetadataValue<T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/getvalue()","title":"func getValue<T>() throws -> GraphicMetadataValue<T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/setencodedvalue(_:)","title":"func setEncodedValue(String) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty\/setvalue(_:)","title":"func setValue<T>(GraphicMetadataValue<T>) throws","type":"method"}],"path":"\/documentation\/asyncgraphics\/anygraphicvalueproperty","title":"AnyGraphicValueProperty","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/anygraphicenumproperty\/allcases","title":"let allCases: [GraphicEnumCase]","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicenumproperty\/defaultrawvalue","title":"let defaultRawValue: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicenumproperty\/key","title":"let key: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicenumproperty\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/anygraphicenumproperty\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/anygraphicenumproperty\/getallcases()","title":"func getAllCases() -> [GraphicEnumCase]","type":"method"},{"path":"\/documentation\/asyncgraphics\/anygraphicenumproperty\/getdefaultrawvalue()","title":"func getDefaultRawValue() -> String","type":"method"},{"path":"\/documentation\/asyncgraphics\/anygraphicenumproperty\/getrawvalue()","title":"func getRawValue() -> String","type":"method"},{"path":"\/documentation\/asyncgraphics\/anygraphicenumproperty\/setrawvalue(_:)","title":"func setRawValue(String) throws","type":"method"}],"path":"\/documentation\/asyncgraphics\/anygraphicenumproperty","title":"AnyGraphicEnumProperty","type":"class"},{"title":"Codable Values","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/bool","title":"case bool","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/color","title":"case color","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/double","title":"case double","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/gradient","title":"case gradient","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/int","title":"case int","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/point","title":"case point","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/point3d","title":"case point3D","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/rect","title":"case rect","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/size","title":"case size","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/size3d","title":"case size3D","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/graphicvaluetype","title":"var graphicValueType: GraphicValue.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvaluetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvaluetype","title":"GraphicValueType","type":"enum"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvalue\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvalue\/scaled(by:)","title":"func scaled(by: CGFloat) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvalue\/default","title":"static var `default`: GraphicMetadataValue<Self>","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvalue\/maximum","title":"static var maximum: GraphicMetadataValue<Self>","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvalue\/minimum","title":"static var minimum: GraphicMetadataValue<Self>","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvalue\/one","title":"static var one: Self","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvalue\/zero","title":"static var zero: Self","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvalue\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: Self, to: Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvalue","title":"GraphicValue","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicenum\/index","title":"var index: UInt32","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicenum\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicenum","title":"GraphicEnum","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicenumcase\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphicenumcase\/init(rawvalue:name:)","title":"init(rawValue: String, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicenumcase\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicenumcase\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicenumcase\/rawvalue","title":"let rawValue: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicenumcase","title":"GraphicEnumCase","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/fixed(_:)","title":"case fixed(T)","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/one","title":"case one","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/resolution","title":"case resolution","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/resolutionalignment(_:)","title":"case resolutionAlignment(GraphicMetadataValue<T>.Alignment)","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/resolutionmaximum(fraction:)","title":"case resolutionMaximum(fraction: CGFloat)","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/resolutionminimum(fraction:)","title":"case resolutionMinimum(fraction: CGFloat)","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/eval(at:)-414an","title":"func eval(at: CGSize) -> T","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/eval(at:)-89rwl","title":"func eval(at: Size3D) -> T","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/scale(by:)","title":"func scale(by: CGFloat)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/scaled(by:)","title":"func scaled(by: CGFloat) -> GraphicMetadataValue<T>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/toptrailing","title":"case topTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/trailing","title":"case trailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue\/alignment","title":"GraphicMetadataValue.Alignment","type":"enum"}],"path":"\/documentation\/asyncgraphics\/graphicmetadatavalue","title":"GraphicMetadataValue","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphicmetadata\/init(value:minimum:maximum:options:)","title":"init(value: GraphicMetadataValue<T>, minimum: GraphicMetadataValue<T>, maximum: GraphicMetadataValue<T>, options: GraphicMetadataOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadata\/defaultvalue","title":"var defaultValue: GraphicMetadataValue<T>","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicmetadata\/maximumvalue","title":"let maximumValue: GraphicMetadataValue<T>","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicmetadata\/minimumvalue","title":"let minimumValue: GraphicMetadataValue<T>","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicmetadata\/value","title":"var value: GraphicMetadataValue<T>","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicmetadata","title":"GraphicMetadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicenummetadata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicenummetadata\/defaultvalue","title":"var defaultValue: T","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicenummetadata\/value","title":"var value: T","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicenummetadata","title":"GraphicEnumMetadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/spatial","title":"static let spatial: GraphicMetadataOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicmetadataoptions","title":"GraphicMetadataOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvariant\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvariant","title":"GraphicVariant","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphicvariant\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphicvariant\/instance","title":"let instance: CodableGraphicProtocol","type":"property"}],"path":"\/documentation\/asyncgraphics\/codablegraphicvariant","title":"CodableGraphicVariant","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dvariant\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dvariant\/instance","title":"let instance: CodableGraphic3DProtocol","type":"property"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3dvariant","title":"CodableGraphic3DVariant","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvariantid\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvariantid\/key","title":"let key: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvariantid","title":"GraphicVariantID","type":"struct"},{"title":"Codable Protocols","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/edit(variant:)-5wxyh","title":"func edit<V>(variant: V)","type":"method"}],"title":"CodableGraphicProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/edit(variant:)-59nrw","title":"func edit<V>(variant: V)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/isvisible(property:at:)-6cg8s","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"}],"title":"CodableGraphicProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/isvisible(property:at:)-973tw","title":"func isVisible<P>(property: P, at: CGSize) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: CGSize) -> Bool?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/type-swift.property","title":"var type: CodableGraphicType","type":"property"}],"title":"CodableGraphicProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/type-swift.type.property","title":"static var type: CodableGraphicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/variants()-4wejl","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"title":"CodableGraphicProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol\/variants()-8livy","title":"static func variants() -> [CodableGraphicVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphicprotocol","title":"CodableGraphicProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/properties","title":"var properties: [AnyGraphicProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/edit(variant:)-2tpnb","title":"func edit<V>(variant: V)","type":"method"}],"title":"CodableGraphic3DProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/edit(variant:)-4l7hi","title":"func edit<V>(variant: V)","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/edit(variantkey:)","title":"func edit(variantKey: String)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/isvisible(property:at:)-7mym7","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"}],"title":"CodableGraphic3DProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/isvisible(property:at:)-1mj3","title":"func isVisible<P>(property: P, at: Size3D) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/isvisible(propertykey:at:)","title":"func isVisible(propertyKey: String, at: Size3D) -> Bool?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/type-swift.property","title":"var type: CodableGraphic3DType","type":"property"}],"title":"CodableGraphic3DProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/type-swift.type.property","title":"static var type: CodableGraphic3DType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/variantids()","title":"static func variantIDs() -> [GraphicVariantID]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/variants()-4n1q7","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"title":"CodableGraphic3DProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol\/variants()-10zkf","title":"static func variants() -> [CodableGraphic3DVariant]","type":"method"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3dprotocol","title":"CodableGraphic3DProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphicprotocol\/render(at:options:)","title":"func render(at: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"}],"path":"\/documentation\/asyncgraphics\/contentgraphicprotocol","title":"ContentGraphicProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphic3dprotocol\/render(at:options:)","title":"func render(at: Size3D, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"}],"path":"\/documentation\/asyncgraphics\/contentgraphic3dprotocol","title":"ContentGraphic3DProtocol","type":"protocol"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphicprotocol","title":"ShapeContentGraphicProtocol","type":"protocol"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dprotocol","title":"ShapeContentGraphic3DProtocol","type":"protocol"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphicprotocol","title":"SolidContentGraphicProtocol","type":"protocol"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dprotocol","title":"SolidContentGraphic3DProtocol","type":"protocol"},{"path":"\/documentation\/asyncgraphics\/effectgraphicprotocol","title":"EffectGraphicProtocol","type":"protocol"},{"path":"\/documentation\/asyncgraphics\/effectgraphic3dprotocol","title":"EffectGraphic3DProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphicprotocol\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"}],"path":"\/documentation\/asyncgraphics\/coloreffectgraphicprotocol","title":"ColorEffectGraphicProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dprotocol\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"}],"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dprotocol","title":"ColorEffectGraphic3DProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphicprotocol\/render(with:options:)","title":"func render(with: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"}],"path":"\/documentation\/asyncgraphics\/spaceeffectgraphicprotocol","title":"SpaceEffectGraphicProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dprotocol\/render(with:options:)","title":"func render(with: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"}],"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dprotocol","title":"SpaceEffectGraphic3DProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphicprotocol\/render(with:modifier:options:)","title":"func render(with: Graphic, modifier: Graphic, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"}],"path":"\/documentation\/asyncgraphics\/modifiereffectgraphicprotocol","title":"ModifierEffectGraphicProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dprotocol\/render(with:modifier:options:)","title":"func render(with: Graphic3D, modifier: Graphic3D, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"}],"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dprotocol","title":"ModifierEffectGraphic3DProtocol","type":"protocol"},{"title":"Codable Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphictype\/content(_:)","title":"case content(ContentGraphicType)","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphictype\/effect(_:)","title":"case effect(EffectGraphicType)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphictype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphictype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphictype\/type","title":"var type: CodableGraphicProtocol.Type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphictype\/instance()","title":"func instance() -> CodableGraphicProtocol","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphictype\/allcases","title":"static var allCases: [CodableGraphicType]","type":"property"}],"path":"\/documentation\/asyncgraphics\/codablegraphictype\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphictype","title":"CodableGraphicType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dtype\/content(_:)","title":"case content(ContentGraphic3DType)","type":"case"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dtype\/effect(_:)","title":"case effect(EffectGraphic3DType)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dtype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dtype\/type","title":"var type: CodableGraphic3DProtocol.Type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dtype\/instance()","title":"func instance() -> CodableGraphic3DProtocol","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dtype\/allcases","title":"static var allCases: [CodableGraphic3DType]","type":"property"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3dtype\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/codablegraphic3dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/codablegraphic3dtype","title":"CodableGraphic3DType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphictype\/shape(_:)","title":"case shape(ShapeContentGraphicType)","type":"case"},{"path":"\/documentation\/asyncgraphics\/contentgraphictype\/solid(_:)","title":"case solid(SolidContentGraphicType)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphictype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphictype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/contentgraphictype\/type","title":"var type: ContentGraphicProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphictype\/allcases","title":"static var allCases: [ContentGraphicType]","type":"property"}],"path":"\/documentation\/asyncgraphics\/contentgraphictype\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/contentgraphictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/contentgraphictype","title":"ContentGraphicType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphic3dtype\/shape(_:)","title":"case shape(ShapeContentGraphic3DType)","type":"case"},{"path":"\/documentation\/asyncgraphics\/contentgraphic3dtype\/solid(_:)","title":"case solid(SolidContentGraphic3DType)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphic3dtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphic3dtype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/contentgraphic3dtype\/type","title":"var type: ContentGraphic3DProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphic3dtype\/allcases","title":"static var allCases: [ContentGraphic3DType]","type":"property"}],"path":"\/documentation\/asyncgraphics\/contentgraphic3dtype\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/contentgraphic3dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/contentgraphic3dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/contentgraphic3dtype","title":"ContentGraphic3DType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/channelmix","title":"case channelMix","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/chromakey","title":"case chromaKey","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/clamp","title":"case clamp","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/colorconvert","title":"case colorConvert","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/colormap","title":"case colorMap","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/colorshift","title":"case colorShift","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/gradientlookup","title":"case gradientLookup","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/levels","title":"case levels","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/personsegmentation","title":"case personSegmentation","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/quantize","title":"case quantize","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/slope","title":"case slope","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/threshold","title":"case threshold","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/type","title":"var type: ColorEffectGraphicProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/coloreffectgraphictype","title":"ColorEffectGraphicType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/channelmix","title":"case channelMix","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/clamp","title":"case clamp","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/colormap","title":"case colorMap","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/colorshift","title":"case colorShift","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/gradientlookup","title":"case gradientLookup","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/levels","title":"case levels","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/quantize","title":"case quantize","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/slope","title":"case slope","type":"case"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/threshold","title":"case threshold","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/type","title":"var type: ColorEffectGraphic3DProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/coloreffectgraphic3dtype","title":"ColorEffectGraphic3DType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/blur","title":"case blur","type":"case"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/circleblur","title":"case circleBlur","type":"case"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/edge","title":"case edge","type":"case"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/transform","title":"case transform","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/type","title":"var type: SpaceEffectGraphicProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/spaceeffectgraphictype","title":"SpaceEffectGraphicType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/blur","title":"case blur","type":"case"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/edge","title":"case edge","type":"case"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/transform","title":"case transform","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/type","title":"var type: SpaceEffectGraphic3DProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/spaceeffectgraphic3dtype","title":"SpaceEffectGraphic3DType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/blend","title":"case blend","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/cross","title":"case cross","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/displace","title":"case displace","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/lookup","title":"case lookup","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/lumablur","title":"case lumaBlur","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/lumacolorshift","title":"case lumaColorShift","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/lumalevels","title":"case lumaLevels","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/lumarainbowblur","title":"case lumaRainbowBlur","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/lumatransform","title":"case lumaTransform","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/mask","title":"case mask","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/type","title":"var type: ModifierEffectGraphicProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/modifiereffectgraphictype","title":"ModifierEffectGraphicType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/blend","title":"case blend","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/cross","title":"case cross","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/displace","title":"case displace","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/lookup","title":"case lookup","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/lumablur","title":"case lumaBlur","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/lumacolorshift","title":"case lumaColorShift","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/lumalevels","title":"case lumaLevels","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/lumarainbowblur","title":"case lumaRainbowBlur","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/lumatransform","title":"case lumaTransform","type":"case"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/mask","title":"case mask","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/type","title":"var type: ModifierEffectGraphic3DProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/modifiereffectgraphic3dtype","title":"ModifierEffectGraphic3DType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/effectgraphictype\/color(_:)","title":"case color(ColorEffectGraphicType)","type":"case"},{"path":"\/documentation\/asyncgraphics\/effectgraphictype\/modifier(_:)","title":"case modifier(ModifierEffectGraphicType)","type":"case"},{"path":"\/documentation\/asyncgraphics\/effectgraphictype\/space(_:)","title":"case space(SpaceEffectGraphicType)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/effectgraphictype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/effectgraphictype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/effectgraphictype\/type","title":"var type: EffectGraphicProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/effectgraphictype\/allcases","title":"static var allCases: [EffectGraphicType]","type":"property"}],"path":"\/documentation\/asyncgraphics\/effectgraphictype\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/effectgraphictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/effectgraphictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/effectgraphictype","title":"EffectGraphicType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/effectgraphic3dtype\/color(_:)","title":"case color(ColorEffectGraphic3DType)","type":"case"},{"path":"\/documentation\/asyncgraphics\/effectgraphic3dtype\/modifier(_:)","title":"case modifier(ModifierEffectGraphic3DType)","type":"case"},{"path":"\/documentation\/asyncgraphics\/effectgraphic3dtype\/space(_:)","title":"case space(SpaceEffectGraphic3DType)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/effectgraphic3dtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/effectgraphic3dtype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/effectgraphic3dtype\/type","title":"var type: EffectGraphic3DProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/effectgraphic3dtype\/allcases","title":"static var allCases: [EffectGraphic3DType]","type":"property"}],"path":"\/documentation\/asyncgraphics\/effectgraphic3dtype\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/effectgraphic3dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/effectgraphic3dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/effectgraphic3dtype","title":"EffectGraphic3DType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/arc","title":"case arc","type":"case"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/circle","title":"case circle","type":"case"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/line","title":"case line","type":"case"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/polygon","title":"case polygon","type":"case"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/rectangle","title":"case rectangle","type":"case"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/star","title":"case star","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/type","title":"var type: ShapeContentGraphicProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/shapecontentgraphictype","title":"ShapeContentGraphicType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/box","title":"case box","type":"case"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/cone","title":"case cone","type":"case"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/cylinder","title":"case cylinder","type":"case"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/sphere","title":"case sphere","type":"case"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/tetrahedron","title":"case tetrahedron","type":"case"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/torus","title":"case torus","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/type","title":"var type: ShapeContentGraphic3DProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/shapecontentgraphic3dtype","title":"ShapeContentGraphic3DType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/color","title":"case color","type":"case"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/gradient","title":"case gradient","type":"case"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/noise","title":"case noise","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/type","title":"var type: SolidContentGraphicProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/solidcontentgraphictype","title":"SolidContentGraphicType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/color","title":"case color","type":"case"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/gradient","title":"case gradient","type":"case"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/noise","title":"case noise","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/type","title":"var type: SolidContentGraphic3DProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/solidcontentgraphic3dtype","title":"SolidContentGraphic3DType","type":"enum"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/interpolation","title":"var interpolation: Graphic.ViewInterpolation","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/scale","title":"var scale: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/display(graphic:)","title":"func display(graphic: Graphic) async throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/hide()","title":"func hide()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/defaultscale","title":"static let defaultScale: CGFloat","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/rendererror\/renderfailed","title":"case renderFailed","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/rendererror\/viewnotready","title":"case viewNotReady","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/rendererror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/rendererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/rendererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/rendererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/rendererror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/rendererror\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/rendererror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/rendererror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/rendererror","title":"GraphicImageRenderer.RenderError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicimagerenderer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicimagerenderer","title":"GraphicImageRenderer","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/init(renderer:)","title":"init(renderer: GraphicImageRenderer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(activationpoint:)-1dgba","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(activationpoint:)-uggh","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityaction(named:_:)-592k1","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityaction(named:_:)-5jffo","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityaction(named:_:)-64sib","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityactivationpoint(_:)-4xtw3","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityactivationpoint(_:)-7tucs","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitycustomcontent(_:_:importance:)-18rue","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitycustomcontent(_:_:importance:)-1fwuw","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitycustomcontent(_:_:importance:)-2z7nb","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitycustomcontent(_:_:importance:)-3uv47","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitycustomcontent(_:_:importance:)-5x78y","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitycustomcontent(_:_:importance:)-88qep","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitycustomcontent(_:_:importance:)-8mbsr","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitycustomcontent(_:_:importance:)-9dxyi","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityhint(_:)-547ku","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityhint(_:)-6wt15","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityhint(_:)-886ua","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityinputlabels(_:)-4367j","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityinputlabels(_:)-70q5x","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityinputlabels(_:)-9rt80","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitylabel(_:)-1fwyk","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitylabel(_:)-7uwvr","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitylabel(_:)-8nkor","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:)-1cie9","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:)-5irnw","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:)-5y9eb","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:)-6gkb0","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3rbc7","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:entryid:entrylabel:)-53rpx","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8w2es","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:entryid:entrylabel:)-szq5","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:entrylabel:)-40scp","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:entrylabel:)-66syq","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:entrylabel:)-6ny0b","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:entries:entrylabel:)-71wn3","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:textranges:)-1hm2v","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:textranges:)-55ke3","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:textranges:)-5njci","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotor(_:textranges:)-6lish","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityvalue(_:)-28vit","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityvalue(_:)-46i9n","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityvalue(_:)-4oe5d","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:actions:)-4urst","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:actions:)-52jcd","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:actions:)-8zat8","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:actions:message:)-6i9vo","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:actions:message:)-85hjx","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:actions:message:)-fgmy","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:presenting:actions:)-4u5vf","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:presenting:actions:)-5s5q8","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:presenting:actions:)-84pio","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:presenting:actions:message:)-40h5g","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:presenting:actions:message:)-888l2","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(_:ispresented:presenting:actions:message:)-9mbzo","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alignmentguide(_:computevalue:)-5khrd","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alignmentguide(_:computevalue:)-7kfmo","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/aspectratio(_:contentmode:)-78qk3","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/aspectratio(_:contentmode:)-bbzj","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/background(_:in:fillstyle:)-7gmfe","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/background(_:in:fillstyle:)-92vv9","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/background(in:fillstyle:)-1u9gg","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/background(in:fillstyle:)-9bm1c","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/badge(_:)-33beo","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/badge(_:)-5dkn2","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/badge(_:)-8fkd6","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/badge(_:)-8t78r","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/buttonstyle(_:)-2540","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/buttonstyle(_:)-6g82z","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1bitz","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2koj7","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9vn5c","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-40wtk","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-46pfp","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5upcc","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-19hyt","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4ssqy","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7dv59","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1bi77","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4xfuj","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7un2r","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/contentmargins(_:_:for:)-7bopd","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/contentmargins(_:_:for:)-7htng","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/dialogsuppressiontoggle(_:issuppressed:)-2508q","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/dialogsuppressiontoggle(_:issuppressed:)-6qyqr","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/dialogsuppressiontoggle(_:issuppressed:)-8uz2a","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filedialogconfirmationlabel(_:)-62gof","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filedialogconfirmationlabel(_:)-6y5c2","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filedialogconfirmationlabel(_:)-7uf8f","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filedialogmessage(_:)-2zise","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filedialogmessage(_:)-35ojx","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filedialogmessage(_:)-4g8x2","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3etik","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8hehs","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4j26o","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4xy16","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1z6c","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9o4wb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2woq1","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5oxlk","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporterfilenamelabel(_:)-3w36n","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporterfilenamelabel(_:)-6wum2","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileexporterfilenamelabel(_:)-7k4xf","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusedobject(_:)-4vjzt","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusedobject(_:)-y4lh","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusedsceneobject(_:)-5i2b6","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusedsceneobject(_:)-6jyhs","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusedscenevalue(_:_:)-48ryu","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusedscenevalue(_:_:)-9igim","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusedvalue(_:_:)-26h21","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/focusedvalue(_:_:)-6qma3","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/geometry(frame:in:)","title":"func geometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/geometry(origin:in:)","title":"func geometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/geometry(size:)","title":"func geometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/help(_:)-7dc6p","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/help(_:)-7q2p4","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/help(_:)-7wsyv","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/keyboardshortcut(_:)-2n4y7","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/keyboardshortcut(_:)-5ds8j","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/linelimit(_:)-29agi","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/linelimit(_:)-2n935","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/linelimit(_:)-5iuhb","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/linelimit(_:)-77lks","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/listitemtint(_:)-2mbp1","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/listitemtint(_:)-3jtof","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/mapcamerakeyframeanimator(trigger:keyframes:)","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/mapcontrolvisibility(_:)","title":"func mapControlVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/mapcontrols(_:)","title":"func mapControls(() -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/mapscope(_:)","title":"func mapScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/mapstyle(_:)","title":"func mapStyle(MapStyle) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationbartitle(_:)-18vwo","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationbartitle(_:)-5h6la","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationbartitle(_:)-rh01","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationbartitle(_:displaymode:)-1p0oh","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationbartitle(_:displaymode:)-6mlyr","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationbartitle(_:displaymode:)-8ouug","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationdocument(_:preview:)-22eeu","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationdocument(_:preview:)-544ym","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationdocument(_:preview:)-6q8ww","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationdocument(_:preview:)-7hrcy","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationsubtitle(_:)-39q9c","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationsubtitle(_:)-4jwrn","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationsubtitle(_:)-9cyq7","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationtitle(_:)-10j7g","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationtitle(_:)-1k1i7","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationtitle(_:)-21z2j","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationtitle(_:)-6j4rg","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationtitle(_:)-6y5ul","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onchange(of:initial:_:)-2rwpr","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onchange(of:initial:_:)-kx6x","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ondrop(of:delegate:)-8fb24","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ondrop(of:delegate:)-9xsux","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ondrop(of:istargeted:perform:)-1auc","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ondrop(of:istargeted:perform:)-4zn6h","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ondrop(of:istargeted:perform:)-66a2k","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ondrop(of:istargeted:perform:)-8su75","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onmapcamerachange(frequency:_:)-2ghn2","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onmapcamerachange(frequency:_:)-5ncu3","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onpastecommand(of:perform:)-4eup6","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onpastecommand(of:perform:)-8inpn","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onpastecommand(of:validator:perform:)-3fbh3","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onpastecommand(of:validator:perform:)-6cu05","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/padding(_:)-54kpz","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/padding(_:)-79wb1","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/readgeometry(frame:in:)","title":"func readGeometry(frame: Binding<CGRect>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/readgeometry(height:)","title":"func readGeometry(height: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/readgeometry(origin:in:)","title":"func readGeometry(origin: Binding<CGPoint>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/readgeometry(size:)","title":"func readGeometry(size: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/readgeometry(width:)","title":"func readGeometry(width: Binding<CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/readgeometry(x:in:)","title":"func readGeometry(x: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/readgeometry(y:in:)","title":"func readGeometry(y: Binding<CGFloat>, in: CoordinateSpace) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/renameaction(_:)-2ic76","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/renameaction(_:)-v05r","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/safeareainset(edge:alignment:spacing:content:)-1cam6","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/safeareainset(edge:alignment:spacing:content:)-shj5","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/safeareapadding(_:)-55m7r","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/safeareapadding(_:)-8x8ef","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scaleeffect(_:anchor:)-3hyaa","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scaleeffect(_:anchor:)-nu1x","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1ji7j","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3i8pf","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-54ti7","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:editabletokens:placement:prompt:token:)-1h9nc","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:editabletokens:placement:prompt:token:)-6amip","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:editabletokens:placement:prompt:token:)-9653l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:ispresented:placement:prompt:)-4f5oi","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:ispresented:placement:prompt:)-939xg","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:ispresented:placement:prompt:)-d5fy","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:placement:prompt:)-2e3v6","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:placement:prompt:)-5hxc6","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:placement:prompt:)-7zp2b","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:placement:prompt:suggestions:)-7wdzy","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:placement:prompt:suggestions:)-8et9s","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:placement:prompt:suggestions:)-9xwxf","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:ispresented:placement:prompt:token:)-50opz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5hnur","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5x3pm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:placement:prompt:token:)-1kial","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:placement:prompt:token:)-8yryi","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:placement:prompt:token:)-90z0s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-47rq3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4dy42","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8pee1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2u4ka","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-49u4m","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6zzie","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/toolbar(content:)-18ip2","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/toolbar(content:)-9saxg","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/typeselectequivalent(_:)-6wqz4","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/typeselectequivalent(_:)-8nd4z","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/typeselectequivalent(_:)-9cjv0","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/typesettinglanguage(_:isenabled:)-5gf8s","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/typesettinglanguage(_:isenabled:)-pu50","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicimagerenderview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicimagerenderview","title":"GraphicImageRenderView","type":"struct"},{"title":"Macros","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/enummacro()","title":"macro EnumMacro()","type":"macro"},{"path":"\/documentation\/asyncgraphics\/graphicmacro()","title":"macro GraphicMacro()","type":"macro"},{"path":"\/documentation\/asyncgraphics\/graphictypemacro()","title":"macro GraphicTypeMacro()","type":"macro"},{"path":"\/documentation\/asyncgraphics\/variantmacro()","title":"macro VariantMacro()","type":"macro"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgfloat\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgfloat\/scaled(by:)","title":"func scaled(by: CGFloat) -> CGFloat","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgfloat\/default","title":"static var `default`: GraphicMetadataValue<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgfloat\/maximum","title":"static var maximum: GraphicMetadataValue<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgfloat\/minimum","title":"static var minimum: GraphicMetadataValue<CGFloat>","type":"property"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgfloat\/one","title":"static var one: CGFloat","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgfloat\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: CGFloat, to: CGFloat) -> CGFloat","type":"method"}],"path":"\/documentation\/asyncgraphics\/corefoundation\/cgfloat\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/corefoundation\/cgfloat","title":"CGFloat","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgpoint\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgpoint\/scaled(by:)","title":"func scaled(by: CGFloat) -> CGPoint","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgpoint\/default","title":"static var `default`: GraphicMetadataValue<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgpoint\/maximum","title":"static var maximum: GraphicMetadataValue<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgpoint\/minimum","title":"static var minimum: GraphicMetadataValue<CGPoint>","type":"property"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgpoint\/one","title":"static var one: CGPoint","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgpoint\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: CGPoint, to: CGPoint) -> CGPoint","type":"method"}],"path":"\/documentation\/asyncgraphics\/corefoundation\/cgpoint\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/corefoundation\/cgpoint","title":"CGPoint","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgrect\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgrect\/scaled(by:)","title":"func scaled(by: CGFloat) -> CGRect","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgrect\/default","title":"static var `default`: GraphicMetadataValue<CGRect>","type":"property"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgrect\/maximum","title":"static var maximum: GraphicMetadataValue<CGRect>","type":"property"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgrect\/minimum","title":"static var minimum: GraphicMetadataValue<CGRect>","type":"property"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgrect\/one","title":"static var one: CGRect","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgrect\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: CGRect, to: CGRect) -> CGRect","type":"method"}],"path":"\/documentation\/asyncgraphics\/corefoundation\/cgrect\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/corefoundation\/cgrect","title":"CGRect","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgsize\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgsize\/scaled(by:)","title":"func scaled(by: CGFloat) -> CGSize","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgsize\/default","title":"static var `default`: GraphicMetadataValue<CGSize>","type":"property"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgsize\/maximum","title":"static var maximum: GraphicMetadataValue<CGSize>","type":"property"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgsize\/minimum","title":"static var minimum: GraphicMetadataValue<CGSize>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/corefoundation\/cgsize\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: CGSize, to: CGSize) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/corefoundation\/cgsize\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/corefoundation\/cgsize","title":"CGSize","type":"extension"}],"path":"\/documentation\/asyncgraphics\/corefoundation","title":"CoreFoundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/pixelcolor\/pixelcolor\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/pixelcolor\/pixelcolor\/scaled(by:)","title":"func scaled(by: CGFloat) -> PixelColor","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/pixelcolor\/pixelcolor\/default","title":"static var `default`: GraphicMetadataValue<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/pixelcolor\/pixelcolor\/maximum","title":"static var maximum: GraphicMetadataValue<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/pixelcolor\/pixelcolor\/minimum","title":"static var minimum: GraphicMetadataValue<PixelColor>","type":"property"},{"path":"\/documentation\/asyncgraphics\/pixelcolor\/pixelcolor\/one","title":"static var one: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/pixelcolor\/pixelcolor\/zero","title":"static var zero: PixelColor","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/pixelcolor\/pixelcolor\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: PixelColor, to: PixelColor) -> PixelColor","type":"method"}],"path":"\/documentation\/asyncgraphics\/pixelcolor\/pixelcolor\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/pixelcolor\/pixelcolor","title":"PixelColor","type":"extension"}],"path":"\/documentation\/asyncgraphics\/pixelcolor","title":"PixelColor","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spatial\/point3d\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spatial\/point3d\/scaled(by:)","title":"func scaled(by: CGFloat) -> Point3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spatial\/point3d\/default","title":"static var `default`: GraphicMetadataValue<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/spatial\/point3d\/maximum","title":"static var maximum: GraphicMetadataValue<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/spatial\/point3d\/minimum","title":"static var minimum: GraphicMetadataValue<Point3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/spatial\/point3d\/one","title":"static var one: Point3D","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spatial\/point3d\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: Point3D, to: Point3D) -> Point3D","type":"method"}],"path":"\/documentation\/asyncgraphics\/spatial\/point3d\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/spatial\/point3d","title":"Point3D","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spatial\/size3d\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spatial\/size3d\/scaled(by:)","title":"func scaled(by: CGFloat) -> Size3D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spatial\/size3d\/default","title":"static var `default`: GraphicMetadataValue<Size3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/spatial\/size3d\/maximum","title":"static var maximum: GraphicMetadataValue<Size3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/spatial\/size3d\/minimum","title":"static var minimum: GraphicMetadataValue<Size3D>","type":"property"},{"path":"\/documentation\/asyncgraphics\/spatial\/size3d\/one","title":"static var one: Size3D","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/spatial\/size3d\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: Size3D, to: Size3D) -> Size3D","type":"method"}],"path":"\/documentation\/asyncgraphics\/spatial\/size3d\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/spatial\/size3d","title":"Size3D","type":"extension"}],"path":"\/documentation\/asyncgraphics\/spatial","title":"Spatial","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/add()","title":"func add() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/average()","title":"func average() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/blended(blendingmode:)","title":"func blended(blendingMode: Graphic.MultiBlendMode) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/exportvideotodata(fps:kbps:format:codec:)","title":"func exportVideoToData(fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> Data","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/exportvideotourl(fps:kbps:format:codec:)","title":"func exportVideoToURL(fps: Double, kbps: Int, format: VideoFormat, codec: VideoCodec) async throws -> URL","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/hstack(alignment:spacing:padding:backgroundcolor:resolution:)","title":"func hStack(alignment: Graphic.HStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/hstacked(alignment:)","title":"func hStacked(alignment: Graphic.HStackAlignment) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/merge()","title":"func merge() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/metal(code:options:)","title":"func metal(code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/vstack(alignment:spacing:padding:backgroundcolor:resolution:)","title":"func vStack(alignment: Graphic.VStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/vstacked(alignment:)","title":"func vStacked(alignment: Graphic.VStackAlignment) async throws -> Graphic","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/importvideo(url:progress:)","title":"static func importVideo(url: URL, progress: ((Graphic.ImportVideoFrameProgress) -> ())?) async throws -> [Graphic]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/scaled(by:)","title":"func scaled(by: CGFloat) -> Array<Element>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/default","title":"static var `default`: GraphicMetadataValue<Array<Graphic.GradientStop>>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/maximum","title":"static var maximum: GraphicMetadataValue<Array<Graphic.GradientStop>>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/minimum","title":"static var minimum: GraphicMetadataValue<Array<Graphic.GradientStop>>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/one","title":"static var one: Array<Graphic.GradientStop>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/zero","title":"static var zero: Array<Graphic.GradientStop>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/array\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: Array<Element>, to: Array<Element>) -> Array<Element>","type":"method"}],"path":"\/documentation\/asyncgraphics\/swift\/array\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/bool\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/bool\/scaled(by:)","title":"func scaled(by: CGFloat) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/bool\/default","title":"static var `default`: GraphicMetadataValue<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/bool\/maximum","title":"static var maximum: GraphicMetadataValue<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/bool\/minimum","title":"static var minimum: GraphicMetadataValue<Bool>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/bool\/one","title":"static var one: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/bool\/zero","title":"static var zero: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/bool\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: Bool, to: Bool) -> Bool","type":"method"}],"path":"\/documentation\/asyncgraphics\/swift\/bool\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/swift\/bool","title":"Bool","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/double\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/double\/scaled(by:)","title":"func scaled(by: CGFloat) -> Double","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/double\/default","title":"static var `default`: GraphicMetadataValue<Double>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/double\/maximum","title":"static var maximum: GraphicMetadataValue<Double>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/double\/minimum","title":"static var minimum: GraphicMetadataValue<Double>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/double\/one","title":"static var one: Double","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/double\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: Double, to: Double) -> Double","type":"method"}],"path":"\/documentation\/asyncgraphics\/swift\/double\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/swift\/double","title":"Double","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/int\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/int\/scaled(by:)","title":"func scaled(by: CGFloat) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/int\/default","title":"static var `default`: GraphicMetadataValue<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/int\/maximum","title":"static var maximum: GraphicMetadataValue<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/int\/minimum","title":"static var minimum: GraphicMetadataValue<Int>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swift\/int\/one","title":"static var one: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swift\/int\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: Int, to: Int) -> Int","type":"method"}],"path":"\/documentation\/asyncgraphics\/swift\/int\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/swift\/int","title":"Int","type":"extension"}],"path":"\/documentation\/asyncgraphics\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/graphicvaluetype","title":"var graphicValueType: GraphicValueType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/scaled(by:)","title":"func scaled(by: CGFloat) -> Angle","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/default","title":"static var `default`: GraphicMetadataValue<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/maximum","title":"static var maximum: GraphicMetadataValue<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/minimum","title":"static var minimum: GraphicMetadataValue<Angle>","type":"property"},{"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/one","title":"static var one: Angle","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/lerp(at:from:to:)","title":"static func lerp(at: CGFloat, from: Angle, to: Angle) -> Angle","type":"method"}],"path":"\/documentation\/asyncgraphics\/swiftui\/angle\/graphicvalue-implementations","title":"GraphicValue Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/swiftui\/angle","title":"Angle","type":"extension"}],"path":"\/documentation\/asyncgraphics\/swiftui","title":"SwiftUI","type":"extension"}],"path":"\/documentation\/asyncgraphics","title":"AsyncGraphics","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}
>>>>>>> b50526e0 (v2 Docs)
