{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"children":[{"title":"Blend Mode","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/add","title":"case add","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/addwithalpha","title":"case addWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/average","title":"case average","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/cosine","title":"case cosine","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/darken","title":"case darken","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/darkenwithoutalpha","title":"case darkenWithoutAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/difference","title":"case difference","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/divide","title":"case divide","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/exclusiveor","title":"case exclusiveOr","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/inside","title":"case inside","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/lighten","title":"case lighten","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/maximum","title":"case maximum","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/minimum","title":"case minimum","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/multiply","title":"case multiply","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/multiplywithalpha","title":"case multiplyWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/multiplywithoutalpha","title":"case multiplyWithoutAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/outside","title":"case outside","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/over","title":"case over","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/power","title":"case power","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/screen","title":"case screen","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/subtract","title":"case subtract","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/subtractwithalpha","title":"case subtractWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/under","title":"case under","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblendmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agblendmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agblendmode","title":"AGBlendMode","type":"enum"}],"path":"\/documentation\/asyncgraphics\/blending","title":"Blending","type":"symbol"},{"children":[{"title":"Stacks","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/init(alignment:with:)","title":"init(alignment: Graphic.ZStackAlignment, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-3fl80","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-7mj2r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-2bc10","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-8o6af","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agzstack\/==(_:_:)","title":"static func == (AGZStack, AGZStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agzstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agzstack","title":"AGZStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.VStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-1nji8","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-n0ph","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-3y07o","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-45lbw","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agvstack\/==(_:_:)","title":"static func == (AGVStack, AGVStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvstack","title":"AGVStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.HStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-4k5r9","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-6q9un","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-1wnkx","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-9do05","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/aghstack\/==(_:_:)","title":"static func == (AGHStack, AGHStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/aghstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aghstack","title":"AGHStack","type":"struct"}],"path":"\/documentation\/asyncgraphics\/layout","title":"Layout","type":"symbol"},{"children":[{"title":"Camera","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(_:device:preset:)","title":"static func camera(Graphic.CameraPosition, device: AVCaptureDevice.DeviceType, preset: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"}],"path":"\/documentation\/asyncgraphics\/livecamera","title":"Live Camera","type":"symbol"},{"children":[{"title":"Video","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframe(at:url:info:)","title":"static func importVideoFrame(at: Int, url: URL, info: VideoInfo?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideo(url:progress:)","title":"static func importVideo(url: URL, progress: ((Graphic.ImportVideoFrameProgress) -> ())?) async throws -> [Graphic]","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideostream(url:)","title":"static func importVideoStream(url: URL) -> AsyncThrowingStream<Graphic, Error>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotodata(with:fps:kbps:format:)","title":"static func exportVideoToData(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat) async throws -> Data","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotourl(with:fps:kbps:format:)","title":"static func exportVideoToURL(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat) async throws -> URL","type":"method"}],"path":"\/documentation\/asyncgraphics\/videoediting","title":"Video Editing","type":"symbol"},{"children":[{"title":"Video","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/init(with:)","title":"init(with: GraphicVideoPlayer)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resizable()","title":"func resizable() -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8hcdj","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8xa34","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-5k5vi","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-9u74n","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvideo\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvideo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvideo","title":"AGVideo","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framecount","title":"var frameCount: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framerate","title":"let frameRate: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/resolution","title":"let resolution: CGSize","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct","title":"GraphicVideoPlayer.Info","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/loop","title":"var loop: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/volume","title":"var volume: Double","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct","title":"GraphicVideoPlayer.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(named:fileextension:in:options:)","title":"convenience init(named: String, fileExtension: String, in: Bundle, options: GraphicVideoPlayer.Options) throws","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(url:options:)","title":"init(url: URL, options: GraphicVideoPlayer.Options)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/frameindex","title":"var frameIndex: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.property","title":"var info: GraphicVideoPlayer.Info","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.property","title":"var options: GraphicVideoPlayer.Options","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/playing","title":"var playing: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seconds","title":"var seconds: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/time","title":"var time: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/play()","title":"func play()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-5hpoo","title":"func seek(to: Double)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-86zyw","title":"func seek(to: Int)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-8d3sm","title":"func seek(to: CMTime)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/startseek()","title":"func startSeek()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stop()","title":"func stop()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stopseek()","title":"func stopSeek()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/==(_:_:)","title":"static func == (GraphicVideoPlayer, GraphicVideoPlayer) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer","title":"GraphicVideoPlayer","type":"class"},{"path":"\/documentation\/asyncgraphics\/graphic\/playvideo(with:)","title":"static func playVideo(with: GraphicVideoPlayer) -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/playvideo(url:loop:volume:)","title":"static func playVideo(url: URL, loop: Bool, volume: Double) -> AsyncStream<Graphic>","type":"method"}],"path":"\/documentation\/asyncgraphics\/videoplayback","title":"Video Playback","type":"symbol"},{"title":"Graphics","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/aggraph\/components-4wezt","title":"var components: AGComponents","type":"property"}],"title":"AGGraph Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/aggraph\/components-7l9kn","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraph\/aspectratio(_:contentmode:)-1ma72","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/aspectratio(_:contentmode:)-wwiq","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/background(_:)-3b2w8","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/background(_:)-8aygj","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aggraph\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"children":[{"children":[{"path":"\/documentation\/asyncgraphics\/aggraph\/resolution(at:for:)-505ak","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"title":"AGGraph Implementations","type":"groupMarker"}],"path":"\/documentation\/asyncgraphics\/aggraph\/resolution(at:for:)-29o3u","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggraph","title":"AGGraph","type":"protocol"},{"children":[{"title":"Resolution","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resolution","title":"var resolution: CGSize","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/width","title":"var width: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/height","title":"var height: CGFloat","type":"property"},{"title":"Image","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/image","title":"var image: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/imagewithtransparency","title":"var imageWithTransparency: TMImage","type":"property"},{"title":"Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texture","title":"let texture: MTLTexture","type":"property"},{"title":"Data","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/pngdata","title":"var pngData: Data","type":"property"},{"title":"Metadata","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/bits","title":"let bits: TMBits","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorspace","title":"let colorSpace: TMColorSpace","type":"property"},{"title":"Options","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/bit16","title":"static let bit16: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/bit32","title":"static let bit32: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/highbit","title":"static let highBit: Graphic.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/purealpha","title":"static let pureAlpha: Graphic.ContentOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/contentoptions","title":"Graphic.ContentOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/edgemirror","title":"static let edgeMirror: Graphic.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/edgestretch","title":"static let edgeStretch: Graphic.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/purealpha","title":"static let pureAlpha: Graphic.EffectOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/effectoptions","title":"Graphic.EffectOptions","type":"struct"},{"title":"Pixels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/firstpixelcolor","title":"var firstPixelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/averagepixelcolor","title":"var averagePixelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelcolors","title":"var pixelColors: [[PixelColor]]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/channels","title":"var channels: [CGFloat]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/ispixelsequal(to:)","title":"func isPixelsEqual(to: Graphic) async throws -> Bool","type":"method"},{"title":"Image","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(_:)","title":"static func image(TMImage) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(named:in:)","title":"static func image(named: String, in: Bundle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(url:)","title":"static func image(url: URL) async throws -> Graphic","type":"method"},{"title":"Video","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails(url:)","title":"static func videoDetails(url: URL) throws -> Graphic.VideoDetails","type":"method"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/fps","title":"let fps: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/framecount","title":"let frameCount: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/videodetails\/resolution","title":"let resolution: CGSize","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/videodetails","title":"Graphic.VideoDetails","type":"struct"},{"path":"\/documentation\/asyncgraphics\/graphic\/playvideo(url:loop:volume:)","title":"static func playVideo(url: URL, loop: Bool, volume: Double) -> AsyncStream<Graphic>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideo(url:progress:)","title":"static func importVideo(url: URL, progress: ((Graphic.ImportVideoFrameProgress) -> ())?) async throws -> [Graphic]","type":"method"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframeprogress\/fraction","title":"let fraction: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframeprogress\/index","title":"let index: Int","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframeprogress","title":"Graphic.ImportVideoFrameProgress","type":"struct"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideostream(url:)","title":"static func importVideoStream(url: URL) -> AsyncThrowingStream<Graphic, Error>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframe(at:url:info:)","title":"static func importVideoFrame(at: Int, url: URL, info: VideoInfo?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotodata(with:fps:kbps:format:)","title":"static func exportVideoToData(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat) async throws -> Data","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotourl(with:fps:kbps:format:)","title":"static func exportVideoToURL(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat) async throws -> URL","type":"method"},{"title":"Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texture(_:)","title":"static func texture(MTLTexture) throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/unsupportedtype","title":"case unsupportedType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/errordescription-1s22m","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/errordescription-2d86n","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/textureerror","title":"Graphic.TextureError","type":"enum"},{"title":"Buffer","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelbuffer(_:)","title":"static func pixelBuffer(CVPixelBuffer) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/samplebuffer(_:)","title":"static func sampleBuffer(CMSampleBuffer) throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/unsupportedtype","title":"case unsupportedType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/errordescription-2we3g","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/errordescription-2sa03","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/buffererror","title":"Graphic.BufferError","type":"enum"},{"title":"Camera","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(_:device:preset:)","title":"static func camera(Graphic.CameraPosition, device: AVCaptureDevice.DeviceType, preset: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"},{"title":"Screen","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/screen(at:)","title":"static func screen(at: Int) throws -> AsyncStream<Graphic>","type":"method"},{"title":"Maps","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maps(type:latitude:longitude:span:resolution:mapoptions:options:)","title":"static func maps(type: Graphic.MapType, latitude: Angle, longitude: Angle, span: Angle, resolution: CGSize, mapOptions: Graphic.MapOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybrid","title":"case hybrid","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybridflyover","title":"case hybridFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/mutedstandard","title":"case mutedStandard","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satellite","title":"case satellite","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satelliteflyover","title":"case satelliteFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/standard","title":"case standard","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype","title":"Graphic.MapType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/darkmode","title":"static let darkMode: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showbuildings","title":"static let showBuildings: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showpointsofinterest","title":"static let showPointsOfInterest: Graphic.MapOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions","title":"Graphic.MapOptions","type":"struct"},{"title":"Color","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/color(_:resolution:options:)","title":"static func color(PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Text","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/text(_:font:center:horizontalalignment:verticalalignment:color:backgroundcolor:resolution:options:)","title":"static func text(String, font: Graphic.TextFont, center: CGPoint?, horizontalAlignment: Graphic.TextHorizontalAlignment, verticalAlignment: Graphic.TextVerticalAlignment, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/textfont","title":"Graphic.TextFont","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/left","title":"case left","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/right","title":"case right","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment","title":"Graphic.TextHorizontalAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/top","title":"case top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment","title":"Graphic.TextVerticalAlignment","type":"enum"},{"title":"Rectangle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(size:center:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(size: CGSize?, center: CGPoint?, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(frame:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(frame: CGRect, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(size:center:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(size: CGSize?, center: CGPoint?, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(frame:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(frame: CGRect, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Circle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/circle(radius:center:color:backgroundcolor:resolution:options:)","title":"static func circle(radius: CGFloat?, center: CGPoint?, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedcircle(radius:center:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedCircle(radius: CGFloat?, center: CGPoint?, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Polygon","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polygon(count:radius:center:rotation:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func polygon(count: Int, radius: CGFloat?, center: CGPoint?, rotation: Angle, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Gradient","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradient(direction:stops:center:scale:offset:extend:gamma:resolution:options:)","title":"static func gradient(direction: Graphic.GradientDirection, stops: [Graphic.GradientStop], center: CGPoint?, scale: CGFloat, offset: CGFloat, extend: Graphic.GradientExtend, gamma: CGFloat, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/radial","title":"case radial","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection","title":"Graphic.GradientDirection","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/init(at:color:)","title":"init(at: CGFloat, color: PixelColor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/color","title":"var color: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/location","title":"var location: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop","title":"Graphic.GradientStop","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend","title":"Graphic.GradientExtend","type":"enum"},{"title":"Noise","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/noise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func noise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorednoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func coloredNoise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomnoise(seed:resolution:options:)","title":"static func randomNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomcolorednoise(seed:resolution:options:)","title":"static func randomColoredNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Particles","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticles(particlescale:particlecolor:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvParticles(particleScale: CGFloat, particleColor: PixelColor, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticles(with:particlescale:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvColorParticles(with: Graphic, particleScale: CGFloat, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVColorParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/four","title":"case four","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/one","title":"case one","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/two","title":"case two","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount","title":"Graphic.UVParticleSampleCount","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelalpha","title":"static let channelAlpha: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/clipchannelalpha","title":"static let clipChannelAlpha: Graphic.UVParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions","title":"Graphic.UVParticleOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVColorParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions","title":"Graphic.UVColorParticleOptions","type":"struct"},{"title":"Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blended(with:blendingmode:placement:options:)","title":"func blended(with: Graphic, blendingMode: AGBlendMode, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blend(with:blendingmode:)","title":"static func blend(with: [Graphic], blendingMode: AGArrayBlendMode) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(with:)","title":"static func add(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/average(with:)","title":"static func average(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mask(foreground:background:mask:placement:options:)","title":"static func mask(foreground: Graphic, background: Graphic, mask: Graphic, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/translated(_:options:)","title":"func translated(CGPoint, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/translated(x:y:options:)","title":"func translated(x: CGFloat, y: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotated(_:options:)","title":"func rotated(Angle, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/scaled(_:options:)","title":"func scaled(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(width:height:options:)","title":"func sized(width: CGFloat?, height: CGFloat?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(_:options:)","title":"func sized(CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformed(translation:rotation:scale:size:options:)","title":"func transformed(translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatranslated(with:translation:lumagamma:placement:options:)","title":"func lumaTranslated(with: Graphic, translation: CGPoint, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatranslated(with:x:y:lumagamma:placement:options:)","title":"func lumaTranslated(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarotated(with:rotation:lumagamma:placement:options:)","title":"func lumaRotated(with: Graphic, rotation: Angle, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:scale:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, scale: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:x:y:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Transform with Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformblended(with:blendingmode:placement:translation:rotation:scale:size:options:)","title":"func transformBlended(with: Graphic, blendingMode: AGBlendMode, placement: Placement, translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Mirror","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredhorizontally()","title":"func mirroredHorizontally() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredvertically()","title":"func mirroredVertically() async throws -> Graphic","type":"method"},{"title":"Rotate","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedleft()","title":"func rotatedLeft() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedright()","title":"func rotatedRight() async throws -> Graphic","type":"method"},{"title":"Stack","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func hStack(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func vStack(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/top","title":"case top","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment","title":"Graphic.HStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/trailing","title":"case trailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment","title":"Graphic.VStackAlignment","type":"enum"},{"title":"Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/brightness(_:)","title":"func brightness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/darkness(_:)","title":"func darkness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contrast(_:)","title":"func contrast(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/gamma(_:)","title":"func gamma(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/inverted()","title":"func inverted() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/smoothed()","title":"func smoothed() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/opacity(_:)","title":"func opacity(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exposureoffset(_:)","title":"func exposureOffset(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(_:)","title":"func add(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/subtract(_:)","title":"func subtract(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiply(_:)","title":"func multiply(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/divide(_:)","title":"func divide(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/levels(brightness:darkness:contrast:gamma:invert:smooth:opacity:offset:)","title":"func levels(brightness: CGFloat, darkness: CGFloat, contrast: CGFloat, gamma: CGFloat, invert: Bool, smooth: Bool, opacity: CGFloat, offset: CGFloat) async throws -> Graphic","type":"method"},{"title":"Luma Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumabrightness(with:brightness:lumagamma:placement:)","title":"func lumaBrightness(with: Graphic, brightness: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadarkness(with:darkness:lumagamma:placement:)","title":"func lumaDarkness(with: Graphic, darkness: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumacontrast(with:contrast:lumagamma:placement:)","title":"func lumaContrast(with: Graphic, contrast: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumagamma(with:gamma:lumagamma:placement:)","title":"func lumaGamma(with: Graphic, gamma: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumainverted(with:lumagamma:placement:)","title":"func lumaInverted(with: Graphic, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasmoothed(with:lumagamma:placement:)","title":"func lumaSmoothed(with: Graphic, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaopacity(with:opacity:lumagamma:placement:)","title":"func lumaOpacity(with: Graphic, opacity: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaexposureoffset(with:offset:lumagamma:placement:)","title":"func lumaExposureOffset(with: Graphic, offset: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaadd(with:value:lumagamma:placement:)","title":"func lumaAdd(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasubtract(with:value:lumagamma:placement:)","title":"func lumaSubtract(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamultiply(with:value:lumagamma:placement:)","title":"func lumaMultiply(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadivide(with:value:lumagamma:placement:)","title":"func lumaDivide(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"title":"Colors","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/monochrome()","title":"func monochrome() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/saturated(_:)","title":"func saturated(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/hue(_:)","title":"func hue(Angle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/tinted(_:)","title":"func tinted(PixelColor) async throws -> Graphic","type":"method"},{"title":"Luma Colors","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamonochrome(with:lumagamma:)","title":"func lumaMonochrome(with: Graphic, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamonochrome(with:lumagamma:)","title":"func lumaMonochrome(with: Graphic, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasaturated(with:saturation:lumagamma:)","title":"func lumaSaturated(with: Graphic, saturation: CGFloat, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumahue(with:hue:lumagamma:)","title":"func lumaHue(with: Graphic, hue: Angle, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatinted(with:color:lumagamma:)","title":"func lumaTinted(with: Graphic, color: PixelColor, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"title":"Color Convert","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvert(_:channel:)","title":"func colorConvert(Graphic.ColorConversion, channel: Graphic.ColorConvertChannel) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hsvtorgb","title":"case hsvToRGB","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rgbtohsv","title":"case rgbToHSV","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion","title":"Graphic.ColorConversion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/all","title":"case all","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/first","title":"case first","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/second","title":"case second","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/third","title":"case third","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel","title":"Graphic.ColorConvertChannel","type":"enum"},{"title":"Threshold","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/threshold(_:options:)","title":"func threshold(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Quantize","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/quantize(_:options:)","title":"func quantize(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Channels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/channelmix(red:green:blue:alpha:)","title":"func channelMix(red: Graphic.ColorChannel, green: Graphic.ColorChannel, blue: Graphic.ColorChannel, alpha: Graphic.ColorChannel) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/alphatoluminance()","title":"func alphaToLuminance() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/luminancetoalpha()","title":"func luminanceToAlpha() async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/alpha","title":"case alpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/green","title":"case green","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/mono","title":"case mono","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/red","title":"case red","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/white","title":"case white","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel","title":"Graphic.ColorChannel","type":"enum"},{"title":"Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurred(radius:)","title":"func blurred(radius: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredbox(radius:samplecount:options:)","title":"func blurredBox(radius: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredzoom(radius:center:samplecount:options:)","title":"func blurredZoom(radius: CGFloat, center: CGPoint?, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredangle(radius:angle:samplecount:options:)","title":"func blurredAngle(radius: CGFloat, angle: Angle, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredrandom(radius:options:)","title":"func blurredRandom(radius: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredbox(with:radius:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredBox(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredzoom(with:radius:center:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredZoom(with: Graphic, radius: CGFloat, center: CGPoint?, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredangle(with:radius:angle:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredrandom(with:radius:lumagamma:placement:options:)","title":"func lumaBlurredRandom(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredcircle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredCircle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredangle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredAngle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredzoom(radius:center:light:samplecount:options:)","title":"func rainbowBlurredZoom(radius: CGFloat, center: CGPoint?, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredcircle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredCircle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredangle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredzoom(with:radius:center:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredZoom(with: Graphic, radius: CGFloat, center: CGPoint?, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Displace","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/displaced(with:offset:origin:placement:options:)","title":"func displaced(with: Graphic, offset: CGFloat, origin: PixelColor, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Slope","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/slope(amplitude:origin:options:)","title":"func slope(amplitude: CGFloat, origin: PixelColor, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Edge","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edge(amplitude:distance:options:)","title":"func edge(amplitude: CGFloat, distance: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorededge(amplitude:distance:options:)","title":"func coloredEdge(amplitude: CGFloat, distance: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Clamp","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamp(_:low:high:includealpha:options:)","title":"func clamp(Graphic.ClampType, low: CGFloat, high: CGFloat, includeAlpha: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/relative","title":"case relative","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype","title":"Graphic.ClampType","type":"enum"},{"title":"Cross","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cross(with:fraction:placement:options:)","title":"func cross(with: Graphic, fraction: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Corner Pin","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cornerpinned(topleft:topright:bottomleft:bottomright:perspective:subdivisions:backgroundcolor:)","title":"func cornerPinned(topLeft: CGPoint?, topRight: CGPoint?, bottomLeft: CGPoint?, bottomRight: CGPoint?, perspective: Bool, subdivisions: Int, backgroundColor: PixelColor) async throws -> Graphic","type":"method"},{"title":"Chroma Key","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakey(color:parameters:options:)","title":"func chromaKey(color: PixelColor, parameters: Graphic.ChromaKeyParameters, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/alphacrop","title":"var alphaCrop: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/edgedesaturation","title":"var edgeDesaturation: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/range","title":"var range: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/softness","title":"var softness: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters","title":"Graphic.ChromaKeyParameters","type":"struct"},{"title":"Polar","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polar(radius:width:leadingangle:trailingangle:resolution:options:)","title":"func polar(radius: CGFloat?, width: CGFloat?, leadingAngle: Angle, trailingAngle: Angle, resolution: CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Morph","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedminimum(size:)","title":"func morphedMinimum(size: CGSize) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedmaximum(size:)","title":"func morphedMaximum(size: CGSize) async throws -> Graphic","type":"method"},{"title":"Metal","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:resolution:options:)","title":"static func metal(code: String, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:options:)","title":"func metal(code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.method","title":"func metal(with: Graphic, code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.type.method","title":"static func metal(with: [Graphic], code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/errordescription-3tlde","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/errordescription-4jz8f","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror","title":"Graphic.SolidMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/errordescription-25n39","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/errordescription-67zic","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror","title":"Graphic.DirectMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/errordescription-9h5vc","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/errordescription-7q299","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror","title":"Graphic.DualMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/errordescription-7llqq","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/errordescription-u6rb","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror","title":"Graphic.ArrayMetalError","type":"enum"},{"title":"UV","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uv(resolution:options:)","title":"static func uv(resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Resolution","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(to:placement:)","title":"func resized(to: CGSize, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(to:placement:method:)","title":"func resized(to: CGSize, placement: Placement, method: Graphic.ResizeMethod) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(in:)","title":"func resized(in: CGSize) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizedstretched(to:method:)","title":"func resizedStretched(to: CGSize, method: Graphic.ResizeMethod) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/resized(by:)","title":"func resized(by: CGFloat) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/bilinear","title":"case bilinear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/lanczos","title":"case lanczos","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/resizemethod","title":"Graphic.ResizeMethod","type":"enum"},{"title":"Reduce","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduce(by:)","title":"func reduce(by: Graphic.ReduceMethod) async throws -> PixelColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduce(by:in:)","title":"func reduce(by: Graphic.ReduceMethod, in: Graphic.ReduceAxis) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/average","title":"case average","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/maximum","title":"case maximum","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/minimum","title":"case minimum","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/sum","title":"case sum","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/reducemethod","title":"Graphic.ReduceMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/x","title":"case x","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/y","title":"case y","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/reduceaxis","title":"Graphic.ReduceAxis","type":"enum"},{"title":"Bits","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/bits(_:)","title":"func bits(TMBits) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/standardbit()","title":"func standardBit() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/highbit()","title":"func highBit() async throws -> Graphic","type":"method"},{"title":"Color Space","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/applycolorspace(_:)","title":"func applyColorSpace(TMColorSpace) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/assigncolorspace(_:)","title":"func assignColorSpace(TMColorSpace) -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/convertcolorspace(from:to:)","title":"func convertColorSpace(from: TMColorSpace, to: TMColorSpace) async throws -> Graphic","type":"method"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blendedgraphic\/init(graphic:blendmode:)","title":"init(graphic: Graphic, blendMode: AGBlendMode)","type":"init"}],"path":"\/documentation\/asyncgraphics\/graphic\/blendedgraphic","title":"Graphic.BlendedGraphic","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/all","title":"static let all: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/bottom","title":"static let bottom: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/horizontal","title":"static let horizontal: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/leading","title":"static let leading: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/top","title":"static let top: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/trailing","title":"static let trailing: Graphic.EdgeInsets","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/vertical","title":"static let vertical: Graphic.EdgeInsets","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/edgeinsets","title":"Graphic.EdgeInsets","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/id-e6cs","title":"let id: UUID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/alphatoluminancewithalpha()","title":"func alphaToLuminanceWithAlpha() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/padding(on:_:options:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstacked(with:alignment:spacing:)","title":"static func hStacked(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackedfixed(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func hStackedFixed(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstacked(with:alignment:spacing:)","title":"static func vStacked(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackedfixed(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func vStackedFixed(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/zblendstacked(with:alignment:)","title":"static func zBlendStacked(with: [Graphic.BlendedGraphic], alignment: Graphic.ZStackAlignment) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstacked(with:alignment:)","title":"static func zStacked(with: [Graphic], alignment: Graphic.ZStackAlignment) async throws -> Graphic","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/back","title":"case back","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/front","title":"case front","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/flip()","title":"func flip()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/flipped()","title":"func flipped() -> Graphic.CameraPosition","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/cameraposition","title":"Graphic.CameraPosition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/toptrailing","title":"case topTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/trailing","title":"case trailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/zstackalignment","title":"Graphic.ZStackAlignment","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic\/==(_:_:)","title":"static func == (Graphic, Graphic) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/id-51dh8","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic","title":"Graphic","type":"struct"},{"children":[{"title":"Data","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture","title":"let texture: MTLTexture","type":"property"},{"title":"Metadata","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/bits","title":"let bits: TMBits","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/colorspace","title":"let colorSpace: TMColorSpace","type":"property"},{"title":"Resolution","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/width","title":"var width: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/depth","title":"var depth: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/resolution","title":"var resolution: SIMD3<Int>","type":"property"},{"title":"Options","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/highbit","title":"static let highBit: Graphic3D.ContentOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/purealpha","title":"static let pureAlpha: Graphic3D.ContentOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/contentoptions","title":"Graphic3D.ContentOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/edgemirror","title":"static let edgeMirror: Graphic3D.EffectOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/edgestretch","title":"static let edgeStretch: Graphic3D.EffectOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/effectoptions","title":"Graphic3D.EffectOptions","type":"struct"},{"title":"Voxels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/firstvoxelcolor","title":"var firstVoxelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/averagevoxelcolor","title":"var averageVoxelColor: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/voxelcolors","title":"var voxelColors: [[[PixelColor]]]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/channels","title":"var channels: [CGFloat]","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/isvoxelsequal(to:)","title":"func isVoxelsEqual(to: Graphic3D) async throws -> Bool","type":"method"},{"title":"Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture(_:)","title":"static func texture(MTLTexture) throws -> Graphic3D","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/unsupportedtype","title":"case unsupportedType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/errordescription-8s5yr","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/errordescription-6gqwk","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/texture3derror","title":"Graphic3D.Texture3DError","type":"enum"},{"title":"Color","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/color(_:resolution:options:)","title":"static func color(PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Box","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/box(size:origin:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func box(size: SIMD3<Double>, origin: SIMD3<Double>, cornerRadius: Double, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/box(size:center:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func box(size: SIMD3<Double>, center: SIMD3<Double>?, cornerRadius: Double, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacebox(size:origin:cornerradius:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceBox(size: SIMD3<Double>, origin: SIMD3<Double>, cornerRadius: Double, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacebox(size:center:cornerradius:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceBox(size: SIMD3<Double>, center: SIMD3<Double>?, cornerRadius: Double, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Sphere","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sphere(radius:center:color:backgroundcolor:resolution:options:)","title":"static func sphere(radius: Double, center: SIMD3<Double>?, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/surfacesphere(radius:center:surfacewidth:color:backgroundcolor:resolution:options:)","title":"static func surfaceSphere(radius: Double, center: SIMD3<Double>?, surfaceWidth: Double, color: PixelColor, backgroundColor: PixelColor, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Noise","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/noise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func noise(offset: SIMD3<Double>, depth: Double, scale: Double, octaves: Int, seed: Int, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/colorednoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func coloredNoise(offset: SIMD3<Double>, depth: Double, scale: Double, octaves: Int, seed: Int, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/randomnoise(seed:resolution:options:)","title":"static func randomNoise(seed: Int, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/randomcolorednoise(seed:resolution:options:)","title":"static func randomColoredNoise(seed: Int, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blended(with:blendingmode:placement:)","title":"func blended(with: Graphic3D, blendingMode: AGBlendMode, placement: Placement) async throws -> Graphic3D","type":"method"},{"title":"Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/translated(_:options:)","title":"func translated(SIMD3<Double>, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/translated(x:y:z:options:)","title":"func translated(x: Double, y: Double, z: Double, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/rotated(_:options:)","title":"func rotated(SIMD3<Double>, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/rotated(x:y:z:options:)","title":"func rotated(x: Angle, y: Angle, z: Angle, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/scaled(_:options:)-87l2t","title":"func scaled(SIMD3<Double>, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/scaled(_:options:)-7kcho","title":"func scaled(Double, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/scaled(x:y:z:options:)","title":"func scaled(x: Double, y: Double, z: Double, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Stack","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"func hStack(with: Graphic3D, alignment: Graphic3D.HStackAlignment, spacing: Double, padding: Double, backgroundColor: PixelColor, resolution: SIMD3<Int>?) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"func vStack(with: Graphic3D, alignment: Graphic3D.VStackAlignment, spacing: Double, padding: Double, backgroundColor: PixelColor, resolution: SIMD3<Int>?) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"func dStack(with: Graphic3D, alignment: Graphic3D.DStackAlignment, spacing: Double, padding: Double, backgroundColor: PixelColor, resolution: SIMD3<Int>?) async throws -> Graphic3D","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/bottomfar","title":"case bottomFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/bottomnear","title":"case bottomNear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/topfar","title":"case topFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/topnear","title":"case topNear","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/hstackalignment","title":"Graphic3D.HStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/leadingfar","title":"case leadingFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/leadingnear","title":"case leadingNear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/trailing","title":"case trailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/trailingfar","title":"case trailingFar","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/trailingnear","title":"case trailingNear","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/vstackalignment","title":"Graphic3D.VStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/toptrailing","title":"case topTrailing","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/dstackalignment","title":"Graphic3D.DStackAlignment","type":"enum"},{"title":"Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/brightness(_:)","title":"func brightness(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/darkness(_:)","title":"func darkness(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/contrast(_:)","title":"func contrast(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/gamma(_:)","title":"func gamma(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/inverted()","title":"func inverted() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/smoothed()","title":"func smoothed() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/opacity(_:)","title":"func opacity(CGFloat) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/exposureoffset(_:)","title":"func exposureOffset(CGFloat) async throws -> Graphic3D","type":"method"},{"title":"Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurredbox(radius:samplecount:options:)","title":"func blurredBox(radius: CGFloat, sampleCount: Int, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurredzoom(radius:center:samplecount:options:)","title":"func blurredZoom(radius: CGFloat, center: SIMD3<Double>?, sampleCount: Int, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurreddirection(radius:direction:samplecount:options:)","title":"func blurredDirection(radius: CGFloat, direction: SIMD3<Double>, sampleCount: Int, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/blurredrandom(radius:options:)","title":"func blurredRandom(radius: CGFloat, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Displace","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/displaced(with:offset:origin:placement:options:)","title":"func displaced(with: Graphic3D, offset: Double, origin: PixelColor, placement: Placement, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Edge","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/edge(amplitude:distance:options:)","title":"func edge(amplitude: Double, distance: Double, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/colorededge(amplitude:distance:options:)","title":"func coloredEdge(amplitude: Double, distance: Double, options: Graphic3D.EffectOptions) async throws -> Graphic3D","type":"method"},{"title":"Cross","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/cross(with:fraction:placement:)","title":"func cross(with: Graphic3D, fraction: CGFloat, placement: Placement) async throws -> Graphic3D","type":"method"},{"title":"Sample","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/add(axis:)","title":"func add(axis: Graphic3D.Axis) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/average(axis:)","title":"func average(axis: Graphic3D.Axis) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sample(fraction:)","title":"func sample(fraction: Double) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/sample(index:)","title":"func sample(index: Int) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/samples()","title":"func samples() async throws -> [Graphic]","type":"method"},{"title":"Bits","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/bits(_:)","title":"func bits(TMBits) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/standardbit()","title":"func standardBit() async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/highbit()","title":"func highBit() async throws -> Graphic3D","type":"method"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/id-1cxz6","title":"let id: UUID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/trace(axis:alphathreshold:)","title":"func trace(axis: Graphic3D.Axis, alphaThreshold: CGFloat) async throws -> Graphic","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/metal(code:resolution:options:)","title":"static func metal(code: String, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/transparantnoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func transparantNoise(offset: SIMD3<Double>, depth: Double, scale: Double, octaves: Int, seed: Int, resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/uvw(resolution:options:)","title":"static func uvw(resolution: SIMD3<Int>, options: Graphic3D.ContentOptions) async throws -> Graphic3D","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/x","title":"case x","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/y","title":"case y","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/z","title":"case z","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/axis\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/axis","title":"Graphic3D.Axis","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/errordescription-91jlf","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/errordescription-6hkpr","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/solidmetal3derror","title":"Graphic3D.SolidMetal3DError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/==(_:_:)","title":"static func == (Graphic3D, Graphic3D) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3d\/id-2omk","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3d\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3d","title":"Graphic3D","type":"struct"},{"title":"Views","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agview\/init(_:)","title":"init(() -> AGGraph)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(activationpoint:)-4gjdu","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(activationpoint:)-4p1yz","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(named:_:)-4c0ps","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(named:_:)-6z4k0","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaction(named:_:)-7sru5","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityactivationpoint(_:)-5r0xn","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityactivationpoint(_:)-7kp12","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-2xmuo","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-4iyhh","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-4nhlg","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-6esjy","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-6r5vf","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-6t3dn","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-7m9ya","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitycustomcontent(_:_:importance:)-8l0nd","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhint(_:)-3b8gz","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhint(_:)-4x29n","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityhint(_:)-5oti6","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityinputlabels(_:)-4hlz6","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityinputlabels(_:)-8qpwz","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityinputlabels(_:)-9a5l8","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabel(_:)-1u9zn","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabel(_:)-8bmvz","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabel(_:)-ythy","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-5ejtw","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-7jnui","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-8iccq","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:)-96o2i","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1b59h","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3wmvm","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4rqxk","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9jv6f","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-6xzoy","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-8gwpx","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-926l","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:entries:entrylabel:)-9erdw","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-68uhz","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-7u2vy","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-8ax0u","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotor(_:textranges:)-yzab","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityvalue(_:)-6l4p9","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityvalue(_:)-8xb09","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/accessibilityvalue(_:)-umdp","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:)-4g2c6","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:)-9jixb","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:)-9q2p4","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:message:)-4osgg","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:message:)-5c18z","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:actions:message:)-6u29i","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:)-3mzmw","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:)-64fjq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:)-6sd9n","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:message:)-41g0c","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:message:)-8amex","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(_:ispresented:presenting:actions:message:)-9t3v7","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alignmentguide(_:computevalue:)-431pj","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/alignmentguide(_:computevalue:)-7xgbk","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/aspectratio(_:contentmode:)-8jbsr","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/aspectratio(_:contentmode:)-96ahx","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(_:in:fillstyle:)-1j7zn","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(_:in:fillstyle:)-92ftn","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(in:fillstyle:)-3vlc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/background(in:fillstyle:)-6zey5","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-41gds","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-4znof","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-506ph","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/badge(_:)-94h3y","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/buttonstyle(_:)-4yif1","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/buttonstyle(_:)-4z3t8","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2qdi0","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7qpin","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-cxxt","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1lszd","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1xo2t","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-rwj4","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-616rs","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7pyzo","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-855zl","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3225z","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3b2d","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3etfu","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1k3mo","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-24o8f","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4fdg3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-92h7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedobject(_:)-12fmj","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedobject(_:)-5yvll","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedsceneobject(_:)-10n5d","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedsceneobject(_:)-3whdk","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedscenevalue(_:_:)-646nz","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedscenevalue(_:_:)-9gvxb","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedvalue(_:_:)-7sfx","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/focusedvalue(_:_:)-uwag","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/help(_:)-27jl7","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/help(_:)-2gxgs","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/help(_:)-5ouog","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:)-2zmlt","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:)-81p39","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-6yb3m","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-79asd","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-8z9fx","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:)-9cl0n","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listitemtint(_:)-66d4u","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listitemtint(_:)-6n5qk","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:)-2nimb","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:)-2xllt","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:)-4jlrb","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:displaymode:)-2361c","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:displaymode:)-3yhm7","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationbartitle(_:displaymode:)-5wqks","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-3qeou","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-3r0y9","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-8vcnv","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationdocument(_:preview:)-9kb2f","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsubtitle(_:)-143ze","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsubtitle(_:)-3drb1","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationsubtitle(_:)-7xppw","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-54tzu","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-5gyg1","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-6p0o6","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-744ic","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/navigationtitle(_:)-7njnq","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:delegate:)-61gsu","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:delegate:)-toy2","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-5iauz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-5wzd2","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-64ndf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ondrop(of:istargeted:perform:)-9af91","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:perform:)-7hpfo","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:perform:)-7jd38","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:validator:perform:)-7lii3","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/onpastecommand(of:validator:perform:)-8q1tt","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/padding(_:)-28edm","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/padding(_:)-3lce","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/renameaction(_:)-50sqq","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/renameaction(_:)-6dg7m","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareainset(edge:alignment:spacing:content:)-1606n","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/safeareainset(edge:alignment:spacing:content:)-b3x9","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaleeffect(_:anchor:)-1fi0n","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaleeffect(_:anchor:)-9fkd8","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:)-41niy","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:)-5q9fi","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:)-8eent","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:suggestions:)-8fylz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:suggestions:)-94rvz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:placement:prompt:suggestions:)-9to2w","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:placement:prompt:token:)-4as8d","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:placement:prompt:token:)-6jyl4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:placement:prompt:token:)-8t0bd","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4zywn","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7vpd5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9pvvx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(content:)-2n0af","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(content:)-877un","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/agview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/agview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agview","title":"AGView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicview\/init(graphic:)","title":"init(graphic: Graphic)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(activationpoint:)-66ogw","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(activationpoint:)-67qi5","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(named:_:)-32pyy","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(named:_:)-8q0f2","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaction(named:_:)-9f5or","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityactivationpoint(_:)-1bdx0","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityactivationpoint(_:)-7a1dx","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-1rafj","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-21dpy","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-24fs3","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-45ss1","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-4sw66","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-4z4w5","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-6va5b","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitycustomcontent(_:_:importance:)-7ts9s","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhint(_:)-66bok","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhint(_:)-84gk3","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityhint(_:)-f8vb","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityinputlabels(_:)-1yqde","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityinputlabels(_:)-3uru8","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityinputlabels(_:)-921aw","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabel(_:)-1044m","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabel(_:)-6colx","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabel(_:)-8wx7j","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-18de7","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-7n1u3","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-8hnd2","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:)-8zhog","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-24j3n","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7yabl","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9jvtx","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entryid:entrylabel:)-yt1s","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-2l0se","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-2ntar","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-5pfox","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:entries:entrylabel:)-9nvm4","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-1kir1","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-3v7j5","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-7n7wv","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotor(_:textranges:)-8ou8g","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityvalue(_:)-6by7u","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityvalue(_:)-cy1l","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/accessibilityvalue(_:)-pwf1","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:)-553tn","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:)-7on9w","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:)-9e5ak","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:message:)-14uen","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:message:)-1e6rk","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:actions:message:)-6hhte","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:)-42xwe","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:)-4wt1x","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:)-8a7u6","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:message:)-2qom0","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:message:)-6eum","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(_:ispresented:presenting:actions:message:)-9aqfk","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alignmentguide(_:computevalue:)-4m6co","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/alignmentguide(_:computevalue:)-78xxs","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/aspectratio(_:contentmode:)-11zoo","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/aspectratio(_:contentmode:)-62pbv","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:in:fillstyle:)-4rids","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(_:in:fillstyle:)-6874i","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(in:fillstyle:)-7fz4e","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/background(in:fillstyle:)-9kmnc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-4dstu","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-6mxyv","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-7li77","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/badge(_:)-7t6uh","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/buttonstyle(_:)-5q4fu","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/buttonstyle(_:)-5w8b3","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-19qli","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4vp79","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5dg36","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-60hpo","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6200u","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-97u7e","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-17wsd","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6k8gm","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-95pv6","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-60i2h","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-727vm","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7q1a1","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-40vzx","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5rg2v","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3xwf8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-586ca","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedobject(_:)-8dsod","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedobject(_:)-8rocl","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedsceneobject(_:)-5fqa1","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedsceneobject(_:)-rt3i","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedscenevalue(_:_:)-6dm8i","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedscenevalue(_:_:)-uy75","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedvalue(_:_:)-50msu","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/focusedvalue(_:_:)-603ej","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/help(_:)-35est","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/help(_:)-7uumd","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/help(_:)-8txeq","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:)-2dhsv","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:)-78a69","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-1lb7n","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-2uhao","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-3qu4q","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:)-4flg4","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listitemtint(_:)-4gi3y","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listitemtint(_:)-8chfr","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:)-1u4im","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:)-3fvox","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:)-4arj9","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:displaymode:)-315ph","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:displaymode:)-492ec","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationbartitle(_:displaymode:)-dp6f","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-2422i","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-6ib5l","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-6r3zi","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationdocument(_:preview:)-7gf7k","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsubtitle(_:)-5g1lq","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsubtitle(_:)-8brgp","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationsubtitle(_:)-r510","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-1osui","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-7kj38","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-867pd","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-93vlf","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/navigationtitle(_:)-9a58","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:delegate:)-5rj32","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:delegate:)-668yq","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-3fpdn","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-60j56","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-7mjja","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/ondrop(of:istargeted:perform:)-7y5ug","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:perform:)-7pamr","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:perform:)-905fv","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:validator:perform:)-6opnw","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/onpastecommand(of:validator:perform:)-6wy3g","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/padding(_:)-19s7e","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/padding(_:)-2ssz9","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/renameaction(_:)-170c0","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/renameaction(_:)-9cvhp","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareainset(edge:alignment:spacing:content:)-7uiq1","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/safeareainset(edge:alignment:spacing:content:)-8b9jg","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaleeffect(_:anchor:)-1yb99","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaleeffect(_:anchor:)-whox","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:)-2b0oo","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:)-6je7j","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:)-6trv3","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:suggestions:)-1mljh","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:suggestions:)-2eh70","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:placement:prompt:suggestions:)-87u3b","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:placement:prompt:token:)-3pbns","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:placement:prompt:token:)-5avjs","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:placement:prompt:token:)-5r6s2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-30tfu","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-633e1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9986a","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(content:)-4misg","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(content:)-98kuf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicview","title":"GraphicView","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transform\/rotationx","title":"var rotationX: Angle","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transform\/rotationy","title":"var rotationY: Angle","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transform\/zoom","title":"var zoom: CGFloat","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transform\/identity","title":"static let identity: Graphic3DView.Transform","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic3dview\/transform","title":"Graphic3DView.Transform","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/init(graphic3d:transform:)","title":"init(graphic3D: Graphic3D, transform: Graphic3DView.Transform)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(activationpoint:)-3kwgx","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(activationpoint:)-98yjc","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaction(named:_:)-2t62i","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaction(named:_:)-7ua5g","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaction(named:_:)-8rdsc","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityactivationpoint(_:)-55n30","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityactivationpoint(_:)-6fi3a","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-17aml","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-1u5zo","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-53ski","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-7hrha","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-84tbx","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-8xhnf","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-9d337","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitycustomcontent(_:_:importance:)-kyly","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityhint(_:)-28rpq","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityhint(_:)-6czoh","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityhint(_:)-8rthh","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityinputlabels(_:)-63p6x","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityinputlabels(_:)-7vb0o","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityinputlabels(_:)-7wb2b","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitylabel(_:)-6n95d","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitylabel(_:)-7jiwt","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitylabel(_:)-7jkmj","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:)-4gwdp","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:)-8llk2","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:)-9rzr7","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:)-qw1v","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1wead","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6zm6p","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7ciz4","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7eve9","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entrylabel:)-56dga","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entrylabel:)-6srh7","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entrylabel:)-8zsyn","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:entries:entrylabel:)-9uju1","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:textranges:)-4nep7","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:textranges:)-5b0dx","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:textranges:)-6n6ep","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotor(_:textranges:)-94b0","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityvalue(_:)-1nkhi","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityvalue(_:)-4x98","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/accessibilityvalue(_:)-6wpz7","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:)-2bq99","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:)-4e4p","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:)-5itd5","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:message:)-1zmgz","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:message:)-79b0x","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:actions:message:)-8gxi2","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:)-2akc9","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:)-4qymu","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:)-7civo","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:message:)-1mdq5","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:message:)-9co7b","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(_:ispresented:presenting:actions:message:)-9nn5k","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alignmentguide(_:computevalue:)-1oh9r","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/alignmentguide(_:computevalue:)-30zzw","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/aspectratio(_:contentmode:)-1nrdv","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/aspectratio(_:contentmode:)-e3qb","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(_:in:fillstyle:)-8847t","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(_:in:fillstyle:)-9n3cl","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(in:fillstyle:)-3lg3c","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/background(in:fillstyle:)-5iszt","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/badge(_:)-1anvc","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/badge(_:)-5lj96","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/badge(_:)-5sq4s","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/badge(_:)-70nb3","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/buttonstyle(_:)-752yr","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/buttonstyle(_:)-8272j","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-19mkp","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6nxtj","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7wfjm","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-37tc9","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5xz89","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8ip9h","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3qc1h","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4f74b","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4owu0","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1avi3","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4x52o","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8hdqg","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2bqtz","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2djot","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-780ln","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7lrpw","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedobject(_:)-57mli","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedobject(_:)-8opey","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedsceneobject(_:)-5kye6","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedsceneobject(_:)-9roo","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedscenevalue(_:_:)-519l5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedscenevalue(_:_:)-7cxkd","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedvalue(_:_:)-53qf1","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/focusedvalue(_:_:)-9d90h","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/help(_:)-3j2gk","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/help(_:)-5wyj1","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/help(_:)-7rf1y","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/keyboardshortcut(_:)-4jabe","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/keyboardshortcut(_:)-9npgl","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linelimit(_:)-4pn4r","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linelimit(_:)-68hk3","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linelimit(_:)-6qbj4","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linelimit(_:)-8a2bz","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listitemtint(_:)-69p9f","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listitemtint(_:)-7ccne","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:)-192a6","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:)-4xciw","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:)-65otp","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:displaymode:)-1w9px","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:displaymode:)-4wj2a","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationbartitle(_:displaymode:)-6j9zi","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdocument(_:preview:)-116sx","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdocument(_:preview:)-40qra","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdocument(_:preview:)-63j2l","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationdocument(_:preview:)-9z9wj","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsubtitle(_:)-57kn1","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsubtitle(_:)-5utsj","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationsubtitle(_:)-7jwsi","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationtitle(_:)-3cbb8","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationtitle(_:)-3wn4r","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationtitle(_:)-72rcc","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationtitle(_:)-7xrso","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationtitle(_:)-8o2ec","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:delegate:)-8jqs3","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:delegate:)-q466","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:istargeted:perform:)-2aphy","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:istargeted:perform:)-555j6","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:istargeted:perform:)-81e14","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ondrop(of:istargeted:perform:)-85ha1","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/onpastecommand(of:perform:)-3m4oc","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onpastecommand(of:perform:)-90zgs","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onpastecommand(of:validator:perform:)-3um80","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/onpastecommand(of:validator:perform:)-4fywb","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/padding(_:)-13tdi","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/padding(_:)-8lu8e","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/renameaction(_:)-48xfv","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/renameaction(_:)-8ew5p","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/safeareainset(edge:alignment:spacing:content:)-3teey","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/safeareainset(edge:alignment:spacing:content:)-86rbt","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scaleeffect(_:anchor:)-4498i","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scaleeffect(_:anchor:)-9hawl","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:)-3macx","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:)-77mfo","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:)-7wcll","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:suggestions:)-1sos9","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:suggestions:)-3v772","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:placement:prompt:suggestions:)-3xoit","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:placement:prompt:token:)-6z021","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:placement:prompt:token:)-ay7x","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:placement:prompt:token:)-nuit","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-443qr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5p1bw","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7jxwc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbar(content:)-2da8i","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbar(content:)-2uf91","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic3dview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic3dview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic3dview","title":"Graphic3DView","type":"struct"},{"title":"Video","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framecount","title":"var frameCount: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/framerate","title":"let frameRate: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct\/resolution","title":"let resolution: CGSize","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.struct","title":"GraphicVideoPlayer.Info","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/loop","title":"var loop: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct\/volume","title":"var volume: Double","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.struct","title":"GraphicVideoPlayer.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(named:fileextension:in:options:)","title":"convenience init(named: String, fileExtension: String, in: Bundle, options: GraphicVideoPlayer.Options) throws","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/init(url:options:)","title":"init(url: URL, options: GraphicVideoPlayer.Options)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/frameindex","title":"var frameIndex: Int","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/info-swift.property","title":"var info: GraphicVideoPlayer.Info","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/options-swift.property","title":"var options: GraphicVideoPlayer.Options","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/playing","title":"var playing: Bool","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seconds","title":"var seconds: Double","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/time","title":"var time: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/play()","title":"func play()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-5hpoo","title":"func seek(to: Double)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-86zyw","title":"func seek(to: Int)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/seek(to:)-8d3sm","title":"func seek(to: CMTime)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/startseek()","title":"func startSeek()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stop()","title":"func stop()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/stopseek()","title":"func stopSeek()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/==(_:_:)","title":"static func == (GraphicVideoPlayer, GraphicVideoPlayer) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvideoplayer","title":"GraphicVideoPlayer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/init(fps:kbps:format:resolution:)","title":"init(fps: Double, kbps: Int, format: GraphicVideoRecorder.VideoFormat, resolution: CGSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/recording","title":"var recording: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/append(graphic:)","title":"func append(graphic: Graphic) async throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/start()","title":"func start() throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/stop()-2clbb","title":"func stop() async throws -> URL","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/stop()-8ms6j","title":"func stop() async throws -> Data","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/mov","title":"case mov","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/mp4","title":"case mp4","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/filetype","title":"var fileType: AVFileType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder\/videoformat","title":"GraphicVideoRecorder.VideoFormat","type":"enum"}],"path":"\/documentation\/asyncgraphics\/graphicvideorecorder","title":"GraphicVideoRecorder","type":"class"},{"title":"Lists","type":"groupMarker"},{"children":[{"title":"Live Camera Feed","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/camera(_:device:preset:)","title":"static func camera(Graphic.CameraPosition, device: AVCaptureDevice.DeviceType, preset: AVCaptureSession.Preset) throws -> AsyncStream<Graphic>","type":"method"},{"title":"Live Screen Feed","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/screen(at:)","title":"static func screen(at: Int) throws -> AsyncStream<Graphic>","type":"method"},{"title":"Import an Image","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(named:in:)","title":"static func image(named: String, in: Bundle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(url:)","title":"static func image(url: URL) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/image(_:)","title":"static func image(TMImage) async throws -> Graphic","type":"method"},{"title":"Import a Video","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideoframe(at:url:info:)","title":"static func importVideoFrame(at: Int, url: URL, info: VideoInfo?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideo(url:progress:)","title":"static func importVideo(url: URL, progress: ((Graphic.ImportVideoFrameProgress) -> ())?) async throws -> [Graphic]","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/importvideostream(url:)","title":"static func importVideoStream(url: URL) -> AsyncThrowingStream<Graphic, Error>","type":"method"},{"title":"Import a Buffer","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/pixelbuffer(_:)","title":"static func pixelBuffer(CVPixelBuffer) throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/samplebuffer(_:)","title":"static func sampleBuffer(CMSampleBuffer) throws -> Graphic","type":"method"},{"title":"Import a Texture","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texture(_:)","title":"static func texture(MTLTexture) throws -> Graphic","type":"method"},{"title":"Export an Image","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/image","title":"var image: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/imagewithtransparency","title":"var imageWithTransparency: TMImage","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/pngdata","title":"var pngData: Data","type":"property"},{"title":"Export a Video","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotodata(with:fps:kbps:format:)","title":"static func exportVideoToData(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat) async throws -> Data","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exportvideotourl(with:fps:kbps:format:)","title":"static func exportVideoToURL(with: [Graphic], fps: Double, kbps: Int, format: VideoFormat) async throws -> URL","type":"method"},{"title":"Apple Maps","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maps(type:latitude:longitude:span:resolution:mapoptions:options:)","title":"static func maps(type: Graphic.MapType, latitude: Angle, longitude: Angle, span: Angle, resolution: CGSize, mapOptions: Graphic.MapOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybrid","title":"case hybrid","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/hybridflyover","title":"case hybridFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/mutedstandard","title":"case mutedStandard","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satellite","title":"case satellite","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/satelliteflyover","title":"case satelliteFlyover","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/standard","title":"case standard","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/maptype","title":"Graphic.MapType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/darkmode","title":"static let darkMode: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showbuildings","title":"static let showBuildings: Graphic.MapOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/showpointsofinterest","title":"static let showPointsOfInterest: Graphic.MapOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/mapoptions","title":"Graphic.MapOptions","type":"struct"}],"path":"\/documentation\/asyncgraphics\/resources","title":"Resources","type":"symbol"},{"children":[{"title":"Color","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/color(_:resolution:options:)","title":"static func color(PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Text","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/text(_:font:center:horizontalalignment:verticalalignment:color:backgroundcolor:resolution:options:)","title":"static func text(String, font: Graphic.TextFont, center: CGPoint?, horizontalAlignment: Graphic.TextHorizontalAlignment, verticalAlignment: Graphic.TextVerticalAlignment, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/textfont","title":"Graphic.TextFont","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/left","title":"case left","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/right","title":"case right","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/texthorizontalalignment","title":"Graphic.TextHorizontalAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/top","title":"case top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/textverticalalignment","title":"Graphic.TextVerticalAlignment","type":"enum"},{"title":"Rectangle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(size:center:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(size: CGSize?, center: CGPoint?, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rectangle(frame:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func rectangle(frame: CGRect, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(size:center:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(size: CGSize?, center: CGPoint?, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedrectangle(frame:cornerradius:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedRectangle(frame: CGRect, cornerRadius: CGFloat, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Circle","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/circle(radius:center:color:backgroundcolor:resolution:options:)","title":"static func circle(radius: CGFloat?, center: CGPoint?, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/strokedcircle(radius:center:linewidth:color:backgroundcolor:resolution:options:)","title":"static func strokedCircle(radius: CGFloat?, center: CGPoint?, lineWidth: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Polygon","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polygon(count:radius:center:rotation:cornerradius:color:backgroundcolor:resolution:options:)","title":"static func polygon(count: Int, radius: CGFloat?, center: CGPoint?, rotation: Angle, cornerRadius: CGFloat, color: PixelColor, backgroundColor: PixelColor, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Gradient","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradient(direction:stops:center:scale:offset:extend:gamma:resolution:options:)","title":"static func gradient(direction: Graphic.GradientDirection, stops: [Graphic.GradientStop], center: CGPoint?, scale: CGFloat, offset: CGFloat, extend: Graphic.GradientExtend, gamma: CGFloat, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/angle","title":"case angle","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/radial","title":"case radial","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientdirection","title":"Graphic.GradientDirection","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/init(at:color:)","title":"init(at: CGFloat, color: PixelColor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/color","title":"var color: PixelColor","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop\/location","title":"var location: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientstop","title":"Graphic.GradientStop","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/gradientextend","title":"Graphic.GradientExtend","type":"enum"},{"title":"Noise","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/noise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func noise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorednoise(offset:depth:scale:octaves:seed:resolution:options:)","title":"static func coloredNoise(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomnoise(seed:resolution:options:)","title":"static func randomNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/randomcolorednoise(seed:resolution:options:)","title":"static func randomColoredNoise(seed: Int, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Particles","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticles(particlescale:particlecolor:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvParticles(particleScale: CGFloat, particleColor: PixelColor, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticles(with:particlescale:backgroundcolor:resolution:samplecount:particleoptions:options:)","title":"func uvColorParticles(with: Graphic, particleScale: CGFloat, backgroundColor: PixelColor, resolution: CGSize, sampleCount: Graphic.UVParticleSampleCount, particleOptions: Graphic.UVColorParticleOptions, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/four","title":"case four","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/one","title":"case one","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/two","title":"case two","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticlesamplecount","title":"Graphic.UVParticleSampleCount","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelalpha","title":"static let channelAlpha: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVParticleOptions","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/clipchannelalpha","title":"static let clipChannelAlpha: Graphic.UVParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvparticleoptions","title":"Graphic.UVParticleOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/channelscale","title":"static let channelScale: Graphic.UVColorParticleOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/uvcolorparticleoptions","title":"Graphic.UVColorParticleOptions","type":"struct"}],"path":"\/documentation\/asyncgraphics\/visuals","title":"Visuals","type":"symbol"},{"children":[{"title":"Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blended(with:blendingmode:placement:options:)","title":"func blended(with: Graphic, blendingMode: AGBlendMode, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blend(with:blendingmode:)","title":"static func blend(with: [Graphic], blendingMode: AGArrayBlendMode) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(with:)","title":"static func add(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/average(with:)","title":"static func average(with: [Graphic]) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mask(foreground:background:mask:placement:options:)","title":"static func mask(foreground: Graphic, background: Graphic, mask: Graphic, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/translated(_:options:)","title":"func translated(CGPoint, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/translated(x:y:options:)","title":"func translated(x: CGFloat, y: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotated(_:options:)","title":"func rotated(Angle, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/scaled(_:options:)","title":"func scaled(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(width:height:options:)","title":"func sized(width: CGFloat?, height: CGFloat?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/sized(_:options:)","title":"func sized(CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformed(translation:rotation:scale:size:options:)","title":"func transformed(translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Transform","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatranslated(with:translation:lumagamma:placement:options:)","title":"func lumaTranslated(with: Graphic, translation: CGPoint, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatranslated(with:x:y:lumagamma:placement:options:)","title":"func lumaTranslated(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarotated(with:rotation:lumagamma:placement:options:)","title":"func lumaRotated(with: Graphic, rotation: Angle, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:scale:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, scale: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumascaled(with:x:y:lumagamma:placement:options:)","title":"func lumaScaled(with: Graphic, x: CGFloat, y: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Transform with Blend","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/transformblended(with:blendingmode:placement:translation:rotation:scale:size:options:)","title":"func transformBlended(with: Graphic, blendingMode: AGBlendMode, placement: Placement, translation: CGPoint, rotation: Angle, scale: CGFloat, size: CGSize?, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Mirror","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredhorizontally()","title":"func mirroredHorizontally() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/mirroredvertically()","title":"func mirroredVertically() async throws -> Graphic","type":"method"},{"title":"Rotate","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedleft()","title":"func rotatedLeft() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rotatedright()","title":"func rotatedRight() async throws -> Graphic","type":"method"},{"title":"Stack","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func hStack(with: [Graphic], alignment: Graphic.HStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstack(with:alignment:spacing:padding:backgroundcolor:resolution:)","title":"static func vStack(with: [Graphic], alignment: Graphic.VStackAlignment, spacing: CGFloat, padding: CGFloat, backgroundColor: PixelColor, resolution: CGSize?) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/top","title":"case top","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/hstackalignment","title":"Graphic.HStackAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/trailing","title":"case trailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/vstackalignment","title":"Graphic.VStackAlignment","type":"enum"},{"title":"Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/brightness(_:)","title":"func brightness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/darkness(_:)","title":"func darkness(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/contrast(_:)","title":"func contrast(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/gamma(_:)","title":"func gamma(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/inverted()","title":"func inverted() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/smoothed()","title":"func smoothed() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/opacity(_:)","title":"func opacity(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/exposureoffset(_:)","title":"func exposureOffset(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/add(_:)","title":"func add(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/subtract(_:)","title":"func subtract(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/multiply(_:)","title":"func multiply(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/divide(_:)","title":"func divide(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/levels(brightness:darkness:contrast:gamma:invert:smooth:opacity:offset:)","title":"func levels(brightness: CGFloat, darkness: CGFloat, contrast: CGFloat, gamma: CGFloat, invert: Bool, smooth: Bool, opacity: CGFloat, offset: CGFloat) async throws -> Graphic","type":"method"},{"title":"Luma Levels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumabrightness(with:brightness:lumagamma:placement:)","title":"func lumaBrightness(with: Graphic, brightness: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadarkness(with:darkness:lumagamma:placement:)","title":"func lumaDarkness(with: Graphic, darkness: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumacontrast(with:contrast:lumagamma:placement:)","title":"func lumaContrast(with: Graphic, contrast: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumagamma(with:gamma:lumagamma:placement:)","title":"func lumaGamma(with: Graphic, gamma: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumainverted(with:lumagamma:placement:)","title":"func lumaInverted(with: Graphic, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasmoothed(with:lumagamma:placement:)","title":"func lumaSmoothed(with: Graphic, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaopacity(with:opacity:lumagamma:placement:)","title":"func lumaOpacity(with: Graphic, opacity: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaexposureoffset(with:offset:lumagamma:placement:)","title":"func lumaExposureOffset(with: Graphic, offset: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumaadd(with:value:lumagamma:placement:)","title":"func lumaAdd(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasubtract(with:value:lumagamma:placement:)","title":"func lumaSubtract(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamultiply(with:value:lumagamma:placement:)","title":"func lumaMultiply(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumadivide(with:value:lumagamma:placement:)","title":"func lumaDivide(with: Graphic, value: CGFloat, lumaGamma: CGFloat, placement: Placement) async throws -> Graphic","type":"method"},{"title":"Colors","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/monochrome()","title":"func monochrome() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/saturated(_:)","title":"func saturated(CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/hue(_:)","title":"func hue(Angle) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/tinted(_:)","title":"func tinted(PixelColor) async throws -> Graphic","type":"method"},{"title":"Luma Colors","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamonochrome(with:lumagamma:)","title":"func lumaMonochrome(with: Graphic, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumamonochrome(with:lumagamma:)","title":"func lumaMonochrome(with: Graphic, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumasaturated(with:saturation:lumagamma:)","title":"func lumaSaturated(with: Graphic, saturation: CGFloat, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumahue(with:hue:lumagamma:)","title":"func lumaHue(with: Graphic, hue: Angle, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumatinted(with:color:lumagamma:)","title":"func lumaTinted(with: Graphic, color: PixelColor, lumaGamma: CGFloat) async throws -> Graphic","type":"method"},{"title":"Color Convert","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvert(_:channel:)","title":"func colorConvert(Graphic.ColorConversion, channel: Graphic.ColorConvertChannel) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hsvtorgb","title":"case hsvToRGB","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rgbtohsv","title":"case rgbToHSV","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconversion","title":"Graphic.ColorConversion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/all","title":"case all","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/first","title":"case first","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/second","title":"case second","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/third","title":"case third","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorconvertchannel","title":"Graphic.ColorConvertChannel","type":"enum"},{"title":"Threshold","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/threshold(_:options:)","title":"func threshold(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Quantize","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/quantize(_:options:)","title":"func quantize(CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Channels","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/channelmix(red:green:blue:alpha:)","title":"func channelMix(red: Graphic.ColorChannel, green: Graphic.ColorChannel, blue: Graphic.ColorChannel, alpha: Graphic.ColorChannel) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/alphatoluminance()","title":"func alphaToLuminance() async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/luminancetoalpha()","title":"func luminanceToAlpha() async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/alpha","title":"case alpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/green","title":"case green","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/mono","title":"case mono","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/red","title":"case red","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/white","title":"case white","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/colorchannel","title":"Graphic.ColorChannel","type":"enum"},{"title":"Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurred(radius:)","title":"func blurred(radius: CGFloat) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredbox(radius:samplecount:options:)","title":"func blurredBox(radius: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredzoom(radius:center:samplecount:options:)","title":"func blurredZoom(radius: CGFloat, center: CGPoint?, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredangle(radius:angle:samplecount:options:)","title":"func blurredAngle(radius: CGFloat, angle: Angle, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/blurredrandom(radius:options:)","title":"func blurredRandom(radius: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredbox(with:radius:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredBox(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredzoom(with:radius:center:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredZoom(with: Graphic, radius: CGFloat, center: CGPoint?, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredangle(with:radius:angle:lumagamma:samplecount:placement:options:)","title":"func lumaBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumablurredrandom(with:radius:lumagamma:placement:options:)","title":"func lumaBlurredRandom(with: Graphic, radius: CGFloat, lumaGamma: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredcircle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredCircle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredangle(radius:angle:light:samplecount:options:)","title":"func rainbowBlurredAngle(radius: CGFloat, angle: Angle, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/rainbowblurredzoom(radius:center:light:samplecount:options:)","title":"func rainbowBlurredZoom(radius: CGFloat, center: CGPoint?, light: CGFloat, sampleCount: Int, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Luma Rainbow Blur","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredcircle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredCircle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredangle(with:radius:angle:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredAngle(with: Graphic, radius: CGFloat, angle: Angle, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/lumarainbowblurredzoom(with:radius:center:light:lumagamma:samplecount:placement:options:)","title":"func lumaRainbowBlurredZoom(with: Graphic, radius: CGFloat, center: CGPoint?, light: CGFloat, lumaGamma: CGFloat, sampleCount: Int, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Displace","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/displaced(with:offset:origin:placement:options:)","title":"func displaced(with: Graphic, offset: CGFloat, origin: PixelColor, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Slope","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/slope(amplitude:origin:options:)","title":"func slope(amplitude: CGFloat, origin: PixelColor, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Edge","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/edge(amplitude:distance:options:)","title":"func edge(amplitude: CGFloat, distance: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/colorededge(amplitude:distance:options:)","title":"func coloredEdge(amplitude: CGFloat, distance: CGFloat, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Clamp","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamp(_:low:high:includealpha:options:)","title":"func clamp(Graphic.ClampType, low: CGFloat, high: CGFloat, includeAlpha: Bool, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hold","title":"case hold","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/relative","title":"case relative","type":"case"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/clamptype","title":"Graphic.ClampType","type":"enum"},{"title":"Cross","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cross(with:fraction:placement:options:)","title":"func cross(with: Graphic, fraction: CGFloat, placement: Placement, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Corner Pin","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/cornerpinned(topleft:topright:bottomleft:bottomright:perspective:subdivisions:backgroundcolor:)","title":"func cornerPinned(topLeft: CGPoint?, topRight: CGPoint?, bottomLeft: CGPoint?, bottomRight: CGPoint?, perspective: Bool, subdivisions: Int, backgroundColor: PixelColor) async throws -> Graphic","type":"method"},{"title":"Chroma Key","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakey(color:parameters:options:)","title":"func chromaKey(color: PixelColor, parameters: Graphic.ChromaKeyParameters, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/alphacrop","title":"var alphaCrop: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/edgedesaturation","title":"var edgeDesaturation: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/range","title":"var range: CGFloat","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters\/softness","title":"var softness: CGFloat","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/chromakeyparameters","title":"Graphic.ChromaKeyParameters","type":"struct"},{"title":"Polar","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/polar(radius:width:leadingangle:trailingangle:resolution:options:)","title":"func polar(radius: CGFloat?, width: CGFloat?, leadingAngle: Angle, trailingAngle: Angle, resolution: CGSize, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Morph","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedminimum(size:)","title":"func morphedMinimum(size: CGSize) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/graphic\/morphedmaximum(size:)","title":"func morphedMaximum(size: CGSize) async throws -> Graphic","type":"method"}],"path":"\/documentation\/asyncgraphics\/effects","title":"Effects","type":"symbol"},{"children":[{"title":"Solid (0 Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:resolution:options:)","title":"static func metal(code: String, resolution: CGSize, options: Graphic.ContentOptions) async throws -> Graphic","type":"method"},{"title":"Direct (1 Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(code:options:)","title":"func metal(code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Dual (2 Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.method","title":"func metal(with: Graphic, code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Array (N Inputs)","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/metal(with:code:options:)-swift.type.method","title":"static func metal(with: [Graphic], code: String, options: Graphic.EffectOptions) async throws -> Graphic","type":"method"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/errordescription-3tlde","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/errordescription-4jz8f","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/solidmetalerror","title":"Graphic.SolidMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/errordescription-25n39","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/errordescription-67zic","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/directmetalerror","title":"Graphic.DirectMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/errordescription-9h5vc","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/errordescription-7q299","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/dualmetalerror","title":"Graphic.DualMetalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/metalfilenotfound","title":"case metalFileNotFound","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/errordescription-7llqq","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/errordescription-u6rb","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/graphic\/arraymetalerror","title":"Graphic.ArrayMetalError","type":"enum"}],"path":"\/documentation\/asyncgraphics\/metal","title":"Metal","type":"symbol"},{"title":"Layout","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/aspectratio(_:contentmode:)-3mf5r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/aspectratio(_:contentmode:)-7wngc","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/background(_:)-21oqw","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/background(_:)-4rvum","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agframe\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agframe\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agframe\/==(_:_:)","title":"static func == (AGFrame, AGFrame) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agframe\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agframe\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agframe","title":"AGFrame","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/init(alignment:with:)","title":"init(alignment: Graphic.ZStackAlignment, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-3fl80","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/aspectratio(_:contentmode:)-7mj2r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-2bc10","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/background(_:)-8o6af","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agzstack\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agzstack\/==(_:_:)","title":"static func == (AGZStack, AGZStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agzstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agzstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agzstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agzstack","title":"AGZStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.VStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-1nji8","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/aspectratio(_:contentmode:)-n0ph","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-3y07o","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/background(_:)-45lbw","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvstack\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agvstack\/==(_:_:)","title":"static func == (AGVStack, AGVStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvstack","title":"AGVStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/init(alignment:spacing:with:)","title":"init(alignment: Graphic.HStackAlignment, spacing: CGFloat, with: () -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-4k5r9","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/aspectratio(_:contentmode:)-6q9un","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-1wnkx","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/background(_:)-9do05","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/aghstack\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/aghstack\/==(_:_:)","title":"static func == (AGHStack, AGHStack) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/aghstack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aghstack\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/aghstack\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/aghstack","title":"AGHStack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/init(minlength:)","title":"init(minLength: CGFloat)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/aspectratio(_:contentmode:)-7iz8s","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/aspectratio(_:contentmode:)-9o9qy","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/background(_:)-4ry8u","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/background(_:)-vbq4","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agspacer\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agspacer\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspacer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agspacer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agspacer","title":"AGSpacer","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/aspectratio(_:contentmode:)-4s594","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/aspectratio(_:contentmode:)-8ftnb","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/background(_:)-31qvd","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/background(_:)-59f2s","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpadding\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agpadding\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agpadding\/==(_:_:)","title":"static func == (AGPadding, AGPadding) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agpadding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpadding\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agpadding\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agpadding","title":"AGPadding","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/aspectratio(_:contentmode:)-204eh","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/aspectratio(_:contentmode:)-9mgji","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/background(_:)-81d6u","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/background(_:)-8h6j3","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agaspectratio\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/==(_:_:)","title":"static func == (AGAspectRatio, AGAspectRatio) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agaspectratio\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agaspectratio\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agaspectratio\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agaspectratio","title":"AGAspectRatio","type":"struct"},{"title":"Resources","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/init(_:)","title":"init(TMImage)","type":"init"},{"path":"\/documentation\/asyncgraphics\/agimage\/init(named:)","title":"init(named: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGImage","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/resizable()","title":"func resizable() -> AGImage","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/aspectratio(_:contentmode:)-7h56r","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/aspectratio(_:contentmode:)-964kg","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/background(_:)-66nel","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/background(_:)-9b3ms","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agimage\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agimage\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agimage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agimage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agimage","title":"AGImage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/init(with:)","title":"init(with: GraphicVideoPlayer)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resizable()","title":"func resizable() -> AGVideo","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8hcdj","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/aspectratio(_:contentmode:)-8xa34","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-5k5vi","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/background(_:)-9u74n","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agvideo\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agvideo\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agvideo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agvideo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agvideo","title":"AGVideo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/init(_:)","title":"init(Graphic.CameraPosition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/aspectratio(contentmode:)","title":"func aspectRatio(contentMode: AGContentMode) -> AGCamera","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/resizable()","title":"func resizable() -> AGCamera","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/aspectratio(_:contentmode:)-49uqq","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/aspectratio(_:contentmode:)-r1na","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/background(_:)-29s3u","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/background(_:)-4oh03","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcamera\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcamera\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agcamera\/==(_:_:)","title":"static func == (AGCamera, AGCamera) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcamera\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcamera\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcamera\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcamera","title":"AGCamera","type":"struct"},{"title":"Shapes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/strokeborder(linewidth:)","title":"func strokeBorder(lineWidth: CGFloat) -> AGCircle","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/aspectratio(_:contentmode:)-67te1","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/aspectratio(_:contentmode:)-7ltzm","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/background(_:)-775pw","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/background(_:)-864oa","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcircle\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcircle\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcircle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcircle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcircle","title":"AGCircle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/strokeborder(linewidth:)","title":"func strokeBorder(lineWidth: CGFloat) -> AGRectangle","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/aspectratio(_:contentmode:)-5tsmm","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/aspectratio(_:contentmode:)-90z9w","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/background(_:)-5j6vj","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/background(_:)-8vet1","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agrectangle\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agrectangle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agrectangle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agrectangle","title":"AGRectangle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/init(cornerradius:)","title":"init(cornerRadius: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/strokeborder(linewidth:)","title":"func strokeBorder(lineWidth: CGFloat) -> AGRoundedRectangle","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/aspectratio(_:contentmode:)-399yr","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/aspectratio(_:contentmode:)-9ohzb","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/background(_:)-5sj0o","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/background(_:)-5sp24","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agroundedrectangle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agroundedrectangle","title":"AGRoundedRectangle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/init(count:)","title":"init(count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/aspectratio(_:contentmode:)-3a5lh","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/aspectratio(_:contentmode:)-ocbd","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/background(_:)-1vwvf","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/background(_:)-7cs7u","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agpolygon\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agpolygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agpolygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agpolygon","title":"AGPolygon","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/init(count:cornerradius:)","title":"init(count: Int, cornerRadius: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/aspectratio(_:contentmode:)-2x0sf","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/aspectratio(_:contentmode:)-ewr1","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/background(_:)-8fjn2","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/background(_:)-8o7ej","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agroundedpolygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agroundedpolygon","title":"AGRoundedPolygon","type":"struct"},{"title":"Color","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/init(_:)","title":"init(PixelColor)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/aspectratio(_:contentmode:)-7ok3h","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/aspectratio(_:contentmode:)-95vps","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/background(_:)-4uidj","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/background(_:)-65u9r","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agcolor\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agcolor\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcolor","title":"AGColor","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/aspectratio(_:contentmode:)-31lhq","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/aspectratio(_:contentmode:)-3dgda","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/background(_:)-1cd4u","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/background(_:)-36o60","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/==(_:_:)","title":"static func == (AGForegroundColor, AGForegroundColor) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agforegroundcolor","title":"AGForegroundColor","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/aspectratio(_:contentmode:)-3jbd5","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/aspectratio(_:contentmode:)-6tpt","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/background(_:)-596su","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/background(_:)-9xga2","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agborder\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agborder\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agborder\/==(_:_:)","title":"static func == (AGBorder, AGBorder) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agborder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agborder\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agborder\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agborder","title":"AGBorder","type":"struct"},{"title":"Effects","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/aspectratio(_:contentmode:)-45w68","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/aspectratio(_:contentmode:)-5bzfm","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/background(_:)-2y5ds","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/background(_:)-8cq2b","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblur\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblur\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agblur\/==(_:_:)","title":"static func == (AGBlur, AGBlur) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agblur\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblur\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblur\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agblur","title":"AGBlur","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/aspectratio(_:contentmode:)-38tpi","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/aspectratio(_:contentmode:)-4fpmr","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/background(_:)-4c775","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/background(_:)-qrlu","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agchannelmix\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/==(_:_:)","title":"static func == (AGChannelMix, AGChannelMix) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agchannelmix\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agchannelmix\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agchannelmix\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agchannelmix","title":"AGChannelMix","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/init(offset:depth:scale:octaves:seed:colored:random:)","title":"init(offset: CGPoint, depth: CGFloat, scale: CGFloat, octaves: Int, seed: Int, colored: Bool, random: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/aspectratio(_:contentmode:)-19tsw","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/aspectratio(_:contentmode:)-7dajj","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/background(_:)-36hm6","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/background(_:)-94or8","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agnoise\/resolution(at:for:)","title":"func resolution(at: CGSize, for: AGSpecification) -> CGSize","type":"method"}],"path":"\/documentation\/asyncgraphics\/agnoise\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agnoise\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agnoise\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agnoise","title":"AGNoise","type":"struct"},{"title":"Blending","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/aspectratio(_:contentmode:)-1008i","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/aspectratio(_:contentmode:)-8q124","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/background(_:)-8x001","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/background(_:)-95y6t","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblend\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblend\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agblend\/==(_:_:)","title":"static func == (AGBlend, AGBlend) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agblend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblend\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblend\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agblend","title":"AGBlend","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/aspectratio(_:contentmode:)-5hotd","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/aspectratio(_:contentmode:)-8x18v","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/background(_:)-2vdzs","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/background(_:)-4ngm","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agmask\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agmask\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agmask\/==(_:_:)","title":"static func == (AGMask, AGMask) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agmask\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agmask\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agmask\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agmask","title":"AGMask","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/aspectratio(_:contentmode:)-2doab","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/aspectratio(_:contentmode:)-3i4x","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/background(_:)-6490p","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/background(_:)-73kwg","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agbackground\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agbackground\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agbackground\/==(_:_:)","title":"static func == (AGBackground, AGBackground) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agbackground\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agbackground\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agbackground\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agbackground","title":"AGBackground","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/aspectratio(_:contentmode:)-4kk7m","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/aspectratio(_:contentmode:)-6w8ro","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/background(_:)-3jxh0","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/background(_:)-8tvul","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agopacity\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agopacity\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agopacity\/==(_:_:)","title":"static func == (AGOpacity, AGOpacity) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agopacity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agopacity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agopacity\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agopacity","title":"AGOpacity","type":"struct"},{"title":"Loop","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/init(_:graph:)","title":"init(ClosedRange<Int>, graph: (Int) -> AGGraph)","type":"init"},{"path":"\/documentation\/asyncgraphics\/agforeach\/init(_:graphs:)","title":"init(Range<Int>, graphs: (Int) -> [AGGraph])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/children","title":"var children: [AGGraph]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/components","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/aspectratio(_:contentmode:)-2isju","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/aspectratio(_:contentmode:)-9owq5","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/background(_:)-47hd","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/background(_:)-7t01h","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agforeach\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforeach\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agforeach\/==(_:_:)","title":"static func == (AGForEach, AGForEach) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agforeach\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agforeach\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agforeach\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agforeach","title":"AGForEach","type":"struct"},{"title":"Other","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/aggraphbuilder\/buildblock(_:)","title":"static func buildBlock((AGGraph)...) -> [AGGraph]","type":"method"}],"path":"\/documentation\/asyncgraphics\/aggraphbuilder","title":"AGGraphBuilder","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agspecification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agspecification\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agspecification","title":"AGSpecification","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agdetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agdetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agdetails","title":"AGDetails","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/children","title":"var children: [AGGraph]","type":"property"},{"path":"\/documentation\/asyncgraphics\/agblended\/components-468hs","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/render(at:details:)","title":"func render(at: CGSize, details: AGDetails) async throws -> Graphic","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/components-7pppy","title":"var components: AGComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/aspectratio(_:contentmode:)-34zb4","title":"func aspectRatio(CGSize, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/aspectratio(_:contentmode:)-9w5jh","title":"func aspectRatio(CGFloat?, contentMode: AGContentMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/background(_:)-13rxm","title":"func background(Color) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/background(_:)-89qt9","title":"func background(() -> (AGGraph)) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/blendmode(_:)","title":"func blendMode(AGBlendMode) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/blur(radius:)","title":"func blur(radius: CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/border(_:)","title":"func border(PixelColor) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> AGForegroundColor","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/frame(width:height:)","title":"func frame(width: CGFloat?, height: CGFloat?) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/isequal(to:)","title":"func isEqual(to: AGGraph) -> Bool","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/luminancetoalpha()","title":"func luminanceToAlpha() -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/mask(_:)","title":"func mask(() -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/opacity(_:)","title":"func opacity(CGFloat) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/overlay(content:)","title":"func overlay(content: () -> AGGraph) -> AGGraph","type":"method"},{"path":"\/documentation\/asyncgraphics\/agblended\/padding(on:_:)","title":"func padding(on: Graphic.EdgeInsets, CGFloat) -> AGGraph","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblended\/aggraph-implementations","title":"AGGraph Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/asyncgraphics\/agblended\/==(_:_:)","title":"static func == (AGBlended, AGBlended) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agblended\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agblended\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/agblended\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agblended","title":"AGBlended","type":"struct"},{"path":"\/documentation\/asyncgraphics\/agcomponents","title":"AGComponents","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/graphicrecorder","title":"GraphicRecorder","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/add","title":"case add","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/addwithalpha","title":"case addWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/average","title":"case average","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/difference","title":"case difference","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/divide","title":"case divide","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/gamma","title":"case gamma","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/maximum","title":"case maximum","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/minimum","title":"case minimum","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/multiply","title":"case multiply","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/over","title":"case over","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/power","title":"case power","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/subtract","title":"case subtract","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/subtractwithalpha","title":"case subtractWithAlpha","type":"case"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/under","title":"case under","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agarrayblendmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agarrayblendmode","title":"AGArrayBlendMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcontentmode\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/asyncgraphics\/agcontentmode\/fit","title":"case fit","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/agcontentmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/agcontentmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/agcontentmode","title":"AGContentMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/center","title":"case center","type":"case"},{"path":"\/documentation\/asyncgraphics\/placement\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/asyncgraphics\/placement\/fit","title":"case fit","type":"case"},{"path":"\/documentation\/asyncgraphics\/placement\/stretch","title":"case stretch","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/id-10xot","title":"var id: String","type":"property"},{"path":"\/documentation\/asyncgraphics\/placement\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/asyncgraphics\/placement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/id-98fom","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/asyncgraphics\/placement\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/asyncgraphics\/placement\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/asyncgraphics\/placement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/asyncgraphics\/placement\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/asyncgraphics\/placement","title":"Placement","type":"enum"}],"path":"\/documentation\/asyncgraphics","title":"AsyncGraphics","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}