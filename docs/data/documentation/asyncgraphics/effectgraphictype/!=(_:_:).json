{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncgraphics\/effectgraphictype\/!=(_:_:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","metadata":{"modules":[{"relatedModules":["Swift"],"name":"AsyncGraphics"}],"symbolKind":"op","title":"!=(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:13AsyncGraphics17EffectGraphicTypeO","extendedModule":"Swift","roleHeading":"Operator"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/EffectGraphicType\/!=(_:_:)"},"hierarchy":{"paths":[["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/EffectGraphicType","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/EffectGraphicType\/Equatable-Implementations"]]},"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Equatable.!=(_:_:)"},{"text":".","type":"text"}],"references":{"doc://AsyncGraphics/documentation/AsyncGraphics/EffectGraphicType":{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/EffectGraphicType","title":"EffectGraphicType","type":"topic","kind":"symbol","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectGraphicType"}],"navigatorTitle":[{"text":"EffectGraphicType","kind":"identifier"}],"url":"\/documentation\/asyncgraphics\/effectgraphictype"},"doc://AsyncGraphics/documentation/AsyncGraphics":{"url":"\/documentation\/asyncgraphics","role":"collection","abstract":[{"type":"text","text":"Edit images and video with async \/ await in Swift, powered by Metal."}],"title":"AsyncGraphics","type":"topic","kind":"symbol","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics"},"doc://AsyncGraphics/documentation/AsyncGraphics/EffectGraphicType/!=(_:_:)":{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/EffectGraphicType\/!=(_:_:)","title":"!=(_:_:)","type":"topic","kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/asyncgraphics\/effectgraphictype\/!=(_:_:)"},"doc://AsyncGraphics/documentation/AsyncGraphics/EffectGraphicType/Equatable-Implementations":{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/EffectGraphicType\/Equatable-Implementations","title":"Equatable Implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/asyncgraphics\/effectgraphictype\/equatable-implementations"}}}