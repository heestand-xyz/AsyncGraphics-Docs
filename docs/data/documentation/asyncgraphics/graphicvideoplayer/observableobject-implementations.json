<<<<<<< HEAD
{"variants":[{"paths":["\/documentation\/asyncgraphics\/graphicvideoplayer\/observableobject-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer\/ObservableObject-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer\/objectWillChange"],"generated":true}],"kind":"article","metadata":{"modules":[{"name":"AsyncGraphics"}],"role":"collectionGroup","title":"ObservableObject Implementations"},"hierarchy":{"paths":[["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer"],["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoPlayback","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer"]]},"references":{"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicVideoPlayer":{"role":"symbol","title":"GraphicVideoPlayer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GraphicVideoPlayer"}],"abstract":[],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GraphicVideoPlayer"}],"url":"\/documentation\/asyncgraphics\/graphicvideoplayer"},"doc://AsyncGraphics/documentation/AsyncGraphics/VideoPlayback":{"role":"collectionGroup","title":"Video Playback","abstract":[{"type":"text","text":"Create a video player UI with a play \/ pause button and a slider as a time seeker."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoPlayback","kind":"article","type":"topic","url":"\/documentation\/asyncgraphics\/videoplayback"},"doc://AsyncGraphics/documentation/AsyncGraphics":{"role":"collection","title":"AsyncGraphics","abstract":[{"type":"text","text":"Edit images and video with async \/ await in Swift, powered by Metal."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics","kind":"symbol","type":"topic","url":"\/documentation\/asyncgraphics"},"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicVideoPlayer/objectWillChange":{"conformance":{"constraints":[{"type":"codeVoice","code":"ObjectWillChangePublisher"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ObservableObjectPublisher"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"objectWillChange","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"objectWillChange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ObservableObjectPublisher","preciseIdentifier":"s:7Combine25ObservableObjectPublisherC"}],"abstract":[],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer\/objectWillChange","kind":"symbol","type":"topic","url":"\/documentation\/asyncgraphics\/graphicvideoplayer\/objectwillchange"}}}
=======
{"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer"],["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoPlayback","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer"]]},"metadata":{"modules":[{"name":"AsyncGraphics"}],"title":"ObservableObject Implementations","role":"collectionGroup"},"sections":[],"topicSections":[{"identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer\/objectWillChange"],"title":"Instance Properties","generated":true}],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncgraphics\/graphicvideoplayer\/observableobject-implementations"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer\/ObservableObject-Implementations"},"references":{"doc://AsyncGraphics/documentation/AsyncGraphics":{"url":"\/documentation\/asyncgraphics","kind":"symbol","abstract":[{"type":"text","text":"Edit images and video with async \/ await in Swift, powered by Metal."}],"role":"collection","type":"topic","title":"AsyncGraphics","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics"},"doc://AsyncGraphics/documentation/AsyncGraphics/VideoPlayback":{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoPlayback","role":"collectionGroup","url":"\/documentation\/asyncgraphics\/videoplayback","abstract":[{"text":"Create a video player UI with a play \/ pause button and a slider as a time seeker.","type":"text"}],"title":"Video Playback","type":"topic","kind":"article"},"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicVideoPlayer":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GraphicVideoPlayer"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer","title":"GraphicVideoPlayer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GraphicVideoPlayer"}],"type":"topic","abstract":[],"url":"\/documentation\/asyncgraphics\/graphicvideoplayer"},"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicVideoPlayer/objectWillChange":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"objectWillChange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ObservableObjectPublisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine25ObservableObjectPublisherC"}],"kind":"symbol","url":"\/documentation\/asyncgraphics\/graphicvideoplayer\/objectwillchange","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer\/objectWillChange","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"ObjectWillChangePublisher"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ObservableObjectPublisher"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"objectWillChange"}}}
>>>>>>> b50526e0 (v2 Docs)
