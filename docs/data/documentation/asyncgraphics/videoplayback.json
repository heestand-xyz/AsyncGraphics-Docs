{"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Blending","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Layout","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Camera","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoEditing"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First we create a "},{"type":"codeVoice","code":"Graphic.VideoPlayer"},{"type":"text","text":". The video player takes a url and options. In this case we want the video to loop and be muted."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then we create a "},{"type":"codeVoice","code":"State"},{"type":"text","text":" for our current video "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic"},{"type":"text","text":". Then in the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" we add the graphic with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicView"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the bottom of the "},{"type":"codeVoice","code":"VStack"},{"type":"text","text":" we add an "},{"type":"codeVoice","code":"HStack"},{"type":"text","text":" with a play button and a seek slider."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The button will just toggle between playing and pausing the video."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The slider will seek with a binding of the current time and the "},{"type":"codeVoice","code":"videoPlayer.seek(to:)"},{"type":"text","text":" func."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the slider is disabled during playback. To properly use seek, please call "},{"type":"codeVoice","code":"videoPlayer.seekStart()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"videoPlayer.seekEnd()"},{"type":"text","text":"."}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the bottom of our "},{"type":"codeVoice","code":"body"},{"type":"text","text":" we add a task, this will render the video frames."}]},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import AsyncGraphics","","struct ContentView: View {","   ","    @StateObject private var videoPlayer: GraphicVideoPlayer = {","        let url = Bundle.main.url(forResource: \"Video\", withExtension: \"mov\")!","        var options = GraphicVideoPlayer.Options()","        options.loop = true","        options.volume = 0.0","        return GraphicVideoPlayer(url: url, options: options)","    }()","    ","    @State private var graphic: Graphic?","    ","    var body: some View {","        VStack {","            ","            if let graphic {","                GraphicView(graphic: graphic)","            }","            ","            HStack {","                ","                Button {","                    if videoPlayer.playing {","                        videoPlayer.pause()","                    } else {","                        videoPlayer.play()","                    }","                } label: {","                    Image(systemName: videoPlayer.playing ? \"pause.fill\" : \"play.fill\")","                }","                ","                Slider(value: Binding(get: {","                    videoPlayer.seconds","                }, set: { second in","                    videoPlayer.seek(to: second)","                }), in: 0.0...videoPlayer.info.duration)","                .disabled(videoPlayer.playing)","            }","        }","        .padding()","        .task {","            for await videoGraphic in Graphic.playVideo(with: videoPlayer) {","                self.graphic = videoGraphic","            }","        }","    }","}"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/AGVideo"},{"type":"text","text":" then you don’t need the graphic State or the task with the for loop."}]}],"type":"aside","name":"Note"},{"type":"codeListing","syntax":"swift","code":["AGView {","    AGVideo(with: videoPlayer)","        .resizable()","        .aspectRatio(contentMode: .fit)","}"]}]}],"variants":[{"paths":["\/documentation\/asyncgraphics\/videoplayback"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoPlayback","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Create a video player UI with a play \/ pause button and a slider as a time seeker."}],"kind":"article","metadata":{"modules":[{"name":"AsyncGraphics"}],"role":"collectionGroup","title":"Video Playback"},"hierarchy":{"paths":[["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics"]]},"topicSections":[{"title":"Video","identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/AGVideo","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/playVideo(with:)","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/playVideo(url:loop:volume:)"]}],"references":{"doc://AsyncGraphics/documentation/AsyncGraphics/Camera":{"role":"collectionGroup","title":"Camera","abstract":[{"type":"text","text":"Capture live footage from the camera."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Camera","kind":"article","type":"topic","url":"\/documentation\/asyncgraphics\/camera"},"doc://AsyncGraphics/documentation/AsyncGraphics/Layout":{"role":"collectionGroup","title":"Layout","abstract":[{"type":"text","text":"Layout graphics with stacks, frames and padding."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Layout","kind":"article","type":"topic","url":"\/documentation\/asyncgraphics\/layout"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic":{"role":"symbol","title":"Graphic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graphic"}],"abstract":[{"type":"text","text":"A Graphic is like an image, but it’s backed by a "},{"type":"codeVoice","code":"MTLTexture"},{"type":"text","text":"."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Graphic"}],"url":"\/documentation\/asyncgraphics\/graphic"},"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicView":{"role":"symbol","title":"GraphicView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GraphicView"}],"abstract":[{"type":"text","text":"SwiftUI view for displaying a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic"},{"type":"text","text":"."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GraphicView"}],"url":"\/documentation\/asyncgraphics\/graphicview"},"doc://AsyncGraphics/documentation/AsyncGraphics":{"role":"collection","title":"AsyncGraphics","abstract":[{"type":"text","text":"Edit images and video with async \/ await in Swift, powered by Metal."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics","kind":"symbol","type":"topic","url":"\/documentation\/asyncgraphics"},"doc://AsyncGraphics/documentation/AsyncGraphics/VideoEditing":{"role":"collectionGroup","title":"Video Editing","abstract":[{"type":"text","text":"Edit a video by applying various effects."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoEditing","kind":"article","type":"topic","url":"\/documentation\/asyncgraphics\/videoediting"},"doc://AsyncGraphics/documentation/AsyncGraphics/AGVideo":{"role":"symbol","title":"AGVideo","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AGVideo"}],"abstract":[],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/AGVideo","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AGVideo"}],"url":"\/documentation\/asyncgraphics\/agvideo"},"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicVideoPlayer":{"role":"symbol","title":"GraphicVideoPlayer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GraphicVideoPlayer"}],"abstract":[],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicVideoPlayer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GraphicVideoPlayer"}],"url":"\/documentation\/asyncgraphics\/graphicvideoplayer"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/playVideo(url:loop:volume:)":{"role":"symbol","title":"playVideo(url:loop:volume:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"playVideo"},{"kind":"text","text":"("},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"loop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"volume"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Graphic","preciseIdentifier":"s:13AsyncGraphics7GraphicV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Async stream of a video"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/playVideo(url:loop:volume:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncgraphics\/graphic\/playvideo(url:loop:volume:)"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/playVideo(with:)":{"role":"symbol","title":"playVideo(with:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"playVideo"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GraphicVideoPlayer","preciseIdentifier":"s:13AsyncGraphics18GraphicVideoPlayerC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Graphic","preciseIdentifier":"s:13AsyncGraphics7GraphicV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Async stream of a video"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/playVideo(with:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncgraphics\/graphic\/playvideo(with:)"},"doc://AsyncGraphics/documentation/AsyncGraphics/Blending":{"role":"collectionGroup","title":"Blending","abstract":[{"type":"text","text":"Blend graphics with the z stacks and blending modes."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Blending","kind":"article","type":"topic","url":"\/documentation\/asyncgraphics\/blending"}}}