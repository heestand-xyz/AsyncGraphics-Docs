{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/LineCap\/RawRepresentable-Implementations"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"collectionGroup","roleHeading":"API Collection","modules":[{"name":"AsyncGraphics"}],"title":"RawRepresentable Implementations"},"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/LineCap\/init(from:)"],"anchor":"Initializers"},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/LineCap\/hashValue"]},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/LineCap\/encode(to:)","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/LineCap\/hash(into:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncgraphics\/graphic\/linecap\/rawrepresentable-implementations"]}],"hierarchy":{"paths":[["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/LineCap"]]},"kind":"article","references":{"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/LineCap/hash(into:)":{"type":"topic","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/LineCap\/hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"text":")","kind":"text"}],"kind":"symbol","title":"hash(into:)","url":"\/documentation\/asyncgraphics\/graphic\/linecap\/hash(into:)","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/LineCap/init(from:)":{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/LineCap\/init(from:)","title":"init(from:)","role":"symbol","type":"topic","abstract":[],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]},"url":"\/documentation\/asyncgraphics\/graphic\/linecap\/init(from:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/LineCap/hashValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/LineCap\/hashValue","abstract":[],"url":"\/documentation\/asyncgraphics\/graphic\/linecap\/hashvalue","type":"topic","role":"symbol","kind":"symbol","title":"hashValue"},"doc://AsyncGraphics/documentation/AsyncGraphics":{"role":"collection","title":"AsyncGraphics","abstract":[{"type":"text","text":"Edit images and video with async \/ await in Swift, powered by Metal."}],"type":"topic","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics","url":"\/documentation\/asyncgraphics","kind":"symbol"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic":{"url":"\/documentation\/asyncgraphics\/graphic","navigatorTitle":[{"kind":"identifier","text":"Graphic"}],"abstract":[{"text":"A Graphic is like an image, but itâ€™s backed by a ","type":"text"},{"type":"codeVoice","code":"MTLTexture"},{"text":".","type":"text"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graphic"}],"kind":"symbol","title":"Graphic","type":"topic"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/LineCap":{"title":"Graphic.LineCap","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"LineCap","kind":"identifier"}],"type":"topic","url":"\/documentation\/asyncgraphics\/graphic\/linecap","role":"symbol","abstract":[],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/LineCap","navigatorTitle":[{"text":"LineCap","kind":"identifier"}]},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/LineCap/encode(to:)":{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/LineCap\/encode(to:)","title":"encode(to:)","role":"symbol","type":"topic","abstract":[],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/asyncgraphics\/graphic\/linecap\/encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"symbol"}}}