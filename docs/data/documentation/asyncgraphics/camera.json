{"metadata":{"title":"Camera","modules":[{"name":"AsyncGraphics"}],"role":"collectionGroup"},"seeAlsoSections":[{"identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Blending","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Layout","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoEditing","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoPlayback"],"generated":true,"title":"Articles"}],"variants":[{"paths":["\/documentation\/asyncgraphics\/camera"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"To quickly get started you can add a ","type":"text"},{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/AGCamera","isActive":true,"type":"reference"},{"text":", make it resizable and apply an aspect ratio.","type":"text"}],"type":"paragraph"},{"code":["import SwiftUI","import AsyncGraphics","","struct ContentView: View {","    var body: some View {","        AGView {","            AGZStack {","                AGCamera(.front)","                    .resizable()","                    .aspectRatio(contentMode: .fit)","            }","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To get more control over the capturing we can use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic"},{"type":"text","text":"s."}]},{"inlineContent":[{"text":"We start by creating a ","type":"text"},{"code":"State","type":"codeVoice"},{"type":"text","text":" variable for our "},{"isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic","type":"reference"},{"type":"text","text":". This will update 60 times a second."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Then we check if the graphic is available and display it with a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicView"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a task where we can execute async code. Here we also need a do catch block incase the selected camera is not available."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the task we will create a asynchronous for loop, by iterating over live camera frames from "},{"isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(at:lens:quality:)","type":"reference"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"Then lastly we save each frame to the main graphic state. Here you can also add effects such as ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/blurred(radius:)"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import SwiftUI","import AsyncGraphics","","struct ContentView: View {","","    @State private var graphic: Graphic?","","    var body: some View {","        ZStack {","            if let graphic = graphic {","                GraphicView(graphic: graphic)","            } else {","                ProgressView()","            }","        }","        .frame(maxWidth: .infinity, maxHeight: .infinity)","        .task {","            do {","                for await cameraGraphic in try Graphic.camera(.front) {","                    graphic = cameraGraphic","                }","            } catch {","                fatalError()","            }","        }","    }","}"]},{"content":[{"inlineContent":[{"text":"If you want to record live ","type":"text"},{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic","isActive":true,"type":"reference"},{"text":"s, use the ","type":"text"},{"type":"reference","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicRecorder","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Camera"},"abstract":[{"type":"text","text":"Capture live footage from the camera."}],"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Camera","identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(with:)","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(device:quality:)","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(at:lens:quality:)"]}],"sections":[],"references":{"doc://AsyncGraphics/documentation/AsyncGraphics":{"url":"\/documentation\/asyncgraphics","role":"collection","abstract":[{"type":"text","text":"Edit images and video with async \/ await in Swift, powered by Metal."}],"title":"AsyncGraphics","type":"topic","kind":"symbol","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/camera(at:lens:quality:)":{"title":"camera(at:lens:quality:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"camera","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Graphic","preciseIdentifier":"s:13AsyncGraphics7GraphicV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:13AsyncGraphics7GraphicV14CameraPositionO","text":"CameraPosition"},{"text":", ","kind":"text"},{"text":"lens","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVCaptureDevice","preciseIdentifier":"c:objc(cs)AVCaptureDevice"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"DeviceType","preciseIdentifier":"c:@T@AVCaptureDeviceType"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"quality"},{"kind":"text","text":": "},{"text":"AVCaptureSession","preciseIdentifier":"c:objc(cs)AVCaptureSession","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@AVCaptureSessionPreset","text":"Preset"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:ScS","kind":"typeIdentifier","text":"AsyncStream"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Graphic","preciseIdentifier":"s:13AsyncGraphics7GraphicV"},{"text":">","kind":"text"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(at:lens:quality:)","type":"topic","url":"\/documentation\/asyncgraphics\/graphic\/camera(at:lens:quality:)","role":"symbol","abstract":[{"text":"Async live stream from the camera","type":"text"}]},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/camera(with:)":{"title":"camera(with:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"camera","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13AsyncGraphics7GraphicV","text":"Graphic","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Camera","preciseIdentifier":"s:13AsyncGraphics7GraphicV6CameraC"},{"kind":"text","text":") -> "},{"text":"AsyncStream","kind":"typeIdentifier","preciseIdentifier":"s:ScS"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:13AsyncGraphics7GraphicV","text":"Graphic"},{"kind":"text","text":">"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(with:)","type":"topic","url":"\/documentation\/asyncgraphics\/graphic\/camera(with:)","role":"symbol","abstract":[{"text":"Async live stream from the camera","type":"text"}]},"doc://AsyncGraphics/documentation/AsyncGraphics/VideoPlayback":{"abstract":[{"type":"text","text":"Create a video player UI with a play \/ pause button and a slider as a time seeker."}],"title":"Video Playback","url":"\/documentation\/asyncgraphics\/videoplayback","role":"collectionGroup","type":"topic","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoPlayback","kind":"article"},"doc://AsyncGraphics/documentation/AsyncGraphics/AGCamera":{"abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AGCamera"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/AGCamera","type":"topic","title":"AGCamera","url":"\/documentation\/asyncgraphics\/agcamera","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AGCamera"}]},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic":{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Graphic","kind":"identifier"}],"kind":"symbol","title":"Graphic","type":"topic","abstract":[{"text":"A Graphic is like an image, but itâ€™s backed by a ","type":"text"},{"code":"MTLTexture","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/asyncgraphics\/graphic","navigatorTitle":[{"kind":"identifier","text":"Graphic"}]},"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicView":{"role":"symbol","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicView","abstract":[{"type":"text","text":"SwiftUI view for displaying a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic"},{"type":"text","text":"."}],"title":"GraphicView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GraphicView","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"GraphicView","kind":"identifier"}],"url":"\/documentation\/asyncgraphics\/graphicview"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/blurred(radius:)":{"abstract":[{"type":"text","text":"Gaussian Blur"}],"url":"\/documentation\/asyncgraphics\/graphic\/blurred(radius:)","title":"blurred(radius:)","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/blurred(radius:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"blurred"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"radius"},{"kind":"text","text":": "},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:13AsyncGraphics7GraphicV","text":"Graphic","kind":"typeIdentifier"}],"role":"symbol","type":"topic"},"doc://AsyncGraphics/documentation/AsyncGraphics/VideoEditing":{"title":"Video Editing","kind":"article","type":"topic","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoEditing","url":"\/documentation\/asyncgraphics\/videoediting","role":"collectionGroup","abstract":[{"type":"text","text":"Edit a video by applying various effects."}]},"doc://AsyncGraphics/documentation/AsyncGraphics/Layout":{"abstract":[{"text":"Layout graphics with stacks, frames and padding.","type":"text"}],"url":"\/documentation\/asyncgraphics\/layout","kind":"article","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Layout","type":"topic","title":"Layout","role":"collectionGroup"},"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicRecorder":{"abstract":[],"deprecated":true,"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GraphicRecorder","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicRecorder","url":"\/documentation\/asyncgraphics\/graphicrecorder","navigatorTitle":[{"kind":"identifier","text":"GraphicRecorder"}],"title":"GraphicRecorder"},"doc://AsyncGraphics/documentation/AsyncGraphics/Blending":{"type":"topic","kind":"article","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Blending","role":"collectionGroup","abstract":[{"type":"text","text":"Blend graphics with the z stacks and blending modes."}],"title":"Blending","url":"\/documentation\/asyncgraphics\/blending"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/camera(device:quality:)":{"title":"camera(device:quality:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"camera"},{"kind":"text","text":"("},{"text":"device","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)AVCaptureDevice","text":"AVCaptureDevice"},{"text":", ","kind":"text"},{"text":"quality","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)AVCaptureSession","kind":"typeIdentifier","text":"AVCaptureSession"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Preset","preciseIdentifier":"c:@T@AVCaptureSessionPreset"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"AsyncStream","kind":"typeIdentifier","preciseIdentifier":"s:ScS"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:13AsyncGraphics7GraphicV","kind":"typeIdentifier","text":"Graphic"},{"kind":"text","text":">"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(device:quality:)","type":"topic","url":"\/documentation\/asyncgraphics\/graphic\/camera(device:quality:)","role":"symbol","abstract":[{"text":"Async live stream from the camera","type":"text"}]}}}