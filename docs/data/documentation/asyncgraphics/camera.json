<<<<<<< HEAD
{"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Blending","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Layout","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoEditing","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoPlayback"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To quickly get started you can add a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/AGCamera"},{"type":"text","text":", make it resizable and apply an aspect ratio."}]},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import AsyncGraphics","","struct ContentView: View {","    var body: some View {","        AGView {","            AGZStack {","                AGCamera(.front)","                    .resizable()","                    .aspectRatio(contentMode: .fit)","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To get more control over the capturing we can use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic"},{"type":"text","text":"s."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We start by creating a "},{"type":"codeVoice","code":"State"},{"type":"text","text":" variable for our "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic"},{"type":"text","text":". This will update 60 times a second."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then we check if the graphic is available and display it with a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicView"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a task where we can execute async code. Here we also need a do catch block incase the selected camera is not available."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the task we will create a asynchronous for loop, by iterating over live camera frames from "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(_:device:preset:)"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then lastly we save each frame to the main graphic state. Here you can also add effects such as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/blurred(radius:)"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import AsyncGraphics","","struct ContentView: View {","","    @State private var graphic: Graphic?","","    var body: some View {","        ZStack {","            if let graphic = graphic {","                GraphicView(graphic: graphic)","            } else {","                ProgressView()","            }","        }","        .frame(maxWidth: .infinity, maxHeight: .infinity)","        .task {","            do {","                for await cameraGraphic in try Graphic.camera(.front) {","                    graphic = cameraGraphic","                }","            } catch {","                fatalError()","            }","        }","    }","}"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to record live "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic"},{"type":"text","text":"s, use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicRecorder"},{"type":"text","text":"."}]}],"type":"aside","name":"Note"}]}],"variants":[{"paths":["\/documentation\/asyncgraphics\/camera"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Camera","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Capture live footage from the camera."}],"kind":"article","metadata":{"modules":[{"name":"AsyncGraphics"}],"role":"collectionGroup","title":"Camera"},"hierarchy":{"paths":[["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics"]]},"topicSections":[{"title":"Camera","identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(_:device:preset:)"]}],"references":{"doc://AsyncGraphics/documentation/AsyncGraphics":{"role":"collection","title":"AsyncGraphics","abstract":[{"type":"text","text":"Edit images and video with async \/ await in Swift, powered by Metal."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics","kind":"symbol","type":"topic","url":"\/documentation\/asyncgraphics"},"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicView":{"role":"symbol","title":"GraphicView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GraphicView"}],"abstract":[{"type":"text","text":"SwiftUI view for displaying a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic"},{"type":"text","text":"."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GraphicView"}],"url":"\/documentation\/asyncgraphics\/graphicview"},"doc://AsyncGraphics/documentation/AsyncGraphics/Blending":{"role":"collectionGroup","title":"Blending","abstract":[{"type":"text","text":"Blend graphics with the z stacks and blending modes."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Blending","kind":"article","type":"topic","url":"\/documentation\/asyncgraphics\/blending"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/blurred(radius:)":{"role":"symbol","title":"blurred(radius:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"blurred"},{"kind":"text","text":"("},{"kind":"externalParam","text":"radius"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Graphic","preciseIdentifier":"s:13AsyncGraphics7GraphicV"}],"abstract":[],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/blurred(radius:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncgraphics\/graphic\/blurred(radius:)"},"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicRecorder":{"deprecated":true,"role":"symbol","title":"GraphicRecorder","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"GraphicRecorder"}],"abstract":[],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicRecorder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GraphicRecorder"}],"url":"\/documentation\/asyncgraphics\/graphicrecorder"},"doc://AsyncGraphics/documentation/AsyncGraphics/VideoEditing":{"role":"collectionGroup","title":"Video Editing","abstract":[{"type":"text","text":"Edit a video by applying various effects."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoEditing","kind":"article","type":"topic","url":"\/documentation\/asyncgraphics\/videoediting"},"doc://AsyncGraphics/documentation/AsyncGraphics/VideoPlayback":{"role":"collectionGroup","title":"Video Playback","abstract":[{"type":"text","text":"Create a video player UI with a play \/ pause button and a slider as a time seeker."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoPlayback","kind":"article","type":"topic","url":"\/documentation\/asyncgraphics\/videoplayback"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic":{"role":"symbol","title":"Graphic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graphic"}],"abstract":[{"type":"text","text":"A Graphic is like an image, but itâ€™s backed by a "},{"type":"codeVoice","code":"MTLTexture"},{"type":"text","text":"."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Graphic"}],"url":"\/documentation\/asyncgraphics\/graphic"},"doc://AsyncGraphics/documentation/AsyncGraphics/Layout":{"role":"collectionGroup","title":"Layout","abstract":[{"type":"text","text":"Layout graphics with stacks, frames and padding."}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Layout","kind":"article","type":"topic","url":"\/documentation\/asyncgraphics\/layout"},"doc://AsyncGraphics/documentation/AsyncGraphics/AGCamera":{"role":"symbol","title":"AGCamera","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AGCamera"}],"abstract":[],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/AGCamera","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AGCamera"}],"url":"\/documentation\/asyncgraphics\/agcamera"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/camera(_:device:preset:)":{"role":"symbol","title":"camera(_:device:preset:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"camera"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Graphic","preciseIdentifier":"s:13AsyncGraphics7GraphicV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CameraPosition","preciseIdentifier":"s:13AsyncGraphics7GraphicV14CameraPositionO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"device"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVCaptureDevice","preciseIdentifier":"c:objc(cs)AVCaptureDevice"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"DeviceType","preciseIdentifier":"c:@T@AVCaptureDeviceType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"preset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVCaptureSession","preciseIdentifier":"c:objc(cs)AVCaptureSession"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Preset","preciseIdentifier":"c:@T@AVCaptureSessionPreset"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Graphic","preciseIdentifier":"s:13AsyncGraphics7GraphicV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Async live stream from the camera"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(_:device:preset:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/asyncgraphics\/graphic\/camera(_:device:preset:)"}}}
=======
{"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"To quickly get started you can add a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/AGCamera"},{"type":"text","text":", make it resizable and apply an aspect ratio."}]},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import AsyncGraphics","","struct ContentView: View {","    var body: some View {","        AGView {","            AGZStack {","                AGCamera(.front)","                    .resizable()","                    .aspectRatio(contentMode: .fit)","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To get more control over the capturing we can use "},{"isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic","type":"reference"},{"text":"s.","type":"text"}]},{"inlineContent":[{"text":"We start by creating a ","type":"text"},{"type":"codeVoice","code":"State"},{"text":" variable for our ","type":"text"},{"type":"reference","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic","isActive":true},{"type":"text","text":". This will update 60 times a second."}],"type":"paragraph"},{"inlineContent":[{"text":"Then we check if the graphic is available and display it with a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicView"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"Create a task where we can execute async code. Here we also need a do catch block incase the selected camera is not available.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"In the task we will create a asynchronous for loop, by iterating over live camera frames from ","type":"text"},{"type":"reference","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(at:lens:quality:)","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then lastly we save each frame to the main graphic state. Here you can also add effects such as "},{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/blurred(radius:)","type":"reference","isActive":true},{"type":"text","text":"."}]},{"syntax":"swift","type":"codeListing","code":["import SwiftUI","import AsyncGraphics","","struct ContentView: View {","","    @State private var graphic: Graphic?","","    var body: some View {","        ZStack {","            if let graphic = graphic {","                GraphicView(graphic: graphic)","            } else {","                ProgressView()","            }","        }","        .frame(maxWidth: .infinity, maxHeight: .infinity)","        .task {","            do {","                for await cameraGraphic in try Graphic.camera(.front) {","                    graphic = cameraGraphic","                }","            } catch {","                fatalError()","            }","        }","    }","}"]},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to record live "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic"},{"type":"text","text":"s, use the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicRecorder"},{"text":".","type":"text"}]}],"type":"aside"}]}],"topicSections":[{"title":"Camera","identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(with:)","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(device:quality:)","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(at:lens:quality:)"]}],"hierarchy":{"paths":[["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Blending","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Layout","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoEditing","doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoPlayback"],"generated":true}],"metadata":{"modules":[{"name":"AsyncGraphics"}],"role":"collectionGroup","title":"Camera"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Camera"},"abstract":[{"type":"text","text":"Capture live footage from the camera."}],"variants":[{"paths":["\/documentation\/asyncgraphics\/camera"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"article","references":{"doc://AsyncGraphics/documentation/AsyncGraphics/AGCamera":{"kind":"symbol","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/AGCamera","type":"topic","title":"AGCamera","navigatorTitle":[{"kind":"identifier","text":"AGCamera"}],"url":"\/documentation\/asyncgraphics\/agcamera","abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AGCamera","kind":"identifier"}]},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/camera(with:)":{"title":"camera(with:)","abstract":[{"type":"text","text":"Async live stream from the camera"}],"url":"\/documentation\/asyncgraphics\/graphic\/camera(with:)","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(with:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"camera","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13AsyncGraphics7GraphicV","kind":"typeIdentifier","text":"Graphic"},{"kind":"text","text":"."},{"preciseIdentifier":"s:13AsyncGraphics7GraphicV6CameraC","kind":"typeIdentifier","text":"Camera"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:13AsyncGraphics7GraphicV","text":"Graphic","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic":{"role":"symbol","abstract":[{"text":"A Graphic is like an image, but itâ€™s backed by a ","type":"text"},{"type":"codeVoice","code":"MTLTexture"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Graphic","kind":"identifier"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Graphic","kind":"identifier"}],"url":"\/documentation\/asyncgraphics\/graphic","type":"topic","title":"Graphic","kind":"symbol"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/camera(at:lens:quality:)":{"title":"camera(at:lens:quality:)","abstract":[{"text":"Async live stream from the camera","type":"text"}],"url":"\/documentation\/asyncgraphics\/graphic\/camera(at:lens:quality:)","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(at:lens:quality:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"camera"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13AsyncGraphics7GraphicV","kind":"typeIdentifier","text":"Graphic"},{"kind":"text","text":"."},{"preciseIdentifier":"s:13AsyncGraphics7GraphicV14CameraPositionO","text":"CameraPosition","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"lens"},{"kind":"text","text":": "},{"text":"AVCaptureDevice","preciseIdentifier":"c:objc(cs)AVCaptureDevice","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"DeviceType","preciseIdentifier":"c:@T@AVCaptureDeviceType"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"quality"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)AVCaptureSession","text":"AVCaptureSession"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@T@AVCaptureSessionPreset","kind":"typeIdentifier","text":"Preset"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:ScS","text":"AsyncStream"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Graphic","preciseIdentifier":"s:13AsyncGraphics7GraphicV"},{"kind":"text","text":">"}]},"doc://AsyncGraphics/documentation/AsyncGraphics":{"url":"\/documentation\/asyncgraphics","kind":"symbol","abstract":[{"type":"text","text":"Edit images and video with async \/ await in Swift, powered by Metal."}],"role":"collection","type":"topic","title":"AsyncGraphics","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/camera(device:quality:)":{"title":"camera(device:quality:)","abstract":[{"type":"text","text":"Async live stream from the camera"}],"url":"\/documentation\/asyncgraphics\/graphic\/camera(device:quality:)","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/camera(device:quality:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"camera"},{"text":"(","kind":"text"},{"text":"device","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVCaptureDevice","preciseIdentifier":"c:objc(cs)AVCaptureDevice"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"quality"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)AVCaptureSession","kind":"typeIdentifier","text":"AVCaptureSession"},{"kind":"text","text":"."},{"text":"Preset","kind":"typeIdentifier","preciseIdentifier":"c:@T@AVCaptureSessionPreset"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:ScS","text":"AsyncStream","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Graphic","preciseIdentifier":"s:13AsyncGraphics7GraphicV","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicRecorder":{"role":"symbol","url":"\/documentation\/asyncgraphics\/graphicrecorder","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GraphicRecorder","kind":"identifier"}],"deprecated":true,"title":"GraphicRecorder","abstract":[],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicRecorder","navigatorTitle":[{"kind":"identifier","text":"GraphicRecorder"}],"type":"topic","kind":"symbol"},"doc://AsyncGraphics/documentation/AsyncGraphics/Blending":{"kind":"article","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Blending","title":"Blending","abstract":[{"type":"text","text":"Blend graphics with the z stacks and blending modes."}],"role":"collectionGroup","type":"topic","url":"\/documentation\/asyncgraphics\/blending"},"doc://AsyncGraphics/documentation/AsyncGraphics/VideoEditing":{"role":"collectionGroup","url":"\/documentation\/asyncgraphics\/videoediting","title":"Video Editing","abstract":[{"text":"Edit a video by applying various effects.","type":"text"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoEditing","type":"topic","kind":"article"},"doc://AsyncGraphics/documentation/AsyncGraphics/GraphicView":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GraphicView"}],"title":"GraphicView","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/GraphicView","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GraphicView"}],"abstract":[{"type":"text","text":"SwiftUI view for displaying a "},{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic","type":"reference","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/asyncgraphics\/graphicview","kind":"symbol"},"doc://AsyncGraphics/documentation/AsyncGraphics/VideoPlayback":{"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/VideoPlayback","role":"collectionGroup","url":"\/documentation\/asyncgraphics\/videoplayback","abstract":[{"text":"Create a video player UI with a play \/ pause button and a slider as a time seeker.","type":"text"}],"title":"Video Playback","type":"topic","kind":"article"},"doc://AsyncGraphics/documentation/AsyncGraphics/Layout":{"kind":"article","type":"topic","url":"\/documentation\/asyncgraphics\/layout","identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Layout","role":"collectionGroup","abstract":[{"type":"text","text":"Layout graphics with stacks, frames and padding."}],"title":"Layout"},"doc://AsyncGraphics/documentation/AsyncGraphics/Graphic/blurred(radius:)":{"role":"symbol","url":"\/documentation\/asyncgraphics\/graphic\/blurred(radius:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"blurred","kind":"identifier"},{"kind":"text","text":"("},{"text":"radius","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier","text":"CGFloat"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:13AsyncGraphics7GraphicV","text":"Graphic","kind":"typeIdentifier"}],"title":"blurred(radius:)","abstract":[{"text":"Gaussian Blur","type":"text"}],"identifier":"doc:\/\/AsyncGraphics\/documentation\/AsyncGraphics\/Graphic\/blurred(radius:)","type":"topic","kind":"symbol"}}}
>>>>>>> b50526e0 (v2 Docs)
